{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\Desktop\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\registerUser.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport { Form, Loader } from \"semantic-ui-react\";\nimport getWeb3 from \"../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Router from \"next/router\";\nvar adminTitle = {\n  color: \"red\",\n  marginBottom: \"5%\",\n  fontSize: \"3em\",\n  textAlign: \"center\"\n};\nvar adminFields = {\n  margin: \"auto 5% auto 5%\"\n};\n/**\r\n * Register User Page - a Page where user can see all existing group and/or join a new group\r\n * DISCLAMER - majority of the code is based on vote.js written by Simon Wang\r\n * \r\n * @author Brandon Wong\r\n * @author Simon Wang\r\n */\n\nvar RegisterUser = function RegisterUser() {\n  _s();\n\n  var web3Instance;\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(true),\n      Load = _useState2[0],\n      setLoad = _useState2[1];\n\n  var _useState3 = useState(false),\n      registeringUser = _useState3[0],\n      setRegisteringUser = _useState3[1];\n\n  var _useState4 = useState(false),\n      errorRegister = _useState4[0],\n      setErrorRegister = _useState4[1];\n\n  var _useState5 = useState(''),\n      username = _useState5[0],\n      setUsername = _useState5[1];\n\n  var _useState6 = useState(''),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      password = _useState7[0],\n      setPassword = _useState7[1];\n\n  var _useState8 = useState(''),\n      studentID = _useState8[0],\n      setStudentID = _useState8[1];\n\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, [Load]);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n      var factoryContract, user, setupVoteFactory, registerUser, displayUser, displayDefaultGroup, displayGroups;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              event.preventDefault();\n\n              // Initializes VoteFactory Contract\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var networkId, deployedNetwork, instance, _yield$web3$eth$getAc, _yield$web3$eth$getAc2;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context2.next = 2;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\");\n\n                        case 2:\n                          _context2.prev = 2;\n                          _context2.next = 5;\n                          return web3.eth.net.getId();\n\n                        case 5:\n                          networkId = _context2.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance;\n                          _context2.next = 11;\n                          return web3.eth.getAccounts();\n\n                        case 11:\n                          _yield$web3$eth$getAc = _context2.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          user = _yield$web3$eth$getAc2[0];\n                          _context2.next = 20;\n                          break;\n\n                        case 16:\n                          _context2.prev = 16;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context2.t0);\n\n                        case 20:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 16]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }(); // Calls VoteFactory Contract to create a new instance of Group\n\n\n              registerUser = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var error, temp;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          setRegisteringUser(true);\n                          error = \"\";\n\n                          if (!(factoryContract == '')) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\");\n\n                        case 4:\n                          // Calls the method createGroup from VoteFactory.sol\n                          // TO FIX Verify that is a valid email\n                          temp = email.split(\"@\");\n\n                          if (!(temp[1] === \"mcgill.ca\") && !(temp[1] === \"mail.mcgill.ca\")) {\n                            error += \"Wrong email format. Make sure to use a McGill email e.g., @mcgill.ca or @mail.mcgill.ca \\n\";\n                          }\n\n                          if (studentID.length != 9) {\n                            error += \"Wrong student ID format. Make sure that the student ID has a length of 9 digits\";\n                          }\n\n                          if (error.length != 0) {\n                            alert(error);\n                            setErrorRegister(true);\n                          }\n\n                          _context3.prev = 8;\n                          _context3.next = 11;\n                          return factoryContract.methods.registerUser(username, email, studentID, password).send({\n                            from: user\n                          });\n\n                        case 11:\n                          _context3.next = 16;\n                          break;\n\n                        case 13:\n                          _context3.prev = 13;\n                          _context3.t0 = _context3[\"catch\"](8);\n                          alert(_context3.t0);\n\n                        case 16:\n                          setRegisteringUser(false);\n                          setLoad(!Load);\n\n                        case 18:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[8, 13]]);\n                }));\n\n                return function registerUser() {\n                  return _ref3.apply(this, arguments);\n                };\n              }(); // Verify the values of the newly created instance of Group\n\n\n              displayUser = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          if (errorRegister) {\n                            _context4.next = 5;\n                            break;\n                          }\n\n                          _context4.next = 3;\n                          return factoryContract.methods.getUser(user).call();\n\n                        case 3:\n                          summary = _context4.sent;\n                          console.log(summary);\n\n                        case 5:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function displayUser() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              displayDefaultGroup = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (errorRegister) {\n                            _context5.next = 5;\n                            break;\n                          }\n\n                          _context5.next = 3;\n                          return factoryContract.methods.getGroup(0).call();\n\n                        case 3:\n                          summary = _context5.sent;\n                          console.log(summary);\n\n                        case 5:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function displayDefaultGroup() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              displayGroups = /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if (errorRegister) {\n                            _context6.next = 5;\n                            break;\n                          }\n\n                          _context6.next = 3;\n                          return factoryContract.methods.getUserAllGroups(user).call();\n\n                        case 3:\n                          summary = _context6.sent;\n                          console.log(summary);\n\n                        case 5:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function displayGroups() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              _context7.next = 8;\n              return setupVoteFactory();\n\n            case 8:\n              _context7.next = 10;\n              return registerUser();\n\n            case 10:\n              _context7.next = 12;\n              return displayUser();\n\n            case 12:\n              _context7.next = 14;\n              return displayDefaultGroup();\n\n            case 14:\n              _context7.next = 16;\n              return displayGroups();\n\n            case 16:\n              Router.push(\"/loginUser\");\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    style: adminTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Register\"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: adminFields,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Username\",\n    value: username,\n    onChange: function onChange(event) {\n      return setUsername(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Email\",\n    value: email,\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"StudentID\",\n    value: studentID,\n    onChange: function onChange(event) {\n      return setStudentID(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: function onChange(event) {\n      return setPassword(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }), __jsx(Loader, {\n    active: registeringUser,\n    inline: \"centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"Register\"))));\n};\n\n_s(RegisterUser, \"Bo15k0kqGy/d9abVOvIDi41jLcE=\");\n\n_c = RegisterUser;\nexport default RegisterUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"sources":["C:/Users/foubroker/Desktop/voting-at-mcgill/client/src/pages/registerUser.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","Form","Loader","getWeb3","Router","adminTitle","color","marginBottom","fontSize","textAlign","adminFields","margin","RegisterUser","web3Instance","web3","setWeb3","Load","setLoad","registeringUser","setRegisteringUser","errorRegister","setErrorRegister","username","setUsername","email","setEmail","password","setPassword","studentID","setStudentID","initWeb3","onSubmit","event","preventDefault","setupVoteFactory","eth","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","getAccounts","user","alert","console","error","registerUser","temp","split","length","methods","send","from","displayUser","getUser","call","summary","log","displayDefaultGroup","getGroup","displayGroups","getUserAllGroups","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../components/header';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport { Form, Loader  } from \"semantic-ui-react\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Router from \"next/router\";\r\n\r\nconst adminTitle = {\r\n    color: \"red\",\r\n    marginBottom: \"5%\",\r\n    fontSize: \"3em\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst adminFields = {\r\n    margin: \"auto 5% auto 5%\"\r\n};\r\n\r\n/**\r\n * Register User Page - a Page where user can see all existing group and/or join a new group\r\n * DISCLAMER - majority of the code is based on vote.js written by Simon Wang\r\n * \r\n * @author Brandon Wong\r\n * @author Simon Wang\r\n */\r\nconst RegisterUser = () => {\r\n\r\n    var web3Instance;\r\n    const [web3, setWeb3] = useState('');\r\n    const [Load, setLoad] = useState(true);\r\n    const [registeringUser, setRegisteringUser] = useState(false);\r\n    const [errorRegister, setErrorRegister] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [studentID, setStudentID] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        initWeb3();\r\n    },[Load]);\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var factoryContract;\r\n        var user;\r\n\r\n        // Initializes VoteFactory Contract\r\n        var setupVoteFactory = async () => {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                [user] = (await web3.eth.getAccounts());\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        // Calls VoteFactory Contract to create a new instance of Group\r\n        var registerUser = async () => {\r\n            setRegisteringUser(true);\r\n            var error = ``;\r\n\r\n            if(factoryContract == ''){\r\n                return;\r\n            }\r\n            // Calls the method createGroup from VoteFactory.sol\r\n            // TO FIX Verify that is a valid email\r\n            var temp = email.split(\"@\");\r\n            if (!(temp[1] === \"mcgill.ca\") && !(temp[1] === \"mail.mcgill.ca\")) {\r\n                error += `Wrong email format. Make sure to use a McGill email e.g., @mcgill.ca or @mail.mcgill.ca \\n`;\r\n            }\r\n\r\n            if (studentID.length != 9) {\r\n                error += `Wrong student ID format. Make sure that the student ID has a length of 9 digits`;\r\n            }\r\n\r\n            if (error.length != 0) {\r\n                alert(error);\r\n                setErrorRegister(true);\r\n            }\r\n\r\n            try {\r\n                await factoryContract.methods.registerUser(username, email, studentID, password).send({\r\n                    from: user\r\n                });\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n\r\n            setRegisteringUser(false);\r\n            setLoad(!Load);\r\n        };\r\n\r\n        // Verify the values of the newly created instance of Group\r\n        var displayUser = async () => {\r\n            if (!errorRegister) {\r\n                const summary = await factoryContract.methods.getUser(user).call();\r\n                console.log(summary);\r\n            }\r\n        };\r\n\r\n        var displayDefaultGroup = async () => {\r\n            if (!errorRegister) {\r\n                const summary = await factoryContract.methods.getGroup(0).call();\r\n                console.log(summary);\r\n            }\r\n        };\r\n\r\n        var  displayGroups = async () => {\r\n            if (!errorRegister) {\r\n                const summary = await factoryContract.methods.getUserAllGroups(user).call();\r\n                console.log(summary);\r\n            }\r\n        };\r\n\r\n        await setupVoteFactory();\r\n        await registerUser();\r\n        await displayUser();\r\n        await displayDefaultGroup();\r\n        await displayGroups();\r\n        Router.push(\"/loginUser\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1 style={adminTitle}>Register</h1>\r\n\r\n            <Form onSubmit={onSubmit} style={adminFields}>\r\n                <div>\r\n                    <Form.Input required label=\"Username\"\r\n                                 value={username}\r\n                                 onChange={event => setUsername(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input required label=\"Email\"\r\n                                 value={email}\r\n                                 onChange={event => setEmail(event.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input required label=\"StudentID\"\r\n                                 value={studentID}\r\n                                 onChange={event => setStudentID(event.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input required label=\"Password\"\r\n                                 type=\"password\"\r\n                                 value={password}\r\n                                 onChange={event => setPassword(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n                <br></br>\r\n                <Loader\r\n                        active={registeringUser}\r\n                        inline='centered'\r\n                />\r\n                <br></br>\r\n                <div>\r\n                    <Form.Button>Cancel</Form.Button>\r\n                    <Form.Button type=\"submit\" onSubmit={onSubmit}>Register</Form.Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterUser;\r\n"]},"metadata":{},"sourceType":"module"}