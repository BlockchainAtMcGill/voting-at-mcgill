{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\newGroup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport { Form } from \"semantic-ui-react\";\nimport getWeb3 from \"../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\nvar adminTitle = {\n  color: \"red\",\n  marginBottom: \"5%\",\n  fontSize: \"3em\",\n  textAlign: \"center\"\n};\nvar adminFields = {\n  margin: \"auto 5% auto 5%\"\n};\n\nvar NewGroup = function NewGroup() {\n  _s();\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var web3Instance;\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []);\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n      var manager, factoryContract, voteContract, addressOfVote, setupVoteFactory, createVote, getElectionAddress, initializeElection, setUpElection, displayVote;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              event.preventDefault();\n\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context2.next = 2;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\");\n\n                        case 2:\n                          _context2.prev = 2;\n                          _context2.next = 5;\n                          return web3.eth.getAccounts();\n\n                        case 5:\n                          _yield$web3$eth$getAc = _context2.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          manager = _yield$web3$eth$getAc2[0];\n                          _context2.next = 10;\n                          return web3.eth.net.getId();\n\n                        case 10:\n                          networkId = _context2.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context2.next = 20;\n                          break;\n\n                        case 16:\n                          _context2.prev = 16;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context2.t0);\n\n                        case 20:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 16]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              createVote = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!(factoryContract == '')) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\");\n\n                        case 2:\n                          _context3.next = 4;\n                          return factoryContract.methods.createVote(0).send({\n                            from: manager\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function createVote() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              getElectionAddress = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return factoryContract.methods.getDeployedVotes().call();\n\n                        case 2:\n                          response = _context4.sent;\n                          addressOfVote = response[response.length - 1];\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function getElectionAddress() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              initializeElection = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  var instance;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.prev = 0;\n                          _context5.next = 3;\n                          return new web3.eth.Contract(VoteContract.abi, addressOfVote);\n\n                        case 3:\n                          instance = _context5.sent;\n                          voteContract = instance;\n                          _context5.next = 11;\n                          break;\n\n                        case 7:\n                          _context5.prev = 7;\n                          _context5.t0 = _context5[\"catch\"](0);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context5.t0);\n\n                        case 11:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5, null, [[0, 7]]);\n                }));\n\n                return function initializeElection() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              setUpElection = /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if (voteContract) {\n                            _context6.next = 3;\n                            break;\n                          }\n\n                          console.log(\"voteContract dne\");\n                          return _context6.abrupt(\"return\");\n\n                        case 3:\n                          _context6.next = 5;\n                          return voteContract.methods.editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, electionType).send({\n                            from: manager\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function setUpElection() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              displayVote = /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return voteContract.methods.currentElection().call();\n\n                        case 2:\n                          summary = _context7.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function displayVote() {\n                  return _ref7.apply(this, arguments);\n                };\n              }();\n\n              _context8.next = 9;\n              return setupVoteFactory();\n\n            case 9:\n              _context8.next = 11;\n              return createVote();\n\n            case 11:\n              _context8.next = 13;\n              return getElectionAddress();\n\n            case 13:\n              _context8.next = 15;\n              return initializeElection();\n\n            case 15:\n              _context8.next = 17;\n              return setUpElection();\n\n            case 17:\n              _context8.next = 19;\n              return displayVote();\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    style: adminTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"New Election\"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: adminFields,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Group name\",\n    value: title,\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(Form.TextArea, {\n    required: true,\n    label: \"Description\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Create Group\"))));\n};\n\n_s(NewGroup, \"C9EauCJXgJW0Zm0Ie0ZjYGk7uHs=\");\n\n_c = NewGroup;\nexport default newGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/newGroup.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","Form","getWeb3","adminTitle","color","marginBottom","fontSize","textAlign","adminFields","margin","NewGroup","web3","setWeb3","web3Instance","initWeb3","title","setName","description","setDescription","onSubmit","event","preventDefault","setupVoteFactory","eth","getAccounts","manager","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","alert","console","error","createVote","methods","send","from","getElectionAddress","getDeployedVotes","call","response","addressOfVote","length","initializeElection","voteContract","setUpElection","log","editElection","Date","startDate","getTime","endDate","electionType","displayVote","currentElection","summary","target","value","newGroup"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../components/header';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst adminTitle = {\r\n    color: \"red\",\r\n    marginBottom: \"5%\",\r\n    fontSize: \"3em\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst adminFields = {\r\n    margin: \"auto 5% auto 5%\"\r\n};\r\n\r\nconst NewGroup = () => {\r\n\r\n    const [web3, setWeb3] = useState('');\r\n    var web3Instance;\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        initWeb3();\r\n    },[]);\r\n\r\n    const [title, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var manager;\r\n        var factoryContract;\r\n        var voteContract;\r\n        var addressOfVote;\r\n        \r\n        var setupVoteFactory = async () => { //initializes voteFactory\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                [manager] = (await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var createVote = async () => {//uses voteFactory to create Vote\r\n            if(factoryContract == ''){\r\n                return;\r\n            }\r\n            // Get the value from the contract to prove it worked.\r\n            await factoryContract.methods.createVote(0).send({\r\n                from: manager\r\n            });\r\n        };\r\n        var getElectionAddress = async () => {//calls voteFactory method to get new Vote address\r\n            const response = await factoryContract.methods.getDeployedVotes().call();\r\n            addressOfVote = response[response.length - 1];\r\n        };\r\n        var initializeElection = async () => {//initializes vote contract\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    addressOfVote,\r\n                );\r\n                voteContract = instance;\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var setUpElection = async() => {//call to vote contract to edit election\r\n            if (!voteContract) {\r\n                console.log(\"voteContract dne\");\r\n                return;\r\n            }\r\n            await voteContract.methods\r\n                .editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, electionType)\r\n                .send({\r\n                    from: manager\r\n                })\r\n        };\r\n\r\n        var displayVote = async () => { // testing purposes\r\n            const summary = await voteContract.methods.currentElection().call();\r\n            console.log(summary);\r\n        };\r\n        await setupVoteFactory();\r\n        await createVote();\r\n        await getElectionAddress();\r\n        await initializeElection();\r\n        await setUpElection();\r\n        await displayVote();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1 style={adminTitle}>New Election</h1>\r\n            \r\n            <Form onSubmit={onSubmit} style={adminFields}>\r\n                <div>\r\n                    <Form.Input required label=\"Group name\"\r\n                                 value={title}\r\n                                 onChange={event => setName(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n\r\n                <br></br>\r\n                \r\n                <div>\r\n                    <Form.TextArea required\r\n                                 label=\"Description\"\r\n                                 value={description}\r\n                                 onChange={event => setDescription(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                \r\n                <div>\r\n                    <Form.Button>Cancel</Form.Button>\r\n                    <Form.Button type=\"submit\" onSubmit={onSubmit}>Create Group</Form.Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n};\r\nexport default newGroup;\r\n"]},"metadata":{},"sourceType":"module"}