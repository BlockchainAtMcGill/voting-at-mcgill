{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\elections\\\\vote\\\\vote.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\n\nconst Vote = () => {\n  var web3Instance;\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState('');\n  const {\n    0: voteAddress,\n    1: setVoteAddress\n  } = useState('');\n  const {\n    0: currentVote,\n    1: setCurrentVote\n  } = useState('');\n  const {\n    0: candidates,\n    1: setCandidates\n  } = useState('');\n  useEffect(() => {\n    async function initWeb3() {\n      web3Instance = await getWeb3();\n      setWeb3(web3Instance);\n    }\n\n    var getElectionAddress = async () => {\n      const url = window.location.href;\n      const pos = url.indexOf('vote') + 5;\n      setVoteAddress(url.slice(pos));\n      console.log(voteAddress);\n    };\n\n    initWeb3();\n    getElectionAddress();\n  }, []);\n  useEffect(() => {\n    async function setupVote() {\n      if (web3 == '') {\n        return;\n      }\n\n      try {\n        // Get the contract instance.\n        const instance = await new web3.eth.Contract(VoteContract.abi, voteAddress);\n        setCurrentVote(await instance.methods.currentElection().call());\n        var array = [];\n\n        for (var i = 0; i < 3; i++) {\n          array.push(await instance.methods.candidateArray(i).call());\n        }\n\n        console.log(array);\n        setCandidates(array); // Set web3, accounts, and contract to the state, and then proceed with an\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setupVote();\n  }, [web3]);\n  useEffect(() => {\n    console.log(candidates);\n  }, [candidates]);\n  const long = {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto'\n  };\n\n  function displayCandidates() {\n    if (candidates == \"\") {\n      return \"no candidates yet\";\n    }\n\n    return candidates.map((candidate, index) => __jsx(\"div\", {\n      class: \"ui card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      class: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      class: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, __jsx(\"i\", {\n      className: \"user icon large right floated mini ui image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), candidate.name)), __jsx(\"div\", {\n      class: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, candidate.candidateAddr), __jsx(\"div\", {\n      class: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, candidate.description)))));\n  }\n\n  function formatVote() {\n    if (currentVote) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, currentVote.title), __jsx(\"div\", {\n        className: \"meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, Date(currentVote.startDate).slice(0, -42), \" to \", Date(currentVote.endDate).slice(0, -42)), __jsx(\"div\", {\n        className: \"ui card\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, currentVote.description)))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '50px',\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, displayCandidates()), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, __jsx(Link, {\n        route: `/elections/apply/${voteAddress}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 26\n        }\n      }, __jsx(\"i\", {\n        className: \"plus icon large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 75\n        }\n      })))), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"extra content\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        className: \"check icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }), currentVote.numVotes, \" Votes\")));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \" loading vote ...\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, formatVote()));\n};\n\nexport default Vote;","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/elections/vote/vote.js"],"names":["React","useEffect","useState","Header","getWeb3","VoteContract","Link","Vote","web3Instance","web3","setWeb3","voteAddress","setVoteAddress","currentVote","setCurrentVote","candidates","setCandidates","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","console","log","setupVote","instance","eth","Contract","abi","methods","currentElection","call","array","i","push","candidateArray","error","alert","long","width","texAlign","margin","displayCandidates","map","candidate","index","name","candidateAddr","description","formatVote","color","title","Date","startDate","endDate","textAlign","numVotes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Header } from '../../../components/header'\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from '../../../../routes'\r\nconst Vote = () => {\r\n    var web3Instance;\r\n    const [web3, setWeb3] = useState('');\r\n    const [voteAddress, setVoteAddress] = useState('')\r\n    const [currentVote, setCurrentVote] = useState('')\r\n    const [candidates, setCandidates ] = useState('')\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('vote')+5;\r\n            setVoteAddress(url.slice(pos));\r\n            console.log(voteAddress);\r\n          };\r\n        initWeb3();\r\n        getElectionAddress();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        async function setupVote() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    voteAddress\r\n                );\r\n                setCurrentVote(await instance.methods.currentElection().call());\r\n                var array = []\r\n                for (var i = 0; i < 3; i++){\r\n                    array.push(await instance.methods.candidateArray(i).call())\r\n                }\r\n                console.log(array);\r\n                setCandidates(array);\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n            }\r\n        }\r\n        setupVote();\r\n    },[web3])\r\n    useEffect(()=>{console.log(candidates)},[candidates])\r\n\r\n    const long = {\r\n        width: '90%',\r\n        texAlign:'center',\r\n        margin: 'auto'\r\n    }\r\n    function displayCandidates() {\r\n        if (candidates == \"\"){\r\n            return \"no candidates yet\"\r\n        }\r\n        return candidates.map((candidate,index) =>\r\n        <div class=\"ui card\">\r\n            <div class=\"card\">\r\n                <div class=\"content\">\r\n                    <div class=\"header\">\r\n                    <p> \r\n                        <i className=\"user icon large right floated mini ui image\"></i>\r\n                        {candidate.name}\r\n                    </p>\r\n\r\n                    </div>\r\n                    <div class=\"meta\">\r\n                        {candidate.candidateAddr}\r\n                    </div>\r\n                    <div class=\"description\">\r\n                        {candidate.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n    function formatVote() {\r\n        if (currentVote){\r\n            return <>\r\n                <div className=\"ui card\" style={long}>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\" style= {{color: '#f00000'}}>{currentVote.title}</div>\r\n                        <div className=\"meta\">{Date(currentVote.startDate).slice(0,-42)} to {Date(currentVote.endDate).slice(0,-42) }</div>\r\n                        <div className=\"ui card\" style= {{width: '100%'}}>\r\n                            <div className=\"description\" >\r\n                            <p>{currentVote.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{textAlign:'center', margin:'50px', color: '#f00000'}}>\r\n                    <span>{displayCandidates()}</span>\r\n                    {/* <i className=\"user icon large\"></i>\r\n                    <i className=\"user icon large\"></i>\r\n                    <i className=\"user icon large\"></i> */}\r\n                    <div><Link route ={`/elections/apply/${voteAddress}`}><i className=\"plus icon large\"></i></Link>\r\n                    </div>\r\n                    </div>\r\n                    <div>            \r\n                </div>\r\n                    <div className=\"extra content\" style= {{color: '#f00000'}}>\r\n                        <i className=\"check icon\"></i>\r\n                        {currentVote.numVotes} Votes\r\n                    </div>\r\n                </div>\r\n            </>\r\n        }\r\n        else{\r\n            return<div> loading vote ...</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>{formatVote()}</h1>\r\n        </>\r\n    )\r\n}\r\nexport default Vote;"]},"metadata":{},"sourceType":"module"}