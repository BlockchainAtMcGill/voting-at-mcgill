{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\elections\\\\vote\\\\vote.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\n\nvar Vote = function Vote() {\n  _s();\n\n  var web3Instance;\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(''),\n      voteAddress = _useState2[0],\n      setVoteAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      currentVote = _useState3[0],\n      setCurrentVote = _useState3[1];\n\n  var _useState4 = useState(''),\n      candidates = _useState4[0],\n      setCandidates = _useState4[1];\n\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context2.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    var getElectionAddress = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, pos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = window.location.href;\n                pos = url.indexOf('vote') + 5;\n                setVoteAddress(url.slice(pos));\n                console.log(voteAddress);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getElectionAddress() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    initWeb3();\n    getElectionAddress();\n  }, []);\n  useEffect(function () {\n    function setupVote() {\n      return _setupVote.apply(this, arguments);\n    }\n\n    function _setupVote() {\n      _setupVote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance, array, i;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return new web3.eth.Contract(VoteContract.abi, voteAddress);\n\n              case 5:\n                instance = _context3.sent;\n                _context3.t0 = setCurrentVote;\n                _context3.next = 9;\n                return instance.methods.currentElection().call();\n\n              case 9:\n                _context3.t1 = _context3.sent;\n                (0, _context3.t0)(_context3.t1);\n                array = [];\n                i = 0;\n\n              case 13:\n                if (!(i < 3)) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                _context3.t2 = array;\n                _context3.next = 17;\n                return instance.methods.candidateArray(i).call();\n\n              case 17:\n                _context3.t3 = _context3.sent;\n\n                _context3.t2.push.call(_context3.t2, _context3.t3);\n\n              case 19:\n                i++;\n                _context3.next = 13;\n                break;\n\n              case 22:\n                console.log(array);\n                setCandidates(array); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context3.next = 30;\n                break;\n\n              case 26:\n                _context3.prev = 26;\n                _context3.t4 = _context3[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context3.t4);\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 26]]);\n      }));\n      return _setupVote.apply(this, arguments);\n    }\n\n    setupVote();\n  }, [web3]);\n  useEffect(function () {\n    console.log(candidates);\n  }, [candidates]);\n  var long = {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto'\n  };\n\n  function displayCandidates() {\n    var _this2 = this;\n\n    if (candidates == \"\") {\n      return \"no candidates yet\";\n    }\n\n    return candidates.map(function (candidate, index) {\n      return __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, __jsx(\"i\", {\n        className: \"user icon large right floated ui image\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"header\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, candidate.name), __jsx(\"div\", {\n        className: \"meta\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, candidate.candidateAddr), __jsx(\"div\", {\n        className: \"description\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, candidate.description)));\n    });\n  }\n\n  function formatVote() {\n    if (currentVote) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, currentVote.title), __jsx(\"div\", {\n        className: \"meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, Date(currentVote.startDate).slice(0, -42), \" to \", Date(currentVote.endDate).slice(0, -42)), __jsx(\"div\", {\n        className: \"ui card\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, currentVote.description)))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '50px',\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, displayCandidates()), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, __jsx(Link, {\n        route: \"/elections/apply/\".concat(voteAddress),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }\n      }, __jsx(\"i\", {\n        className: \"plus icon large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 75\n        }\n      })))), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"extra content\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        className: \"check icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }), currentVote.numVotes, \" Votes\")));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, \" loading vote ...\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, formatVote()));\n};\n\n_s(Vote, \"3sMcdwCLrn8VKC5Yxv/9yg/MbiY=\");\n\n_c = Vote;\nexport default Vote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/elections/vote/vote.js"],"names":["React","useEffect","useState","Header","getWeb3","VoteContract","Link","Vote","web3Instance","web3","setWeb3","voteAddress","setVoteAddress","currentVote","setCurrentVote","candidates","setCandidates","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","console","log","setupVote","eth","Contract","abi","instance","methods","currentElection","call","array","i","candidateArray","push","alert","error","long","width","texAlign","margin","displayCandidates","map","candidate","index","name","candidateAddr","description","formatVote","color","title","Date","startDate","endDate","textAlign","numVotes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,kCAAP;AACA,SAASC,IAAT,QAAqB,oBAArB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAIC,YAAJ;;AADe,kBAESN,QAAQ,CAAC,EAAD,CAFjB;AAAA,MAERO,IAFQ;AAAA,MAEFC,OAFE;;AAAA,mBAGuBR,QAAQ,CAAC,EAAD,CAH/B;AAAA,MAGRS,WAHQ;AAAA,MAGKC,cAHL;;AAAA,mBAIuBV,QAAQ,CAAC,EAAD,CAJ/B;AAAA,MAIRW,WAJQ;AAAA,MAIKC,cAJL;;AAAA,mBAKsBZ,QAAQ,CAAC,EAAD,CAL9B;AAAA,MAKRa,UALQ;AAAA,MAKIC,aALJ;;AAMff,EAAAA,SAAS,CAAC,YAAM;AAAA,aACGgB,QADH;AAAA;AAAA;;AAAA;AAAA,0EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBb,OAAO,EADhC;;AAAA;AACII,gBAAAA,YADJ;AAEIE,gBAAAA,OAAO,CAACF,YAAD,CAAP;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA;AAAA;;AAKZ,QAAIU,kBAAkB;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,gBAAAA,GADe,GACXC,MAAM,CAACC,QAAP,CAAgBC,IADL;AAEfC,gBAAAA,GAFe,GAEXJ,GAAG,CAACK,OAAJ,CAAY,MAAZ,IAAoB,CAFT;AAGrBZ,gBAAAA,cAAc,CAACO,GAAG,CAACM,KAAJ,CAAUF,GAAV,CAAD,CAAd;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAlBO,kBAAkB;AAAA;AAAA;AAAA,OAAtB;;AAMAD,IAAAA,QAAQ;AACRC,IAAAA,kBAAkB;AACrB,GAbQ,EAaP,EAbO,CAAT;AAeAjB,EAAAA,SAAS,CAAC,YAAM;AAAA,aACG2B,SADH;AAAA;AAAA;;AAAA;AAAA,4EACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACOnB,IAAI,IAAI,EADf;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAM+B,IAAIA,IAAI,CAACoB,GAAL,CAASC,QAAb,CACnBzB,YAAY,CAAC0B,GADM,EAEnBpB,WAFmB,CAN/B;;AAAA;AAMcqB,gBAAAA,QANd;AAAA,+BAUQlB,cAVR;AAAA;AAAA,uBAU6BkB,QAAQ,CAACC,OAAT,CAAiBC,eAAjB,GAAmCC,IAAnC,EAV7B;;AAAA;AAAA;AAAA;AAWYC,gBAAAA,KAXZ,GAWoB,EAXpB;AAYiBC,gBAAAA,CAZjB,GAYqB,CAZrB;;AAAA;AAAA,sBAYwBA,CAAC,GAAG,CAZ5B;AAAA;AAAA;AAAA;;AAAA,+BAaYD,KAbZ;AAAA;AAAA,uBAa6BJ,QAAQ,CAACC,OAAT,CAAiBK,cAAjB,CAAgCD,CAAhC,EAAmCF,IAAnC,EAb7B;;AAAA;AAAA;;AAAA,6BAakBI,IAblB;;AAAA;AAY+BF,gBAAAA,CAAC,EAZhC;AAAA;AAAA;;AAAA;AAeQX,gBAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACApB,gBAAAA,aAAa,CAACoB,KAAD,CAAb,CAhBR,CAiBQ;;AAjBR;AAAA;;AAAA;AAAA;AAAA;AAmBI;AACAI,gBAAAA,KAAK,0EAAL;AAGAd,gBAAAA,OAAO,CAACe,KAAR;;AAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA;AAAA;;AA2BZb,IAAAA,SAAS;AACZ,GA5BQ,EA4BP,CAACnB,IAAD,CA5BO,CAAT;AA6BAR,EAAAA,SAAS,CAAC,YAAI;AAACyB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AAAwB,GAA9B,EAA+B,CAACA,UAAD,CAA/B,CAAT;AAEA,MAAM2B,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,QAAQ,EAAC,QAFA;AAGTC,IAAAA,MAAM,EAAE;AAHC,GAAb;;AAKA,WAASC,iBAAT,GAA6B;AAAA;;AACzB,QAAI/B,UAAU,IAAI,EAAlB,EAAqB;AACjB,aAAO,mBAAP;AACH;;AACD,WAAOA,UAAU,CAACgC,GAAX,CAAe,UAACC,SAAD,EAAWC,KAAX;AAAA,aACtB;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAEP,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,SAAS,CAACE,IADf,CAFJ,EAKI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,SAAS,CAACG,aADf,CALJ,EAQI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,SAAS,CAACI,WADf,CARJ,CAFR,CADsB;AAAA,KAAf,CAAP;AAkBH;;AACD,WAASC,UAAT,GAAsB;AAClB,QAAIxC,WAAJ,EAAgB;AACZ,aAAO,4BACH;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE6B,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAG;AAACY,UAAAA,KAAK,EAAE;AAAR,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDzC,WAAW,CAAC0C,KAAjE,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBC,IAAI,CAAC3C,WAAW,CAAC4C,SAAb,CAAJ,CAA4BhC,KAA5B,CAAkC,CAAlC,EAAoC,CAAC,EAArC,CAAvB,UAAqE+B,IAAI,CAAC3C,WAAW,CAAC6C,OAAb,CAAJ,CAA0BjC,KAA1B,CAAgC,CAAhC,EAAkC,CAAC,EAAnC,CAArE,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAG;AAACkB,UAAAA,KAAK,EAAE;AAAR,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI9B,WAAW,CAACuC,WAAhB,CADA,CADJ,CAHJ,CADJ,EAUI;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAC,QAAX;AAAqBd,UAAAA,MAAM,EAAC,MAA5B;AAAoCS,UAAAA,KAAK,EAAE;AAA3C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOR,iBAAiB,EAAxB,CADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,MAAC,IAAD;AAAM,QAAA,KAAK,6BAAuBnC,WAAvB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiD;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjD,CAAL,CALA,CAVJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAoBI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAG;AAAC2C,UAAAA,KAAK,EAAE;AAAR,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKzC,WAAW,CAAC+C,QAFjB,WApBJ,CADG,CAAP;AA2BH,KA5BD,MA6BI;AACA,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAN;AACH;AACJ;;AAED,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,UAAU,EAAf,CALJ,CADJ;AASH,CA5HD;;GAAM9C,I;;KAAAA,I;AA6HN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Header } from '../../../components/header'\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from '../../../../routes'\r\nconst Vote = () => {\r\n    var web3Instance;\r\n    const [web3, setWeb3] = useState('');\r\n    const [voteAddress, setVoteAddress] = useState('')\r\n    const [currentVote, setCurrentVote] = useState('')\r\n    const [candidates, setCandidates ] = useState('')\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('vote')+5;\r\n            setVoteAddress(url.slice(pos));\r\n            console.log(voteAddress);\r\n          };\r\n        initWeb3();\r\n        getElectionAddress();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        async function setupVote() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    voteAddress\r\n                );\r\n                setCurrentVote(await instance.methods.currentElection().call());\r\n                var array = []\r\n                for (var i = 0; i < 3; i++){\r\n                    array.push(await instance.methods.candidateArray(i).call())\r\n                }\r\n                console.log(array);\r\n                setCandidates(array);\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n            }\r\n        }\r\n        setupVote();\r\n    },[web3])\r\n    useEffect(()=>{console.log(candidates)},[candidates])\r\n\r\n    const long = {\r\n        width: '90%',\r\n        texAlign:'center',\r\n        margin: 'auto'\r\n    }\r\n    function displayCandidates() {\r\n        if (candidates == \"\"){\r\n            return \"no candidates yet\"\r\n        }\r\n        return candidates.map((candidate,index) =>\r\n        <div className=\"ui card\" style={long}>\r\n            \r\n                <div className=\"content\">\r\n                <i className=\"user icon large right floated ui image\"></i>\r\n                    <div className=\"header\">\r\n                        {candidate.name}\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        {candidate.candidateAddr}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        {candidate.description}\r\n                    </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n    function formatVote() {\r\n        if (currentVote){\r\n            return <>\r\n                <div className=\"ui card\" style={long}>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\" style= {{color: '#f00000'}}>{currentVote.title}</div>\r\n                        <div className=\"meta\">{Date(currentVote.startDate).slice(0,-42)} to {Date(currentVote.endDate).slice(0,-42) }</div>\r\n                        <div className=\"ui card\" style= {{width: '100%'}}>\r\n                            <div className=\"description\" >\r\n                            <p>{currentVote.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{textAlign:'center', margin:'50px', color: '#f00000'}}>\r\n                    <span>{displayCandidates()}</span>\r\n                    {/* <i className=\"user icon large\"></i>\r\n                    <i className=\"user icon large\"></i>\r\n                    <i className=\"user icon large\"></i> */}\r\n                    <div><Link route ={`/elections/apply/${voteAddress}`}><i className=\"plus icon large\"></i></Link>\r\n                    </div>\r\n                    </div>\r\n                    <div>            \r\n                </div>\r\n                    <div className=\"extra content\" style= {{color: '#f00000'}}>\r\n                        <i className=\"check icon\"></i>\r\n                        {currentVote.numVotes} Votes\r\n                    </div>\r\n                </div>\r\n            </>\r\n        }\r\n        else{\r\n            return<div> loading vote ...</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>{formatVote()}</h1>\r\n        </>\r\n    )\r\n}\r\nexport default Vote;"]},"metadata":{},"sourceType":"module"}