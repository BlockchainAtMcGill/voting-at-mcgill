{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Header } from '../components/header';\nimport { Link } from '../../routes';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid'; // CommonJS\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar useStyles = makeStyles({\n  card: {\n    width: '80%'\n  }\n});\n\nfunction App() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      votesAddresses = _useState[0],\n      setVotesAddresses = _useState[1];\n\n  var _useState2 = useState(''),\n      web3 = _useState2[0],\n      setWeb3 = _useState2[1];\n\n  var _useState3 = useState(''),\n      accounts = _useState3[0],\n      setAccounts = _useState3[1];\n\n  var _useState4 = useState(''),\n      contract = _useState4[0],\n      setContract = _useState4[1];\n\n  var _useState5 = useState(''),\n      voteContract = _useState5[0],\n      setVoteContract = _useState5[1];\n\n  var _useState6 = useState([]),\n      renderedAddresses = _useState6[0],\n      renderAddresses = _useState6[1];\n\n  useEffect(function () {\n    // get web3\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var web3Instance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('initializing web3');\n                _context.next = 3;\n                return getWeb3();\n\n              case 3:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []);\n  useEffect(function () {\n    // get Factory contract\n    function setup() {\n      return _setup.apply(this, arguments);\n    }\n\n    function _setup() {\n      _setup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var networkId, deployedNetwork, instance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.prev = 2;\n                _context2.t0 = setAccounts;\n                _context2.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                _context2.t1 = _context2.sent;\n                (0, _context2.t0)(_context2.t1);\n                _context2.next = 10;\n                return web3.eth.net.getId();\n\n              case 10:\n                networkId = _context2.sent;\n                deployedNetwork = VoteFactoryContract.networks[networkId];\n                instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                _context2.t2 = setAccounts;\n                _context2.next = 16;\n                return web3.eth.getAccounts();\n\n              case 16:\n                _context2.t3 = _context2.sent;\n                (0, _context2.t2)(_context2.t3);\n                setContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context2.next = 25;\n                break;\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t4 = _context2[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context2.t4);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 21]]);\n      }));\n      return _setup.apply(this, arguments);\n    }\n\n    setup();\n  }, [web3]);\n  useEffect(function () {\n    //just get Vote contract\n    function setup() {\n      return _setup2.apply(this, arguments);\n    }\n\n    function _setup2() {\n      _setup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                try {\n                  // Get the contract instance.\n                  instance = new web3.eth.Contract(VoteContract.abi, votesAddresses[votesAddresses.length - 1]);\n                  setVoteContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n                } catch (error) {\n                  // Catch any errors for any of the above operations.\n                  alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                  console.error(error);\n                }\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _setup2.apply(this, arguments);\n    }\n\n    setup();\n  }, [contract, votesAddresses]);\n  useEffect(function () {\n    //display available votes\n    var displayVotes = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(contract == '')) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return contract.methods.getDeployedVotes().call();\n\n              case 4:\n                response = _context4.sent;\n                // Update state with the result.\n                setVotesAddresses(response);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function displayVotes() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    displayVotes();\n  }, [contract]);\n  useEffect(function () {\n    //render votes\n    var displayInfo = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(address) {\n        var instance;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                _context5.prev = 2;\n                // Get the contract instance.\n                instance = new web3.eth.Contract(VoteContract.abi, address);\n                _context5.next = 6;\n                return instance.methods.currentElection().call();\n\n              case 6:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context5.t0);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 9]]);\n      }));\n\n      return function displayInfo(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var renderVotes = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (votesAddresses) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 2:\n                temp = [];\n                votesAddresses.forEach(function (address) {\n                  displayInfo(address).then(function (newAddress) {\n                    return temp.push(newAddress);\n                  });\n                });\n                renderAddresses(temp);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function renderVotes() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    renderVotes();\n  }, [votesAddresses]);\n\n  function displayVoteList() {\n    var _this = this;\n\n    if (web3 == \"\") {\n      return \"waiting for votes to display...\";\n    } else if (votesAddresses == \"\") {\n      return \"no votes to display\";\n    }\n\n    return votesAddresses ? votesAddresses.map(function (vote, index) {\n      return __jsx(Card, {\n        key: index,\n        variant: \"outlined\",\n        className: classes.card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, __jsx(CardContent, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, __jsx(Grid, {\n        container: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 10,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 35\n        }\n      }, vote)), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        route: \"/elections/apply/\".concat(vote),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }\n      }, \"Apply as Candidate\")), __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        route: \"/elections/vote/\".concat(vote),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }, \"Vote\"))))));\n    }) : __jsx(React.Fragment, null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, displayVoteList())));\n}\n\n_s(App, \"dTboDQH6FDB3QtI1ZG4XH1ABhP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/index.js"],"names":["React","useState","useEffect","makeStyles","VoteFactoryContract","VoteContract","getWeb3","Header","Link","Card","CardContent","Grid","require","useStyles","card","width","App","classes","votesAddresses","setVotesAddresses","web3","setWeb3","accounts","setAccounts","contract","setContract","voteContract","setVoteContract","renderedAddresses","renderAddresses","initWeb3","console","log","web3Instance","setup","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","alert","error","length","displayVotes","methods","getDeployedVotes","call","response","displayInfo","currentElection","renderVotes","temp","forEach","then","newAddress","push","displayVoteList","map","vote","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport { Header } from '../components/header';\r\nimport { Link } from '../../routes'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\n// CommonJS\r\nrequire(\"regenerator-runtime/runtime\");\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width:'80%'\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [votesAddresses, setVotesAddresses] = useState('');\r\n  const [web3, setWeb3] = useState('');\r\n  const [accounts, setAccounts] = useState('');\r\n  const [contract, setContract] = useState('');\r\n  const [voteContract, setVoteContract] = useState('');\r\n  const [renderedAddresses, renderAddresses] = useState([]);\r\n\r\n  useEffect(() => {// get web3\r\n    async function initWeb3() {\r\n      console.log('initializing web3')\r\n      const web3Instance = await getWeb3()\r\n      setWeb3(web3Instance);\r\n    }\r\n    initWeb3();\r\n  },[]);\r\n\r\n  useEffect(() => {// get Factory contract\r\n    async function setup() {\r\n      if(web3 == '') {\r\n        return;\r\n      }\r\n      try {\r\n        setAccounts(await web3.eth.getAccounts());\r\n        // Get the contract instance.\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n        const instance = new web3.eth.Contract(\r\n          VoteFactoryContract.abi,\r\n          deployedNetwork && deployedNetwork.address,\r\n        );\r\n        setAccounts(await web3.eth.getAccounts());\r\n        setContract(instance);\r\n    \r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n    }\r\n      setup();\r\n  },[web3]);\r\n\r\n  useEffect(() => {//just get Vote contract\r\n    async function setup() {\r\n      if(web3 == '') {\r\n        return;\r\n      }\r\n      try {\r\n        // Get the contract instance.\r\n        const instance = new web3.eth.Contract(\r\n          VoteContract.abi,\r\n          votesAddresses[votesAddresses.length-1],\r\n        );\r\n        setVoteContract(instance);\r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n    }\r\n      setup();\r\n  },[contract,votesAddresses]);\r\n\r\n  useEffect(()=> {//display available votes\r\n    var displayVotes = async () => {\r\n      if(contract == ''){\r\n        return;\r\n      }\r\n      const response = await contract.methods.getDeployedVotes().call();\r\n      // Update state with the result.\r\n      setVotesAddresses(response);\r\n    };\r\n    displayVotes();\r\n  },[contract]);\r\n\r\n  useEffect(()=> {//render votes\r\n    var displayInfo = async (address) => { \r\n      if(web3 == '') {\r\n        return;\r\n      }\r\n      try {\r\n        // Get the contract instance.\r\n        const instance = new web3.eth.Contract(\r\n          VoteContract.abi,\r\n          address\r\n        );\r\n        return (await instance.methods.currentElection().call());\r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n    };\r\n    var renderVotes = async () => {\r\n      if (!votesAddresses){\r\n        return;\r\n      }\r\n      var temp = []\r\n      votesAddresses.forEach(address => {\r\n          displayInfo(address).then(newAddress =>\r\n          temp.push(newAddress)\r\n        )\r\n      })\r\n      renderAddresses(temp);\r\n    }\r\n    renderVotes();\r\n  },[votesAddresses]);\r\n\r\n\r\n  function displayVoteList() {\r\n    if(web3 == \"\"){\r\n      return \"waiting for votes to display...\"\r\n    }\r\n    else if(votesAddresses == \"\"){\r\n      return \"no votes to display\"\r\n    }\r\n    return votesAddresses ? votesAddresses.map((vote, index) => \r\n        <Card key={index} variant=\"outlined\" className ={classes.card}>\r\n          <CardContent >\r\n            <Grid container>\r\n              <Grid item xs ={10}><span>{vote}</span></Grid>\r\n              <Grid item xs ={2}>\r\n                <div>            \r\n                  <Link route ={`/elections/apply/${vote}`}> \r\n                    Apply as Candidate\r\n                  </Link>\r\n                </div>\r\n                <div>  \r\n                  <Link route ={`/elections/vote/${vote}`}> \r\n                    Vote\r\n                  </Link>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      ) : <></>\r\n  }\r\n\r\n  \r\n  return( \r\n    <>\r\n      <Header></Header>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <div className=\"App\">\r\n        <div>{ displayVoteList() }</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}