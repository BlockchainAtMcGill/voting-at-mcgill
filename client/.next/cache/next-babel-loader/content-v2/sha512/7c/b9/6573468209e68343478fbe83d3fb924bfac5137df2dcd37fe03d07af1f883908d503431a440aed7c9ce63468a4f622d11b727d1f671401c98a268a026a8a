{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\Desktop\\\\BAM\\\\voting-at-mcgill-2\\\\client\\\\src\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Header } from '../components/header';\nimport { Link } from '../../routes';\nimport 'semantic-ui-css/semantic.min.css'; // CommonJS\n\nrequire(\"regenerator-runtime/runtime\");\n\nconst styles = {\n  card: {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto',\n    color: '#f00000'\n  },\n  title: {\n    t\n  }\n};\n\nfunction App() {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState('');\n  const {\n    0: votesAddresses,\n    1: setVotesAddresses\n  } = useState('');\n  const {\n    0: contract,\n    1: setContract\n  } = useState('');\n  const {\n    0: renderedAddresses,\n    1: renderAddresses\n  } = useState([]);\n  useEffect(() => {\n    // get web3\n    async function initWeb3() {\n      console.log('initializing web3');\n      const web3Instance = await getWeb3();\n      setWeb3(web3Instance);\n    }\n\n    initWeb3();\n  }, []);\n  useEffect(() => {\n    // get Factory contract\n    async function setup() {\n      if (web3 == \"\") {\n        console.log('unable to get factory');\n        return;\n      }\n\n      try {\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\n        const instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n        setContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setup(); // console.log('ok')\n  }, [web3]);\n  useEffect(() => {\n    //display available votes addresses\n    var displayVotes = async () => {\n      if (contract == '') {\n        return;\n      }\n\n      const response = await contract.methods.getDeployedVotes().call(); // Update state with the result.\n\n      setVotesAddresses(response);\n    };\n\n    displayVotes();\n  }, [contract]);\n\n  var displayInfo = async address => {\n    if (votesAddresses == '') {\n      return;\n    }\n\n    try {\n      // Get the contract instance.\n      const instance = new web3.eth.Contract(VoteContract.abi, address);\n      return await instance.methods.currentElection().call();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    //render votes\n    var renderVotes = async () => {\n      if (!votesAddresses) {\n        return;\n      }\n\n      await votesAddresses.forEach(address => {\n        displayInfo(address).then(newAddress => {\n          renderAddresses([...renderedAddresses, newAddress]);\n        });\n      });\n    };\n\n    renderVotes();\n  }, [votesAddresses]);\n  useEffect(() => {\n    if (renderedAddresses != []) {\n      console.log(renderedAddresses);\n    }\n  }, [renderedAddresses]);\n\n  function displayVoteList() {\n    if (web3 == \"\") {\n      return \"waiting for votes to display...\";\n    } else if (votesAddresses == \"\") {\n      return \"no votes to display\";\n    }\n\n    return renderedAddresses ? renderedAddresses.map((vote, index) => __jsx(Link, {\n      className: \"ui button\",\n      route: `/elections/vote/${votesAddresses[index]}`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"ui card\",\n      style: {\n        width: \"90%\",\n        color: '#f00000',\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"right floated\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, vote.numVotes, __jsx(\"i\", {\n      className: \"user icon\",\n      style: {\n        margin: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), __jsx(\"i\", {\n      className: \"circle outline icon\",\n      style: {\n        margin: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Election\"), __jsx(\"div\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, vote.title)), __jsx(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Click to Vote\")))))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"no votes found\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, displayVoteList())));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/foubroker/Desktop/BAM/voting-at-mcgill-2/client/src/pages/index.js"],"names":["React","useState","useEffect","makeStyles","VoteFactoryContract","VoteContract","getWeb3","Header","Link","require","styles","card","width","texAlign","margin","color","title","t","App","web3","setWeb3","votesAddresses","setVotesAddresses","contract","setContract","renderedAddresses","renderAddresses","initWeb3","console","log","web3Instance","setup","networkId","eth","net","getId","deployedNetwork","networks","instance","Contract","abi","address","error","alert","displayVotes","response","methods","getDeployedVotes","call","displayInfo","currentElection","renderVotes","forEach","then","newAddress","displayVoteList","map","vote","index","numVotes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport { Header } from '../components/header';\r\nimport { Link } from '../../routes'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n// CommonJS\r\nrequire(\"regenerator-runtime/runtime\");\r\n\r\n\r\nconst styles = {\r\n  card: {\r\n    width: '90%',\r\n    texAlign:'center',\r\n    margin: 'auto',\r\n    color: '#f00000',\r\n  },\r\n  title : {\r\n    t\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [web3, setWeb3] = useState('');\r\n  const [votesAddresses, setVotesAddresses] = useState('');\r\n  const [contract, setContract] = useState('');\r\n  const [renderedAddresses, renderAddresses] = useState([]);\r\n\r\n  useEffect(() => {// get web3\r\n    async function initWeb3() {\r\n      console.log('initializing web3');\r\n      const web3Instance = await getWeb3();\r\n      setWeb3(web3Instance)\r\n    }\r\n    initWeb3();\r\n  },[]);\r\n\r\n  useEffect(() => {// get Factory contract\r\n    async function setup() {\r\n      if(web3 == \"\") {\r\n        console.log('unable to get factory')\r\n        return;\r\n      }\r\n      try {\r\n        // Get the contract instance.\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n        const instance = new web3.eth.Contract(\r\n          VoteFactoryContract.abi,\r\n          deployedNetwork && deployedNetwork.address,\r\n        );\r\n        setContract(instance);\r\n    \r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n    }\r\n      setup();\r\n      // console.log('ok')\r\n  },[web3]);\r\n\r\n  useEffect(()=> {//display available votes addresses\r\n    var displayVotes = async () => {\r\n      if(contract == ''){\r\n        return;\r\n      }\r\n      const response = await contract.methods.getDeployedVotes().call();\r\n      // Update state with the result.\r\n      setVotesAddresses(response);\r\n    };\r\n    displayVotes();\r\n  },[contract]);\r\n\r\n  var displayInfo = async (address) => { \r\n    if(votesAddresses == '') {\r\n      return;\r\n    }\r\n    try {// Get the contract instance.\r\n      const instance = new web3.eth.Contract(\r\n        VoteContract.abi,\r\n        address\r\n      );\r\n      return (await instance.methods.currentElection().call());\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(()=> {//render votes\r\n    var renderVotes = async () => {\r\n        if (!votesAddresses){\r\n          return;\r\n        }\r\n        await votesAddresses.forEach(address => {\r\n            displayInfo(address).then(newAddress => {\r\n              renderAddresses([...renderedAddresses, newAddress])\r\n          })\r\n        })\r\n      }\r\n    renderVotes();\r\n  },[votesAddresses]);\r\n\r\n  useEffect(()=> {\r\n    if(renderedAddresses != []) {\r\n      console.log(renderedAddresses)\r\n    }\r\n  },[renderedAddresses])\r\n\r\n\r\n  function displayVoteList() {\r\n    if(web3 == \"\"){\r\n      return \"waiting for votes to display...\"\r\n    }\r\n    else if(votesAddresses == \"\"){\r\n      return \"no votes to display\"\r\n    }\r\n    return renderedAddresses ? renderedAddresses.map((vote, index) => \r\n        <Link className=\"ui button\" route ={`/elections/vote/${votesAddresses[index]}`} key={index}>\r\n          <div className=\"ui card\" style={{width:\"90%\", color: '#f00000', margin: \"auto\"}}>\r\n            <div className=\"card\">\r\n              <span className=\"right floated\">\r\n                {vote.numVotes}\r\n                <i className=\"user icon\" style={{margin: 3}}></i>\r\n                <i className=\"circle outline icon\" style={{margin: 3}}></i>\r\n              </span>\r\n              <div className=\"content\">\r\n                <div className=\"header\">Election</div>\r\n                  <div className=\"meta\">\r\n                    <a>{vote.title}</a>\r\n                  </div>\r\n                <div className=\"description\">\r\n                  Click to Vote\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      ) : <div>no votes found</div>\r\n    }\r\n\r\n\r\n\r\n  return( \r\n    <>\r\n      <Header></Header>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <div className=\"App\">\r\n        <div>{ displayVoteList() }</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}