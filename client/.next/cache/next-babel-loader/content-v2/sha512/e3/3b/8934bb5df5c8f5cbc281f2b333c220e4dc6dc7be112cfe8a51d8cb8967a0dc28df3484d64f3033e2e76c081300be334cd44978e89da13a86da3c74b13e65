{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/wen_wong/voting-at-mcgill/client/src/pages/elections/vote/vote.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\nimport { Modal, Dimmer, Loader, Image, Segment } from 'semantic-ui-react';\nimport { PieChart, Pie, Tooltip, BarChart, XAxis, YAxis, Legend, CartesianGrid, Bar } from \"recharts\";\n\nvar Vote = function Vote() {\n  _s();\n\n  var web3Instance;\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(''),\n      voteAddress = _useState2[0],\n      setVoteAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      currentVote = _useState3[0],\n      setCurrentVote = _useState3[1];\n\n  var _useState4 = useState(''),\n      voteInstance = _useState4[0],\n      setVoteInstance = _useState4[1];\n\n  var _useState5 = useState(''),\n      candidates = _useState5[0],\n      setCandidates = _useState5[1];\n\n  var _useState6 = useState(''),\n      currentUser = _useState6[0],\n      setCurrentUser = _useState6[1];\n\n  var _useState7 = useState(false),\n      voting = _useState7[0],\n      setVoting = _useState7[1];\n\n  var _useState8 = useState(false),\n      hasVoted = _useState8[0],\n      setHasVoted = _useState8[1];\n\n  var _useState9 = useState(true),\n      load = _useState9[0],\n      setLoad = _useState9[1];\n\n  var _useState10 = useState([]),\n      cAddresses = _useState10[0],\n      setCAddresses = _useState10[1];\n\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context2.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    var getElectionAddress = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, pos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = window.location.href;\n                pos = url.indexOf('vote') + 5;\n                setVoteAddress(url.slice(pos));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getElectionAddress() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    initWeb3();\n    getElectionAddress();\n  }, [load]);\n  useEffect(function () {\n    function setupVote() {\n      return _setupVote.apply(this, arguments);\n    }\n\n    function _setupVote() {\n      _setupVote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance, current, _yield$web3$eth$getAc, _yield$web3$eth$getAc2, candidatesAddresses, candidatesCount, array, i;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return new web3.eth.Contract(VoteContract.abi, voteAddress);\n\n              case 5:\n                instance = _context3.sent;\n                setVoteInstance(instance);\n                _context3.t0 = setCurrentVote;\n                _context3.next = 10;\n                return instance.methods.currentElection().call();\n\n              case 10:\n                _context3.t1 = _context3.sent;\n                (0, _context3.t0)(_context3.t1);\n                _context3.next = 14;\n                return web3.eth.getAccounts();\n\n              case 14:\n                _yield$web3$eth$getAc = _context3.sent;\n                _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                current = _yield$web3$eth$getAc2[0];\n                setCurrentUser(current);\n                _context3.t2 = setHasVoted;\n                _context3.next = 21;\n                return instance.methods.getElectionVoter(current).call();\n\n              case 21:\n                _context3.t3 = _context3.sent;\n                (0, _context3.t2)(_context3.t3);\n                _context3.next = 25;\n                return instance.methods.getCandidatesAddresses().call();\n\n              case 25:\n                candidatesAddresses = _context3.sent;\n                setCAddresses(candidatesAddresses);\n                _context3.next = 29;\n                return instance.methods.candidatesCount().call();\n\n              case 29:\n                candidatesCount = _context3.sent;\n                array = [];\n                i = 0;\n\n              case 32:\n                if (!(i < candidatesCount)) {\n                  _context3.next = 42;\n                  break;\n                }\n\n                console.log(candidatesAddresses[i]);\n                _context3.t4 = array;\n                _context3.next = 37;\n                return instance.methods.get_candidate(candidatesAddresses[i]).call();\n\n              case 37:\n                _context3.t5 = _context3.sent;\n\n                _context3.t4.push.call(_context3.t4, _context3.t5);\n\n              case 39:\n                i++;\n                _context3.next = 32;\n                break;\n\n              case 42:\n                setCandidates(array);\n                console.log(candidates); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context3.next = 50;\n                break;\n\n              case 46:\n                _context3.prev = 46;\n                _context3.t6 = _context3[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context3.t6);\n\n              case 50:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 46]]);\n      }));\n      return _setupVote.apply(this, arguments);\n    }\n\n    setupVote();\n  }, [web3]);\n  var long = {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto',\n    color: '#f00000'\n  };\n\n  function VoteModal(name, address) {\n    var voteFor = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!voteInstance) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                setVoting(true);\n                _context4.next = 4;\n                return voteInstance.methods.voteFor(address).send({\n                  from: currentUser\n                });\n\n              case 4:\n                setVoting(false);\n                setLoad(!load);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function voteFor() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!hasVoted) {\n      return __jsx(Modal, {\n        trigger: __jsx(\"button\", {\n          className: \"ui right floated inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 30\n          }\n        }, \"Vote\"),\n        header: \"Vote!\",\n        content: \"are you sure you want to vote for \" + name + \" ?\",\n        actions: [__jsx(\"button\", {\n          key: 1,\n          className: \"ui inverted green button\",\n          onClick: voteFor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        }, \"yes\"), __jsx(\"button\", {\n          key: 2,\n          className: \"ui inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }\n        }, \"no\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      });\n    } else return __jsx(React.Fragment, null);\n  }\n\n  function leaveElection() {\n    var startDate = new Date(currentVote.startDate * 1);\n    var currDate = new Date();\n\n    var leavethis = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!voteInstance) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                setVoting(true);\n                _context5.next = 4;\n                return voteInstance.methods.leaveElection().send({\n                  from: currentUser\n                });\n\n              case 4:\n                setVoting(false);\n                setLoad(!load);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function leavethis() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (currDate < startDate) {\n      return __jsx(Modal, {\n        trigger: __jsx(\"button\", {\n          className: \"ui right floated inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 28\n          }\n        }, \"Leave Election\"),\n        header: \"Leave Election\",\n        content: \"are you sure you want to no longer be a candidate\",\n        actions: [__jsx(\"button\", {\n          key: 1,\n          className: \"ui inverted green button\",\n          onClick: leavethis,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }\n        }, \"yes\"), __jsx(\"button\", {\n          key: 2,\n          className: \"ui inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }, \"no\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      });\n    }\n  }\n\n  function applyELection() {\n    var startDate = new Date(currentVote.startDate * 1);\n    var currDate = new Date(); //   if(currDate<startDate){\n\n    return __jsx(Link, {\n      route: \"/elections/apply/\".concat(voteAddress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      className: \"extra content ui inverted red button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, __jsx(\"i\", {\n      className: \"plus icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 24\n      }\n    }), \" Apply as Candidate\"))); //   }\n  }\n\n  var data = [];\n  /*\n  <div className=\"content ui container\">\n      <div className=\"header clearing segment\">\n         {candidate.name} {VoteModal(candidate.name, candidate.candidateAddr)}:        {candidate.numVotes/currentVote.numVotes*100}%\n       </div>\n  </div>\n  */\n\n  function displayPer() {\n    var _this2 = this;\n\n    var newrow = {};\n\n    if (candidates == \"\") {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 22\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 31\n        }\n      }, \"no candidates yet\")));\n    }\n\n    return candidates.map(function (candidate, index) {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        key: index,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        style: {\n          color: '#FFFFFF'\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }, (newrow = {}, newrow[candidate.name] = candidate.numVotes, data.push(newrow))));\n    });\n  }\n\n  function chart() {\n    return __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, __jsx(PieChart, {\n      width: 400,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, __jsx(Pie, {\n      dataKey: \"users\",\n      isAnimationActive: false,\n      data: data,\n      cx: 200,\n      cy: 200,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      label: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 22\n      }\n    }), __jsx(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 22\n      }\n    })));\n  }\n\n  function displayCandidates() {\n    var _this3 = this;\n\n    if (candidates == \"\") {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 20\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, \"no candidates yet\")));\n    }\n\n    return candidates.map(function (candidate, index) {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        key: index,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"content ui container\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"header clearing segment\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, candidate[0], \" \", VoteModal(candidate[0], cAddresses[index]), \" // 0 is name and 1 is address\"), __jsx(\"div\", {\n        className: \"header clearing segment\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, leaveElection()), __jsx(\"div\", {\n        className: \"meta\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, cAddresses[index]), __jsx(\"div\", {\n        className: \"description\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, candidate[1])));\n    });\n  }\n\n  var voted;\n\n  if (hasVoted) {\n    voted = __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, __jsx(\"i\", {\n      className: \"floated check icon right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }), \" You have already Voted\");\n  } else {\n    voted = __jsx(React.Fragment, null);\n  }\n\n  function formatVote() {\n    if (currentVote) {\n      var startDate = new Date(currentVote.startDate * 1);\n      var endDate = new Date(currentVote.endDate * 1);\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"header container\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, currentVote.title, __jsx(\"span\", {\n        className: \"floated right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }\n      }, voted)), __jsx(\"div\", {\n        className: \"meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }\n      }, startDate.toUTCString().slice(0, 17), \" to \", endDate.toUTCString().slice(0, 17)), __jsx(\"div\", {\n        className: \"ui card\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }\n      }, currentVote.description)))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '50px',\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"ui cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }, displayCandidates()), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }\n      }), __jsx(Loader, {\n        active: voting,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"extra content\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        className: \"check icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }), currentVote.numVotes, \" Votes\"), applyELection(), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      }), displayPer(), chart()));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 20\n        }\n      }, \" loading vote ...\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, formatVote()), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Vote, \"Dgdai6qGOA0Jq+CWx3QY01LkczY=\");\n\n_c = Vote;\nexport default Vote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"sources":["/home/wen_wong/voting-at-mcgill/client/src/pages/elections/vote/vote.js"],"names":["React","useEffect","useState","Header","getWeb3","VoteContract","Link","Modal","Dimmer","Loader","Image","Segment","PieChart","Pie","Tooltip","BarChart","XAxis","YAxis","Legend","CartesianGrid","Bar","Vote","web3Instance","web3","setWeb3","voteAddress","setVoteAddress","currentVote","setCurrentVote","voteInstance","setVoteInstance","candidates","setCandidates","currentUser","setCurrentUser","voting","setVoting","hasVoted","setHasVoted","load","setLoad","cAddresses","setCAddresses","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","setupVote","eth","Contract","abi","instance","methods","currentElection","call","getAccounts","current","getElectionVoter","getCandidatesAddresses","candidatesAddresses","candidatesCount","array","i","console","log","get_candidate","push","alert","error","long","width","texAlign","margin","color","VoteModal","name","address","voteFor","send","from","leaveElection","startDate","Date","currDate","leavethis","applyELection","data","displayPer","newrow","map","candidate","index","numVotes","chart","textAlign","displayCandidates","voted","formatVote","endDate","title","toUTCString","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Header } from '../../../components/header'\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\nimport { Modal, Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  BarChart,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  Bar,\n} from \"recharts\";\n\nconst Vote = () => {\n\n    var web3Instance;\n    const [web3, setWeb3] = useState('');\n    const [voteAddress, setVoteAddress] = useState('')\n    const [currentVote, setCurrentVote] = useState('')\n    const [voteInstance, setVoteInstance] = useState('')\n    const [candidates, setCandidates ] = useState('');\n    const [currentUser, setCurrentUser ] = useState('');\n    const [voting, setVoting ] = useState(false)\n    const [hasVoted, setHasVoted] = useState(false)\n    const [load, setLoad] = useState(true)\n    const [cAddresses, setCAddresses] = useState([])\n\n    useEffect(() => {\n        async function initWeb3() {\n            web3Instance = await getWeb3();\n            setWeb3(web3Instance);\n        }\n        var getElectionAddress = async() =>{\n            const url=window.location.href;\n            const pos=url.indexOf('vote')+5;\n            setVoteAddress(url.slice(pos));\n          };\n        initWeb3();\n        getElectionAddress();\n    },[load]);\n\n    useEffect(() => {\n        async function setupVote() {\n            if(web3 == '') {\n                return;\n            }\n            try {\n                // Get the contract instance.\n                const instance = await new web3.eth.Contract(\n                    VoteContract.abi,\n                    voteAddress\n                );\n                setVoteInstance(instance);\n                setCurrentVote(await instance.methods.currentElection().call());\n                var current\n                [current] = await web3.eth.getAccounts()\n                setCurrentUser(current)\n                setHasVoted(await instance.methods.getElectionVoter(current).call())\n\n                const candidatesAddresses = await instance.methods.getCandidatesAddresses().call();\n                setCAddresses(candidatesAddresses);\n                const candidatesCount = await instance.methods.candidatesCount().call();\n                var array = []\n\n                \n                for (var i = 0; i < candidatesCount; i++){\n                    console.log(candidatesAddresses[i]);\n                    array.push(await instance.methods.get_candidate(candidatesAddresses[i]).call());\n                }\n                setCandidates(array);\n                console.log(candidates)\n                // Set web3, accounts, and contract to the state, and then proceed with an\n            } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n            }\n        }\n        setupVote();\n    },[web3])\n\n    const long = {\n        width: '90%',\n        texAlign:'center',\n        margin: 'auto',\n        color: '#f00000',\n    }\n\n    function VoteModal(name,address) {\n        var voteFor = async () => {\n            if(voteInstance){\n                setVoting(true)\n                await voteInstance.methods.voteFor(address).send({\n                    from: currentUser\n                })\n                setVoting(false)\n                setLoad(!load)\n            }\n        }\n        if(!hasVoted){\n            return (\n                <Modal\n                    trigger={<button className=\"ui right floated inverted red button\">Vote</button>}\n                    header=\"Vote!\"\n                    content={\"are you sure you want to vote for \"+ name+\" ?\"}\n                    actions={[\n                    <button key={1} className=\"ui inverted green button\" onClick={voteFor}>yes</button>,\n                    <button key={2} className=\"ui inverted red button\" >no</button>]}\n                />\n            )\n        }\n        else return (<></>)\n    }\n    function  leaveElection(){\n          var startDate = new Date(currentVote.startDate * 1)\n          var currDate= new Date()\n          var leavethis = async () => {\n              if(voteInstance){\n                setVoting(true)\n                await voteInstance.methods.leaveElection().send({\n                    from: currentUser\n                })\n                setVoting(false)\n                setLoad(!load)\n              }\n          }\n          if(currDate<startDate){\n            return (\n              <Modal\n                  trigger={<button className=\"ui right floated inverted red button\">Leave Election</button>}\n                  header=\"Leave Election\"\n                  content={\"are you sure you want to no longer be a candidate\"}\n                  actions={[\n                  <button key={1} className=\"ui inverted green button\"onClick={leavethis}>yes</button>,\n                  <button key={2} className=\"ui inverted red button\" >no</button>]}\n              />\n            )\n          }\n    }\n    function applyELection(){\n      var startDate = new Date(currentVote.startDate * 1)\n      var currDate= new Date()\n    //   if(currDate<startDate){\n        return(\n          <Link route ={`/elections/apply/${voteAddress}`}>\n              <button className=\"extra content ui inverted red button\" >\n                  <div><i className=\"plus icon\"></i> Apply as Candidate</div>\n              </button>\n          </Link>\n        )\n    //   }\n    }\n    const data=[];\n    /*\n    <div className=\"content ui container\">\n        <div className=\"header clearing segment\">\n\n          {candidate.name} {VoteModal(candidate.name, candidate.candidateAddr)}:        {candidate.numVotes/currentVote.numVotes*100}%\n\n        </div>\n    </div>\n    */\n    function displayPer() {\n          var newrow={};\n          if (candidates == \"\"){\n              return <div  className=\"card\" style={long}>\n                          <div className=\"content\">\n                              <div className=\"header\">\n                                  no candidates yet\n                              </div>\n                          </div>\n                      </div>\n\n          }\n\n          return candidates.map((candidate,index) =>\n\n          <div className=\"card\"  style={long} key={index}>\n\n              <div style= {{color: '#FFFFFF'}}>\n              {\n              newrow={},\n              newrow[candidate.name]=candidate.numVotes,\n              data.push(newrow)}\n              </div>\n          </div>\n\n        )\n    }\n    function chart(){\n      return(\n        <div style={{textAlign:\"center\"}}>\n            <PieChart width={400} height={400}>\n                     <Pie\n                       dataKey=\"users\"\n                       isAnimationActive={false}\n                       data={data}\n                       cx={200}\n                       cy={200}\n                       outerRadius={80}\n                       fill=\"#8884d8\"\n                       label\n                     />\n                     <Tooltip />\n            </PieChart>\n        </div>\n      )\n    }\n\n    function displayCandidates() {\n        if (candidates == \"\"){\n            return <div  className=\"card\" style={long}>\n                        <div className=\"content\">\n                            <div className=\"header\">\n                                no candidates yet\n                            </div>\n                        </div>\n                    </div>\n        }\n\n        return candidates.map((candidate,index) =>\n        <div className=\"card\"  style={long} key={index}>\n            <div className=\"content ui container\">\n                <div className=\"header clearing segment\">\n                    {candidate[0]} {VoteModal(candidate[0], cAddresses[index])} // 0 is name and 1 is address\n                </div>\n                <div className=\"header clearing segment\">\n                    {leaveElection()}\n                </div>\n                <div className=\"meta\">\n                    {cAddresses[index]}\n                </div>\n                <div className=\"description\">\n                    {candidate[1]}\n                </div>\n\n            </div>\n        </div>\n\n        )\n    }\n    var voted;\n    if(hasVoted) {\n        voted = <span><i className=\"floated check icon right\"></i> You have already Voted</span>;\n    } else {\n        voted = <></>\n    }\n\n    function formatVote() {\n        if (currentVote){\n            var startDate = new Date(currentVote.startDate * 1)\n            var endDate = new Date(currentVote.endDate * 1)\n            return <>\n                <div className=\"ui card\" style={long}>\n                    <div className=\"content\">\n                        <div className=\"header container\" style= {{color: '#f00000'}}>\n                            {currentVote.title}\n                            <span className=\"floated right\">{voted}</span>\n                        </div>\n                        <div className=\"meta\">{startDate.toUTCString().slice(0,17)} to {endDate.toUTCString().slice(0,17)}</div>\n                        <div className=\"ui card\" style= {{width: '100%'}}>\n                            <div className=\"description\" >\n                            <p>{currentVote.description}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{textAlign:'center', margin:'50px', color: '#f00000'}}>\n                    <div className =\"ui cards\">{displayCandidates()}</div>\n                    <br></br>\n                    <Loader\n                        active={voting}\n                        inline='centered'\n                    />\n                    </div>\n                    <div>\n                </div>\n\n                    <div className=\"extra content\" style= {{color: '#f00000'}}>\n                        <i className=\"check icon\"></i>\n                        {currentVote.numVotes} Votes\n                    </div>\n                    {applyELection()}\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    {displayPer()}\n                    {chart()}\n                </div>\n            </>\n        }\n        else{\n            return <div> loading vote ...</div>\n        }\n    }\n\n    return (\n        <>\n            <Header/>\n            <br></br>\n            <br></br>\n            <br></br>\n            <h1>{formatVote()}</h1>\n            <br></br>\n            <br></br>\n\n\n        </>\n    )\n\n}\nexport default Vote;\n"]},"metadata":{},"sourceType":"module"}