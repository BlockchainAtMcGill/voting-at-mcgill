{"ast":null,"code":"import Web3 from \"web3\";\n\nconst getWeb3 = async () => {\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n\n    try {\n      await window.eth_requestAccounts;\n      return web3;\n    } catch (error) {\n      return error;\n    }\n  } else if (window.web3) {\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  } else {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n};\n\nexport default getWeb3;","map":{"version":3,"sources":["/home/wen_wong/voting-at-mcgill/client/src/getWeb3.js"],"names":["Web3","getWeb3","window","ethereum","web3","eth_requestAccounts","error","console","log","resolve","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GAAG,YAAU;AACxB,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,UAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAb;;AACA,QAAI;AACF,YAAMD,MAAM,CAACG,mBAAb;AACA,aAAQD,IAAR;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACd,aAAOA,KAAP;AACD;AACF,GARD,MASK,IAAIJ,MAAM,CAACE,IAAX,EAAiB;AACpB,UAAMA,IAAI,GAAGF,MAAM,CAACE,IAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,IAAAA,OAAO,CAACL,IAAD,CAAP;AACD,GAJI,MAKA;AACH,UAAMM,QAAQ,GAAG,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,CACf,uBADe,CAAjB;AAGA,UAAMR,IAAI,GAAG,IAAIJ,IAAJ,CAASU,QAAT,CAAb;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAC,IAAAA,OAAO,CAACL,IAAD,CAAP;AACD;AACF,CAvBD;;AAwBA,eAAeH,OAAf","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = async() =>{\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      await window.eth_requestAccounts;\n      return (web3);\n    } catch (error) {\n      return error\n    }\n  }\n  else if (window.web3) {\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\nexport default getWeb3;\n"]},"metadata":{},"sourceType":"module"}