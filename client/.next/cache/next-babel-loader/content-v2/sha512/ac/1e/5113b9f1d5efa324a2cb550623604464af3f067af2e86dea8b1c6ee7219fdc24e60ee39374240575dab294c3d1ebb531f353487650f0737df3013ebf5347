{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\newElection.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport { Form } from \"semantic-ui-react\";\nimport getWeb3 from \"../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\nvar adminTitle = {\n  color: \"red\",\n  marginBottom: \"5%\",\n  fontSize: \"3em\",\n  textAlign: \"center\"\n};\nvar adminFields = {\n  margin: \"auto 5% auto 5%\"\n};\n\nvar NewElection = function NewElection() {\n  _s();\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var electionTypes = [{\n    key: 'sm',\n    text: 'simple majority',\n    value: 'majority'\n  }, {\n    key: 'tt',\n    text: 'two thirds',\n    value: 'twoThirds'\n  }];\n  var web3Instance;\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = console;\n                _context.next = 3;\n                return getWeb3();\n\n              case 3:\n                _context.t1 = _context.sent;\n\n                _context.t0.log.call(_context.t0, _context.t1);\n\n                _context.next = 7;\n                return getWeb3();\n\n              case 7:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n                console.log(\"web3 initiated to \" + web3Instance);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    console.log(\"initiating web3\");\n    initWeb3();\n    console.log(\"web3 initiated\");\n  }, []);\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(0),\n      startDate = _useState3[0],\n      setStartDate = _useState3[1];\n\n  var _useState4 = useState(0),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1];\n\n  var _useState5 = useState('majority'),\n      electionType = _useState5[0],\n      setElectionType = _useState5[1];\n\n  var _useState6 = useState(''),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n      var manager, factoryContract, voteContract, addressOfVote, setupVoteFactory, createVote, getElectionAddress, initializeElection, setUpElection, displayVote;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              event.preventDefault();\n\n              // var web3Instance;\n              // async function initWeb3() {\n              //     web3Instance = await getWeb3();\n              //     setWeb3(web3Instance);\n              // }\n              // initWeb3();\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context2.next = 3;\n                            break;\n                          }\n\n                          console.log(\"web3 is undefined\");\n                          return _context2.abrupt(\"return\");\n\n                        case 3:\n                          _context2.prev = 3;\n                          _context2.next = 6;\n                          return web3.eth.getAccounts();\n\n                        case 6:\n                          _yield$web3$eth$getAc = _context2.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          manager = _yield$web3$eth$getAc2[0];\n                          _context2.next = 11;\n                          return web3.eth.net.getId();\n\n                        case 11:\n                          networkId = _context2.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context2.next = 21;\n                          break;\n\n                        case 17:\n                          _context2.prev = 17;\n                          _context2.t0 = _context2[\"catch\"](3);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context2.t0);\n\n                        case 21:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[3, 17]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              createVote = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!(factoryContract == undefined)) {\n                            _context3.next = 3;\n                            break;\n                          }\n\n                          console.log(\"factory contract is undefined\");\n                          return _context3.abrupt(\"return\");\n\n                        case 3:\n                          _context3.next = 5;\n                          return factoryContract.methods.createVote(0).send({\n                            from: manager\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function createVote() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              getElectionAddress = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return factoryContract.methods.getDeployedVotes().call();\n\n                        case 2:\n                          response = _context4.sent;\n                          addressOfVote = response[response.length - 1];\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function getElectionAddress() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              initializeElection = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  var instance;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.prev = 0;\n                          _context5.next = 3;\n                          return new web3.eth.Contract(VoteContract.abi, addressOfVote);\n\n                        case 3:\n                          instance = _context5.sent;\n                          voteContract = instance;\n                          _context5.next = 11;\n                          break;\n\n                        case 7:\n                          _context5.prev = 7;\n                          _context5.t0 = _context5[\"catch\"](0);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context5.t0);\n\n                        case 11:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5, null, [[0, 7]]);\n                }));\n\n                return function initializeElection() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              setUpElection = /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if (voteContract) {\n                            _context6.next = 3;\n                            break;\n                          }\n\n                          console.log(\"voteContract dne\");\n                          return _context6.abrupt(\"return\");\n\n                        case 3:\n                          _context6.next = 5;\n                          return voteContract.methods.editElection(\"test\", 1, 2, \"lorem\", \"two thirds\") // .editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, electionType)\n                          .send({\n                            from: manager\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function setUpElection() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              displayVote = /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return voteContract.methods.currentElection().call();\n\n                        case 2:\n                          summary = _context7.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function displayVote() {\n                  return _ref7.apply(this, arguments);\n                };\n              }();\n\n              _context8.next = 9;\n              return setupVoteFactory();\n\n            case 9:\n              _context8.next = 11;\n              return createVote();\n\n            case 11:\n              _context8.next = 13;\n              return getElectionAddress();\n\n            case 13:\n              _context8.next = 15;\n              return initializeElection();\n\n            case 15:\n              _context8.next = 17;\n              return setUpElection();\n\n            case 17:\n              _context8.next = 19;\n              return displayVote();\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    style: adminTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"New Election\"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: adminFields,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Election title\",\n    value: title,\n    onChange: function onChange(event) {\n      return setTitle(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    label: \"Start date\",\n    type: \"date\",\n    value: startDate,\n    onChange: function onChange(event) {\n      return setStartDate(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"End date\",\n    type: \"date\",\n    value: endDate,\n    onChange: function onChange(event) {\n      return setEndDate(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Select, {\n    fluid: true,\n    label: \"Type of election\",\n    options: electionTypes,\n    placeholder: \"Type of election\",\n    value: electionType,\n    onChange: function onChange(event) {\n      return setElectionType(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, __jsx(Form.TextArea, {\n    required: true,\n    label: \"Description\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \"Publish Election\"))));\n};\n\n_s(NewElection, \"yqAXxnpSXjSaAAUjmkg77upuqrc=\");\n\n_c = NewElection;\nexport default NewElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewElection\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/newElection.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","Form","getWeb3","adminTitle","color","marginBottom","fontSize","textAlign","adminFields","margin","NewElection","web3","setWeb3","electionTypes","key","text","value","web3Instance","initWeb3","console","log","title","setTitle","startDate","setStartDate","endDate","setEndDate","electionType","setElectionType","description","setDescription","onSubmit","event","preventDefault","setupVoteFactory","eth","getAccounts","manager","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","alert","error","createVote","undefined","methods","send","from","getElectionAddress","getDeployedVotes","call","response","addressOfVote","length","initializeElection","voteContract","setUpElection","editElection","displayVote","currentElection","summary","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../components/header';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst adminTitle = {\r\n    color: \"red\",\r\n    marginBottom: \"5%\",\r\n    fontSize: \"3em\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst adminFields = {\r\n    margin: \"auto 5% auto 5%\"\r\n};\r\n\r\nconst NewElection = () => {\r\n\r\n    const [web3, setWeb3] = useState('');\r\n    const electionTypes = [\r\n        {\r\n            key: 'sm',\r\n            text: 'simple majority',\r\n            value: 'majority'\r\n\r\n        },\r\n        {\r\n            key: 'tt',\r\n            text: 'two thirds',\r\n            value: 'twoThirds'\r\n        }\r\n    ];\r\n\r\n    var web3Instance;\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            console.log(await getWeb3())\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n            console.log(\"web3 initiated to \"+ web3Instance)\r\n        }\r\n        console.log(\"initiating web3\")\r\n        initWeb3();\r\n        console.log(\"web3 initiated\")\r\n    },[]);\r\n\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [startDate, setStartDate] = useState(0);\r\n    const [endDate, setEndDate] = useState(0);\r\n    const [electionType, setElectionType] = useState('majority');\r\n    const [description, setDescription] = useState('');\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var manager;\r\n        var factoryContract;\r\n        var voteContract;\r\n        var addressOfVote;\r\n        // var web3Instance;\r\n\r\n        // async function initWeb3() {\r\n        //     web3Instance = await getWeb3();\r\n        //     setWeb3(web3Instance);\r\n        // }\r\n        // initWeb3();\r\n        var setupVoteFactory = async () => { //initializes voteFactory\r\n            if(web3 == '') {\r\n                console.log(\"web3 is undefined\")\r\n                return;\r\n            }\r\n            try {\r\n                [manager] = (await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var createVote = async () => {//uses voteFactory to create Vote\r\n            if(factoryContract == undefined){\r\n                console.log(\"factory contract is undefined\")\r\n                return;\r\n            }\r\n            // Get the value from the contract to prove it worked.\r\n            await factoryContract.methods.createVote(0).send({\r\n                from: manager\r\n            });\r\n        };\r\n        var getElectionAddress = async () => {//calls voteFactory method to get new Vote address\r\n            const response = await factoryContract.methods.getDeployedVotes().call();\r\n            addressOfVote = response[response.length - 1];\r\n        };\r\n        var initializeElection = async () => {//initializes vote contract\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    addressOfVote,\r\n                );\r\n                voteContract = instance;\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var setUpElection = async() => {//call to vote contract to edit election\r\n            if (!voteContract) {\r\n                console.log(\"voteContract dne\");\r\n                return;\r\n            }\r\n            await voteContract.methods\r\n            .editElection(\"test\", 1, 2, \"lorem\", \"two thirds\")\r\n            // .editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, electionType)\r\n                .send({\r\n                    from: manager\r\n                })\r\n        };\r\n\r\n        var displayVote = async () => { // testing purposes\r\n            const summary = await voteContract.methods.currentElection().call();\r\n            console.log(summary);\r\n        };\r\n        await setupVoteFactory();\r\n        await createVote();\r\n        await getElectionAddress();\r\n        await initializeElection();\r\n        await setUpElection();\r\n        await displayVote();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1 style={adminTitle}>New Election</h1>\r\n            \r\n            <Form onSubmit={onSubmit} style={adminFields}>\r\n                <div>\r\n                    <Form.Input required label=\"Election title\"\r\n                                 value={title}\r\n                                 onChange={event => setTitle(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input label=\"Start date\" type=\"date\"\r\n\r\n                                 value={startDate}\r\n                                 onChange={event => setStartDate(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input required label=\"End date\" type=\"date\"\r\n\r\n                                 value={endDate}\r\n                                 onChange={event => setEndDate(event.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Select\r\n                        fluid\r\n                        label='Type of election'\r\n                        options={electionTypes}\r\n                        placeholder='Type of election'\r\n                        value={electionType}\r\n                        onChange={event => setElectionType(event.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    {/*<m.TextField label=\"Select groups (someone help with the search and select multiple plz)\" variant=\"outlined\" /> */}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.TextArea required\r\n                                 label=\"Description\"\r\n\r\n                                 value={description}\r\n                                 onChange={event => setDescription(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <Form.Button>Cancel</Form.Button>\r\n                    <Form.Button type=\"submit\" onSubmit={onSubmit}>Publish Election</Form.Button>\r\n                </div>\r\n\r\n\r\n            </Form>\r\n        </>\r\n    )\r\n};\r\nexport default NewElection;\r\n"]},"metadata":{},"sourceType":"module"}