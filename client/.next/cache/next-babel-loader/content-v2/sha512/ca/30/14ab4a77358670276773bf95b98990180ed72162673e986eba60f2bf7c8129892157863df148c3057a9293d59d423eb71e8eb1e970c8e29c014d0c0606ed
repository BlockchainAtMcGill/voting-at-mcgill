{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\newElection.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport * as m from \"@material-ui/core\";\nimport getWeb3 from \"../getWeb3\";\n\nvar NewElection = function NewElection() {\n  _s();\n\n  // const [web3, setWeb3] = useState('');\n  var electionTypes = [{\n    value: 'majority',\n    label: 'simple majority'\n  }, {\n    value: 'twoThirds',\n    label: 'two thirds'\n  }]; // var web3Instance;\n  // useEffect(() => {\n  //     async function initWeb3() {\n  //         web3Instance = await getWeb3();\n  //         setWeb3(web3Instance);\n  //     }\n  //     initWeb3();\n  // },[]);\n  //please follow the course for a better implementation @Jing\n\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var changeTitle = function changeTitle(event) {\n    setTitle(event.target.value);\n  };\n\n  var _useState2 = useState(0),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var changeStartDate = function changeStartDate(event) {\n    setStartDate(event.target.value);\n  };\n\n  var _useState3 = useState(0),\n      endDate = _useState3[0],\n      setEndDate = _useState3[1];\n\n  var changeEndDate = function changeEndDate(event) {\n    setEndDate(event.target.value);\n  };\n\n  var _useState4 = useState('majority'),\n      electionType = _useState4[0],\n      setElectionType = _useState4[1];\n\n  var changeElectionType = function changeElectionType(event) {\n    setElectionType(event.target.value);\n  };\n\n  var _useState5 = useState(''),\n      description = _useState5[0],\n      setDescription = _useState5[1];\n\n  var changeDescription = function changeDescription(event) {\n    setDescription(event.target.value);\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n      var web3, manager, factoryContract, voteContract, addressOfVote, setupVoteFactory, createVote, getElectionAddress, initializeElection, setUpElection, displayVote;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              event.preventDefault();\n\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context.next = 3;\n                            break;\n                          }\n\n                          console.log('retard');\n                          return _context.abrupt(\"return\");\n\n                        case 3:\n                          _context.prev = 3;\n                          _context.next = 6;\n                          return web3.eth.getAccounts();\n\n                        case 6:\n                          _yield$web3$eth$getAc = _context.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          manager = _yield$web3$eth$getAc2[0];\n                          _context.next = 11;\n                          return web3.eth.net.getId();\n\n                        case 11:\n                          networkId = _context.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context.next = 21;\n                          break;\n\n                        case 17:\n                          _context.prev = 17;\n                          _context.t0 = _context[\"catch\"](3);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context.t0);\n\n                        case 21:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[3, 17]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              createVote = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(factoryContract == '')) {\n                            _context2.next = 2;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\");\n\n                        case 2:\n                          _context2.next = 4;\n                          return factoryContract.methods.createVote(0).send({\n                            from: manager\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function createVote() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              getElectionAddress = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return factoryContract.methods.getDeployedVotes().call();\n\n                        case 2:\n                          response = _context3.sent;\n                          addressOfVote = response[response.length - 1];\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function getElectionAddress() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              initializeElection = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var instance;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.prev = 0;\n                          _context4.next = 3;\n                          return new web3.eth.Contract(VoteContract.abi, addressOfVote);\n\n                        case 3:\n                          instance = _context4.sent;\n                          voteContract = instance;\n                          _context4.next = 11;\n                          break;\n\n                        case 7:\n                          _context4.prev = 7;\n                          _context4.t0 = _context4[\"catch\"](0);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context4.t0);\n\n                        case 11:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4, null, [[0, 7]]);\n                }));\n\n                return function initializeElection() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              setUpElection = /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (voteContract) {\n                            _context5.next = 3;\n                            break;\n                          }\n\n                          console.log(\"voteContract dne\");\n                          return _context5.abrupt(\"return\");\n\n                        case 3:\n                          _context5.next = 5;\n                          return voteContract.methods.editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, [0]).send({\n                            from: manager\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function setUpElection() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              displayVote = /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return voteContract.methods.currentElection().call();\n\n                        case 2:\n                          summary = _context6.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function displayVote() {\n                  return _ref7.apply(this, arguments);\n                };\n              }();\n\n              _context7.next = 9;\n              return getWeb3();\n\n            case 9:\n              web3 = _context7.sent;\n              _context7.next = 12;\n              return setupVoteFactory();\n\n            case 12:\n              _context7.next = 14;\n              return createVote();\n\n            case 14:\n              _context7.next = 16;\n              return getElectionAddress();\n\n            case 16:\n              _context7.next = 18;\n              return initializeElection();\n\n            case 18:\n              _context7.next = 20;\n              return setUpElection();\n\n            case 20:\n              _context7.next = 22;\n              return displayVote();\n\n            case 22:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"New Election\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Election title\",\n    variant: \"outlined\",\n    value: title,\n    onChange: changeTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    label: \"Start date\",\n    type: \"date\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: startDate,\n    onChange: changeStartDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    label: \"End date\",\n    type: \"date\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: endDate,\n    onChange: changeEndDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    select: true,\n    label: \"Type of election\",\n    variant: \"outlined\",\n    value: electionType,\n    onChange: changeElectionType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, electionTypes.map(function (option) {\n    return __jsx(m.MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, option.label);\n  }))), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    multiline: true,\n    fullWidth: true,\n    label: \"Description\",\n    rows: 4,\n    variant: \"outlined\",\n    value: description,\n    onChange: changeDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, __jsx(m.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(m.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"Publish Election\"))));\n};\n\n_s(NewElection, \"JCcJ9dwcG2WjdfgGb0a6cHKUriw=\");\n\n_c = NewElection;\nexport default NewElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewElection\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/newElection.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","m","getWeb3","NewElection","electionTypes","value","label","title","setTitle","changeTitle","event","target","startDate","setStartDate","changeStartDate","endDate","setEndDate","changeEndDate","electionType","setElectionType","changeElectionType","description","setDescription","changeDescription","onSubmit","preventDefault","setupVoteFactory","web3","console","log","eth","getAccounts","manager","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","alert","error","createVote","methods","send","from","getElectionAddress","getDeployedVotes","call","response","addressOfVote","length","initializeElection","voteContract","setUpElection","editElection","Date","getTime","displayVote","currentElection","summary","shrink","map","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../components/header';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport * as m from \"@material-ui/core\";\r\nimport getWeb3 from \"../getWeb3\";\r\n\r\n\r\n\r\nconst NewElection = () => {\r\n\r\n    // const [web3, setWeb3] = useState('');\r\n    const electionTypes = [\r\n        {\r\n            value: 'majority',\r\n            label: 'simple majority'\r\n        },\r\n        {\r\n            value: 'twoThirds',\r\n            label: 'two thirds'\r\n        }\r\n    ];\r\n\r\n    // var web3Instance;\r\n    // useEffect(() => {\r\n    //     async function initWeb3() {\r\n    //         web3Instance = await getWeb3();\r\n    //         setWeb3(web3Instance);\r\n    //     }\r\n    //     initWeb3();\r\n    // },[]);\r\n\r\n    //please follow the course for a better implementation @Jing\r\n    const [title, setTitle] = useState('');\r\n    const changeTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    };\r\n    const [startDate, setStartDate] = useState(0);\r\n    const changeStartDate = (event) => {\r\n        setStartDate(event.target.value);\r\n    };\r\n    const [endDate, setEndDate] = useState(0);\r\n    const changeEndDate = (event) => {\r\n        setEndDate(event.target.value);\r\n    };\r\n    const [electionType, setElectionType] = useState('majority');\r\n    const changeElectionType = (event) => {\r\n        setElectionType(event.target.value);\r\n    };\r\n    const [description, setDescription] = useState('');\r\n    const changeDescription = (event) => {\r\n        setDescription(event.target.value);\r\n    };\r\n\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var web3\r\n        var manager\r\n        var factoryContract\r\n        var voteContract;\r\n        var addressOfVote\r\n        var setupVoteFactory = async () => { //initializes voteFactory\r\n            if(web3 == '') {\r\n                console.log('retard')\r\n                return;\r\n            }\r\n            try {\r\n                [manager] = (await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        }\r\n        var createVote = async () => {//uses voteFactory to create Vote\r\n            if(factoryContract == ''){\r\n                return;\r\n            }\r\n            // Get the value from the contract to prove it worked.\r\n            await factoryContract.methods.createVote(0).send({\r\n                from: manager\r\n            });\r\n        };\r\n        var getElectionAddress = async () => {//calls voteFactory method to get new Vote address\r\n            const response = await factoryContract.methods.getDeployedVotes().call();\r\n            addressOfVote = response[response.length - 1];\r\n        };\r\n        var initializeElection = async () => {//initializes vote contract\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    addressOfVote,\r\n                );\r\n                voteContract = instance;\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        }\r\n        var setUpElection = async() => {//call to vote contract to edit election\r\n            if (!voteContract) {\r\n                console.log(\"voteContract dne\");\r\n                return;\r\n            }\r\n            await voteContract.methods\r\n                .editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, [0])\r\n                .send({\r\n                    from: manager\r\n                })\r\n        };\r\n\r\n        var displayVote = async () => { // testing purposes\r\n            const summary = await voteContract.methods.currentElection().call();\r\n            console.log(summary);\r\n        };\r\n        web3 = await getWeb3();\r\n        await setupVoteFactory();\r\n        await createVote();\r\n        await getElectionAddress();\r\n        await initializeElection();\r\n        await setUpElection();\r\n        await displayVote();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>New Election</h1>\r\n            \r\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\r\n                <div>\r\n                    <m.TextField required fullWidth label=\"Election title\"\r\n                                 variant=\"outlined\"\r\n                                 value={title}\r\n                                 onChange={changeTitle}\r\n                    >\r\n\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField label=\"Start date\" type=\"date\"\r\n                                 variant=\"outlined\"\r\n                                 InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                 value={startDate}\r\n                                 onChange={changeStartDate}\r\n                    >\r\n\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required label=\"End date\" type=\"date\"\r\n                                 variant=\"outlined\"\r\n                                 InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                                 value={endDate}\r\n                                 onChange={changeEndDate}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required select label=\"Type of election\"\r\n                                 variant=\"outlined\"\r\n                                 value={electionType}\r\n                                 onChange={changeElectionType}>\r\n                        {electionTypes.map((option) => (\r\n                            <m.MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </m.MenuItem>\r\n                        ))}\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    {/*<m.TextField label=\"Select groups (someone help with the search and select multiple plz)\" variant=\"outlined\" /> */}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required multiline fullWidth\r\n                                 label=\"Description\"\r\n                                 rows={4}\r\n                                 variant=\"outlined\"\r\n                                 value={description}\r\n                                 onChange={changeDescription}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <m.Button>Cancel</m.Button>\r\n                    <m.Button type=\"submit\" onSubmit={onSubmit}>Publish Election</m.Button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default NewElection;\r\n"]},"metadata":{},"sourceType":"module"}