{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\elections\\\\vote\\\\vote.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\nimport { Button, Modal } from 'semantic-ui-react';\n\nconst Vote = () => {\n  var web3Instance;\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState('');\n  const {\n    0: voteAddress,\n    1: setVoteAddress\n  } = useState('');\n  const {\n    0: currentVote,\n    1: setCurrentVote\n  } = useState('');\n  const {\n    0: voteInstance,\n    1: setVoteInstance\n  } = useState('');\n  const {\n    0: candidates,\n    1: setCandidates\n  } = useState('');\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState('');\n  useEffect(() => {\n    async function initWeb3() {\n      web3Instance = await getWeb3();\n      setWeb3(web3Instance);\n    }\n\n    var getElectionAddress = async () => {\n      const url = window.location.href;\n      const pos = url.indexOf('vote') + 5;\n      setVoteAddress(url.slice(pos));\n      console.log(voteAddress);\n    };\n\n    initWeb3();\n    getElectionAddress();\n  }, []);\n  useEffect(() => {\n    async function setupVote() {\n      if (web3 == '') {\n        return;\n      }\n\n      try {\n        // Get the contract instance.\n        const instance = await new web3.eth.Contract(VoteContract.abi, voteAddress);\n        setVoteInstance(instance);\n        setCurrentVote(await instance.methods.currentElection().call());\n        setCurrentUser([await web3.eth.getAccounts()]);\n        const candidatesCount = await instance.methods.candidatesCount().call();\n        var array = [];\n\n        for (var i = 0; i < candidatesCount; i++) {\n          array.push(await instance.methods.candidateArray(i).call());\n        }\n\n        setCandidates(array); // Set web3, accounts, and contract to the state, and then proceed with an\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setupVote();\n  }, [web3]);\n  const long = {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto',\n    color: '#f00000'\n  };\n\n  function VoteModal(name, address) {\n    function voteFor() {\n      if (voteInstance) {\n        voteInstance.methods.voteFor(address).send({\n          from: currentUser\n        });\n      }\n    }\n\n    return __jsx(Modal, {\n      trigger: __jsx(\"button\", {\n        className: \"ui right floated inverted red button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }\n      }, \"Vote\"),\n      header: \"Vote!\",\n      content: \"are you sure you want to vote for \" + name + \" ?\",\n      actions: [__jsx(\"button\", {\n        key: 1,\n        className: \"ui inverted green button\",\n        onClick: voteFor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"yes\"), __jsx(\"button\", {\n        key: 2,\n        className: \"ui inverted red button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"no\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function displayCandidates() {\n    if (candidates == \"\") {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 20\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, \"no candidates yet\")));\n    }\n\n    return candidates.map((candidate, index) => __jsx(\"div\", {\n      className: \"card\",\n      style: long,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"content ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"header clearing segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, candidate.name, \" \", VoteModal(candidate.name, candidate.candidateAddr)), __jsx(\"div\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, candidate.candidateAddr), __jsx(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, candidate.description))));\n  }\n\n  function formatVote() {\n    if (currentVote) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, currentVote.title), __jsx(\"div\", {\n        className: \"meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, Date(currentVote.startDate).slice(0, -42), \" to \", Date(currentVote.endDate).slice(0, -42)), __jsx(\"div\", {\n        className: \"ui card\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, currentVote.description)))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '50px',\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"ui cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, displayCandidates())), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"extra content\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        className: \"check icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }), currentVote.numVotes, \" Votes\"), __jsx(Link, {\n        route: `/elections/apply/${voteAddress}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        className: \"extra content ui inverted red button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }, __jsx(\"i\", {\n        className: \"plus icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 34\n        }\n      }), \" Apply as Candidate\")))));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 20\n        }\n      }, \" loading vote ...\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, formatVote()));\n};\n\nexport default Vote;","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/elections/vote/vote.js"],"names":["React","useEffect","useState","Header","getWeb3","VoteContract","Link","Button","Modal","Vote","web3Instance","web3","setWeb3","voteAddress","setVoteAddress","currentVote","setCurrentVote","voteInstance","setVoteInstance","candidates","setCandidates","currentUser","setCurrentUser","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","console","log","setupVote","instance","eth","Contract","abi","methods","currentElection","call","getAccounts","candidatesCount","array","i","push","candidateArray","error","alert","long","width","texAlign","margin","color","VoteModal","name","address","voteFor","send","from","displayCandidates","map","candidate","index","candidateAddr","description","formatVote","title","Date","startDate","endDate","textAlign","numVotes"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,kCAAP;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,MAAIC,YAAJ;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACW,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACa,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACe,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACiB,UAAD;AAAA,OAAaC;AAAb,MAA+BlB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM;AAAA,OAACmB,WAAD;AAAA,OAAcC;AAAd,MAAiCpB,QAAQ,CAAC,EAAD,CAA/C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAesB,QAAf,GAA0B;AACtBb,MAAAA,YAAY,GAAG,MAAMN,OAAO,EAA5B;AACAQ,MAAAA,OAAO,CAACF,YAAD,CAAP;AACH;;AACD,QAAIc,kBAAkB,GAAG,YAAU;AAC/B,YAAMC,GAAG,GAACC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;AACA,YAAMC,GAAG,GAACJ,GAAG,CAACK,OAAJ,CAAY,MAAZ,IAAoB,CAA9B;AACAhB,MAAAA,cAAc,CAACW,GAAG,CAACM,KAAJ,CAAUF,GAAV,CAAD,CAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYpB,WAAZ;AACD,KALH;;AAMAU,IAAAA,QAAQ;AACRC,IAAAA,kBAAkB;AACrB,GAbQ,EAaP,EAbO,CAAT;AAeAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiC,SAAf,GAA2B;AACvB,UAAGvB,IAAI,IAAI,EAAX,EAAe;AACX;AACH;;AACD,UAAI;AACA;AACA,cAAMwB,QAAQ,GAAG,MAAM,IAAIxB,IAAI,CAACyB,GAAL,CAASC,QAAb,CACnBhC,YAAY,CAACiC,GADM,EAEnBzB,WAFmB,CAAvB;AAIAK,QAAAA,eAAe,CAACiB,QAAD,CAAf;AACAnB,QAAAA,cAAc,CAAC,MAAMmB,QAAQ,CAACI,OAAT,CAAiBC,eAAjB,GAAmCC,IAAnC,EAAP,CAAd;AACAnB,QAAAA,cAAc,CAAC,CAAC,MAAMX,IAAI,CAACyB,GAAL,CAASM,WAAT,EAAP,CAAD,CAAd;AACA,cAAMC,eAAe,GAAG,MAAMR,QAAQ,CAACI,OAAT,CAAiBI,eAAjB,GAAmCF,IAAnC,EAA9B;AACA,YAAIG,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAApB,EAAqCE,CAAC,EAAtC,EAAyC;AACrCD,UAAAA,KAAK,CAACE,IAAN,CAAW,MAAMX,QAAQ,CAACI,OAAT,CAAiBQ,cAAjB,CAAgCF,CAAhC,EAAmCJ,IAAnC,EAAjB;AACH;;AACDrB,QAAAA,aAAa,CAACwB,KAAD,CAAb,CAdA,CAeA;AACH,OAhBD,CAgBE,OAAOI,KAAP,EAAc;AAChB;AACAC,QAAAA,KAAK,CACA,wEADA,CAAL;AAGAjB,QAAAA,OAAO,CAACgB,KAAR,CAAcA,KAAd;AACC;AACJ;;AACDd,IAAAA,SAAS;AACZ,GA9BQ,EA8BP,CAACvB,IAAD,CA9BO,CAAT;AAgCA,QAAMuC,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,QAAQ,EAAC,QAFA;AAGTC,IAAAA,MAAM,EAAE,MAHC;AAITC,IAAAA,KAAK,EAAE;AAJE,GAAb;;AAOA,WAASC,SAAT,CAAmBC,IAAnB,EAAwBC,OAAxB,EAAiC;AAC7B,aAASC,OAAT,GAAmB;AACf,UAAGzC,YAAH,EAAgB;AACZA,QAAAA,YAAY,CAACsB,OAAb,CAAqBmB,OAArB,CAA6BD,OAA7B,EAAsCE,IAAtC,CAA2C;AACvCC,UAAAA,IAAI,EAAEvC;AADiC,SAA3C;AAGH;AACJ;;AACD,WACI,MAAC,KAAD;AACI,MAAA,OAAO,EAAE;AAAQ,QAAA,SAAS,EAAC,sCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,MAAA,MAAM,EAAC,OAFX;AAGI,MAAA,OAAO,EAAE,uCAAqCmC,IAArC,GAA0C,IAHvD;AAII,MAAA,OAAO,EAAE,CACT;AAAQ,QAAA,GAAG,EAAE,CAAb;AAAgB,QAAA,SAAS,EAAC,0BAA1B;AAAqD,QAAA,OAAO,EAAEE,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADS,EAET;AAAQ,QAAA,GAAG,EAAE,CAAb;AAAgB,QAAA,SAAS,EAAC,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFS,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAED,WAASG,iBAAT,GAA6B;AACzB,QAAI1C,UAAU,IAAI,EAAlB,EAAqB;AACjB,aAAO;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,KAAK,EAAE+B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADL,CAAP;AAOH;;AAED,WAAO/B,UAAU,CAAC2C,GAAX,CAAe,CAACC,SAAD,EAAWC,KAAX,KACtB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAuB,MAAA,KAAK,EAAEd,IAA9B;AAAoC,MAAA,GAAG,EAAEc,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,SAAS,CAACP,IADf,OACsBD,SAAS,CAACQ,SAAS,CAACP,IAAX,EAAiBO,SAAS,CAACE,aAA3B,CAD/B,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,SAAS,CAACE,aADf,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,SAAS,CAACG,WADf,CAPJ,CADJ,CADO,CAAP;AAiBH;;AAED,WAASC,UAAT,GAAsB;AAClB,QAAIpD,WAAJ,EAAgB;AACZ,aAAO,4BACH;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAEmC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAG;AAACI,UAAAA,KAAK,EAAE;AAAR,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDvC,WAAW,CAACqD,KAAjE,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBC,IAAI,CAACtD,WAAW,CAACuD,SAAb,CAAJ,CAA4BvC,KAA5B,CAAkC,CAAlC,EAAoC,CAAC,EAArC,CAAvB,UAAqEsC,IAAI,CAACtD,WAAW,CAACwD,OAAb,CAAJ,CAA0BxC,KAA1B,CAAgC,CAAhC,EAAkC,CAAC,EAAnC,CAArE,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAG;AAACoB,UAAAA,KAAK,EAAE;AAAR,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIpC,WAAW,CAACmD,WAAhB,CADA,CADJ,CAHJ,CADJ,EAUI;AAAK,QAAA,KAAK,EAAE;AAACM,UAAAA,SAAS,EAAC,QAAX;AAAqBnB,UAAAA,MAAM,EAAC,MAA5B;AAAoCC,UAAAA,KAAK,EAAE;AAA3C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BO,iBAAiB,EAA7C,CADA,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAgBI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAG;AAACP,UAAAA,KAAK,EAAE;AAAR,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKvC,WAAW,CAAC0D,QAFjB,WAhBJ,EAoBI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAI,oBAAmB5D,WAAY,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,sCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,wBADJ,CADJ,CApBJ,CADG,CAAP;AA6BH,KA9BD,MA+BI;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;AACJ;;AAED,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKsD,UAAU,EAAf,CALJ,CADJ;AASH,CA9JD;;AA+JA,eAAe1D,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Header } from '../../../components/header'\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from '../../../../routes';\r\nimport { Button, Modal } from 'semantic-ui-react'\r\nconst Vote = () => {\r\n    var web3Instance;\r\n    const [web3, setWeb3] = useState('');\r\n    const [voteAddress, setVoteAddress] = useState('')\r\n    const [currentVote, setCurrentVote] = useState('')\r\n    const [voteInstance, setVoteInstance] = useState('')\r\n    const [candidates, setCandidates ] = useState('');\r\n    const [currentUser, setCurrentUser ] = useState('');\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('vote')+5;\r\n            setVoteAddress(url.slice(pos));\r\n            console.log(voteAddress);\r\n          };\r\n        initWeb3();\r\n        getElectionAddress();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        async function setupVote() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    voteAddress\r\n                );\r\n                setVoteInstance(instance);\r\n                setCurrentVote(await instance.methods.currentElection().call());\r\n                setCurrentUser([await web3.eth.getAccounts()])\r\n                const candidatesCount = await instance.methods.candidatesCount().call();\r\n                var array = []\r\n                for (var i = 0; i < candidatesCount; i++){\r\n                    array.push(await instance.methods.candidateArray(i).call())\r\n                }\r\n                setCandidates(array);\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n            }\r\n        }\r\n        setupVote();\r\n    },[web3])\r\n\r\n    const long = {\r\n        width: '90%',\r\n        texAlign:'center',\r\n        margin: 'auto',\r\n        color: '#f00000',\r\n    }\r\n\r\n    function VoteModal(name,address) {\r\n        function voteFor() {\r\n            if(voteInstance){\r\n                voteInstance.methods.voteFor(address).send({\r\n                    from: currentUser\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <Modal\r\n                trigger={<button className=\"ui right floated inverted red button\">Vote</button>}\r\n                header=\"Vote!\"\r\n                content={\"are you sure you want to vote for \"+name+\" ?\"}\r\n                actions={[\r\n                <button key={1} className=\"ui inverted green button\" onClick={voteFor}>yes</button>, \r\n                <button key={2} className=\"ui inverted red button\" >no</button>]}\r\n            />\r\n        )\r\n    }\r\n\r\n    function displayCandidates() {\r\n        if (candidates == \"\"){\r\n            return <div  className=\"card\" style={long}>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                no candidates yet \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        }\r\n\r\n        return candidates.map((candidate,index) =>\r\n        <div className=\"card\"  style={long} key={index}>\r\n            <div className=\"content ui container\">\r\n                <div className=\"header clearing segment\">\r\n                    {candidate.name} {VoteModal(candidate.name, candidate.candidateAddr)}\r\n                </div>\r\n                <div className=\"meta\">\r\n                    {candidate.candidateAddr}\r\n                </div>\r\n                <div className=\"description\">\r\n                    {candidate.description}\r\n                </div>\r\n                    \r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\n    function formatVote() {\r\n        if (currentVote){\r\n            return <>\r\n                <div className=\"ui card\" style={long}>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\" style= {{color: '#f00000'}}>{currentVote.title}</div>\r\n                        <div className=\"meta\">{Date(currentVote.startDate).slice(0,-42)} to {Date(currentVote.endDate).slice(0,-42) }</div>\r\n                        <div className=\"ui card\" style= {{width: '100%'}}>\r\n                            <div className=\"description\" >\r\n                            <p>{currentVote.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{textAlign:'center', margin:'50px', color: '#f00000'}}>\r\n                    <div className =\"ui cards\">{displayCandidates()}</div>\r\n                    </div>\r\n                    <div>            \r\n                </div>\r\n\r\n                    <div className=\"extra content\" style= {{color: '#f00000'}}>\r\n                        <i className=\"check icon\"></i>\r\n                        {currentVote.numVotes} Votes\r\n                    </div>\r\n                    <Link route ={`/elections/apply/${voteAddress}`}>\r\n                        <button className=\"extra content ui inverted red button\" >\r\n                            <div><i className=\"plus icon\"></i> Apply as Candidate</div>\r\n                        </button>\r\n                    </Link>\r\n                    \r\n                </div>\r\n            </>\r\n        }\r\n        else{\r\n            return <div> loading vote ...</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>{formatVote()}</h1>\r\n        </>\r\n    )\r\n}\r\nexport default Vote;"]},"metadata":{},"sourceType":"module"}