{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\Desktop\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Header } from '../components/header';\nimport { Link } from '../../routes';\nimport 'semantic-ui-css/semantic.min.css';\nimport Web3 from \"web3\"; // CommonJS\n\nrequire(\"regenerator-runtime/runtime\");\n\nconst styles = {\n  card: {\n    width: '90%',\n    margin: 'auto',\n    color: '#f00000',\n    maxHeight: 200,\n    minHeight: 200,\n    cursor: \"pointer\"\n  },\n  title: {\n    fontSize: 36,\n    color: '#ED1B2F',\n    marginLeft: 10,\n    marginTop: 15,\n    marginBottom: 15\n  },\n  access: {\n    position: \"relative\",\n    height: 36,\n    fontSize: 16\n  }\n};\n\nfunction App() {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState('');\n  const {\n    0: votesAddresses,\n    1: setVotesAddresses\n  } = useState('');\n  const {\n    0: contract,\n    1: setContract\n  } = useState('');\n  const {\n    0: votes,\n    1: setVotes\n  } = useState([]);\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState('');\n  const {\n    0: groups,\n    1: setGroups\n  } = useState([]);\n  const {\n    0: youVoted,\n    1: setYouVoted\n  } = useState([]);\n  useEffect(() => {\n    // get web3\n    async function initWeb3() {\n      console.log('initializing web3');\n      const web3Instance = await getWeb3();\n      setWeb3(web3Instance);\n    }\n\n    initWeb3();\n  }, []);\n  useEffect(() => {\n    // get Factory contract\n    async function setup() {\n      if (web3 == \"\") {\n        console.log('unable to get factory');\n        return;\n      }\n\n      try {\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\n        const instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n        setContract(instance);\n        const [user] = await web3.eth.getAccounts();\n        setCurrentUser(user);\n\n        if (user) {\n          const instance1 = await instance.methods.getUserAllGroups(user).call();\n          setGroups(instance1);\n        } // Set web3, accounts, and contract to the state, and then proceed with an\n\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setup(); // console.log('ok')\n  }, [web3]);\n  useEffect(() => {\n    //display available votes addresses\n    var displayVotes = async () => {\n      if (contract == '') {\n        return;\n      }\n\n      const response = await contract.methods.getDeployedVotes().call(); // Update state with the result.\n\n      setVotesAddresses(response);\n    };\n\n    displayVotes();\n  }, [contract]);\n\n  var displayInfo = async address => {\n    try {\n      // Get the contract instance.\n      const instance = new web3.eth.Contract(VoteContract.abi, address);\n\n      if ((await instance.methods.voteType().call()) == 0) {\n        const election = await instance.methods.getElection().call(); //we take a filter\n\n        if (groups.some(r => election.aGroupIDs.includes(r))) {\n          //https://stackoverflow.com/questions/16312528/check-if-an-array-contains-any-element-of-another-array-in-javascript\n          return [election, await instance.methods.getVoted(currentUser).call()];\n        }\n      } else {\n        const petition = await instance.methods.getPetition().call();\n\n        if (groups.some(r => petition.aGroupIDs.includes(r))) {\n          return [petition, await instance.methods.getVoted(currentUser).call()];\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    //render votes\n    var renderVotes = async () => {\n      if (!votesAddresses || !currentUser) {\n        return;\n      }\n\n      var tempVotes = [];\n      var tempVoted = [];\n      await votesAddresses.forEach(address => {\n        displayInfo(address).then(voteInfo => {\n          if (voteInfo) {\n            tempVotes.push(voteInfo[0]);\n            tempVoted.push(voteInfo[1]);\n          }\n        });\n      });\n      setTimeout(function () {\n        setVotes(tempVotes);\n        setYouVoted(tempVoted);\n      }, 1000);\n    };\n\n    renderVotes();\n  }, [groups]);\n  useEffect(() => {\n    console.log(votes);\n    console.log(groups);\n  }, [votes]);\n\n  function displayElectionsList() {\n    if (web3 == \"\") {\n      return \"waiting for votes to display...\";\n    } else if (votesAddresses == \"\") {\n      return \"no votes to display\";\n    }\n\n    return votes ? votes.map((vote, index) => __jsx(Link, {\n      className: \"ui button\",\n      route: `/${vote.aTypeOfElection ? \"elections\" : \"petitions\"}/vote/${vote.aVoteAddress}`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"ui card\",\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      className: \"right floated\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, vote.aNumVotes, __jsx(\"i\", {\n      className: \"user icon\",\n      style: {\n        margin: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }), youVoted[index] ? __jsx(\"i\", {\n      className: \"check circle icon\",\n      style: {\n        margin: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 38\n      }\n    }) : __jsx(\"i\", {\n      className: \"circle outline icon\",\n      style: {\n        margin: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 99\n      }\n    })), __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"header\",\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, vote.aTitle, \" -\", vote.aVoteStatus == 0 ? \" starts on \" + new Date(vote.aStartDate * 1).toUTCString().slice(0, 17) : vote.aVoteStatus == 1 ? \" ends on \" + new Date(vote.aEndDate * 1).toUTCString().slice(0, 17) : \"archived: \" + new Date(vote.aEndDate * 1).toUTCString().slice(0, 17))), __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"right floated\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      style: styles.access,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, \"access vote\"), __jsx(\"i\", {\n      className: \"angle right icon huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"ui sub header\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, __jsx(\"i\", {\n      className: \"checkmark icon small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }), vote.aTypeOfElection ? \"Election\" + \" | type of vote : \" + (vote.aVoteType == \"0\" ? \"Majority\" : \"Two-Thirds\") : \"Petition\"), __jsx(\"div\", {\n      className: \"ui feed\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, vote.aDescription)))))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, \" no votes found \");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, displayElectionsList())));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/foubroker/Desktop/voting-at-mcgill/client/src/pages/index.js"],"names":["React","useState","useEffect","VoteFactoryContract","VoteContract","getWeb3","Header","Link","Web3","require","styles","card","width","margin","color","maxHeight","minHeight","cursor","title","fontSize","marginLeft","marginTop","marginBottom","access","position","height","App","web3","setWeb3","votesAddresses","setVotesAddresses","contract","setContract","votes","setVotes","currentUser","setCurrentUser","groups","setGroups","youVoted","setYouVoted","initWeb3","console","log","web3Instance","setup","networkId","eth","net","getId","deployedNetwork","networks","instance","Contract","abi","address","user","getAccounts","instance1","methods","getUserAllGroups","call","error","alert","displayVotes","response","getDeployedVotes","displayInfo","voteType","election","getElection","some","r","aGroupIDs","includes","getVoted","petition","getPetition","renderVotes","tempVotes","tempVoted","forEach","then","voteInfo","push","setTimeout","displayElectionsList","map","vote","index","aTypeOfElection","aVoteAddress","aNumVotes","aTitle","aVoteStatus","Date","aStartDate","toUTCString","slice","aEndDate","aVoteType","aDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport { Header } from '../components/header';\r\nimport { Link } from '../../routes'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Web3 from \"web3\";\r\n// CommonJS\r\nrequire(\"regenerator-runtime/runtime\");\r\n\r\n\r\nconst styles = {\r\n  card: {\r\n    width: '90%',\r\n    margin: 'auto',\r\n    color: '#f00000',\r\n    maxHeight: 200,\r\n    minHeight: 200,\r\n    cursor: \"pointer\",\r\n  },\r\n  title : {\r\n    fontSize: 36,\r\n    color: '#ED1B2F',\r\n    marginLeft: 10,\r\n    marginTop: 15,\r\n    marginBottom:15\r\n  },\r\n  access:{\r\n    position:\"relative\",\r\n    height:36,\r\n    fontSize: 16,\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [web3, setWeb3] = useState('');\r\n  const [votesAddresses, setVotesAddresses] = useState('');\r\n  const [contract, setContract] = useState('');\r\n  const [votes, setVotes] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const [groups, setGroups] = useState([]);\r\n  const [youVoted, setYouVoted] = useState([]);\r\n\r\n  useEffect(() => {// get web3\r\n    async function initWeb3() {\r\n      console.log('initializing web3');\r\n      const web3Instance = await getWeb3();\r\n      setWeb3(web3Instance)\r\n    }\r\n    initWeb3();\r\n  },[]);\r\n\r\n  useEffect(() => {// get Factory contract\r\n    async function setup() {\r\n      if(web3 == \"\") {\r\n        console.log('unable to get factory')\r\n        return;\r\n      }\r\n      try {\r\n        // Get the contract instance.\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n        const instance = new web3.eth.Contract(\r\n          VoteFactoryContract.abi,\r\n          deployedNetwork && deployedNetwork.address,\r\n        );\r\n        setContract(instance);\r\n        const [user] = await web3.eth.getAccounts();\r\n        setCurrentUser(user);\r\n        if (user) {\r\n          const instance1 = await instance.methods.getUserAllGroups(user).call();\r\n          setGroups(instance1);\r\n        }\r\n    \r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n\r\n      \r\n    }\r\n      setup();\r\n      // console.log('ok')\r\n  },[web3]);\r\n\r\n  useEffect(()=> {//display available votes addresses\r\n    var displayVotes = async () => {\r\n      if(contract == ''){\r\n        return;\r\n      }\r\n      const response = await contract.methods.getDeployedVotes().call();\r\n      // Update state with the result.\r\n      setVotesAddresses(response);\r\n    };\r\n    displayVotes();\r\n  },[contract]);\r\n\r\n\r\n  var displayInfo = async (address) => { \r\n    try {// Get the contract instance.\r\n      const instance = new web3.eth.Contract(\r\n        VoteContract.abi,\r\n        address\r\n      );\r\n      if((await instance.methods.voteType().call()) == 0) {\r\n        const election = await instance.methods.getElection().call();//we take a filter\r\n        if(groups.some(r=> election.aGroupIDs.includes(r))){//https://stackoverflow.com/questions/16312528/check-if-an-array-contains-any-element-of-another-array-in-javascript\r\n          return [election, await instance.methods.getVoted(currentUser).call()];\r\n        }\r\n      }\r\n      else{\r\n        const petition = await instance.methods.getPetition().call();\r\n        if(groups.some(r=> petition.aGroupIDs.includes(r))) {\r\n        return [petition, await instance.methods.getVoted(currentUser).call()]\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  useEffect(()=> {//render votes\r\n    var renderVotes = async () => {\r\n        if (!votesAddresses || !currentUser){\r\n          return;\r\n        }\r\n        var tempVotes  = [];\r\n        var tempVoted = [];\r\n        await votesAddresses.forEach(address => {\r\n            displayInfo(address).then(voteInfo => {\r\n              if(voteInfo){\r\n              tempVotes.push(voteInfo[0]);\r\n              tempVoted.push(voteInfo[1]);\r\n              }\r\n          })\r\n        })\r\n        setTimeout(function(){\r\n            setVotes(tempVotes);\r\n            setYouVoted(tempVoted);\r\n          }, 1000);\r\n\r\n      }\r\n    renderVotes();\r\n  },[groups]);\r\n\r\n  useEffect(()=> {\r\n    console.log(votes);\r\n    console.log(groups);\r\n  },[votes])\r\n\r\n  function displayElectionsList() {\r\n    if(web3 == \"\"){\r\n      return \"waiting for votes to display...\"\r\n    }\r\n    else if(votesAddresses == \"\"){\r\n      return \"no votes to display\"\r\n    }\r\n    return votes ? votes.map((vote, index) => \r\n          <Link className=\"ui button\" route ={`/${vote.aTypeOfElection ? \"elections\" : \"petitions\" }/vote/${vote.aVoteAddress}`} key={index}>\r\n            <div className=\"ui card\" style={styles.card}>\r\n              <div className=\"card\">\r\n                <span className=\"right floated\">\r\n                  {vote.aNumVotes}\r\n                  <i className=\"user icon\" style={{margin: 3}}></i>\r\n                  {youVoted[index] ? <i className=\"check circle icon\" style={{margin: 3}}></i>  : <i className=\"circle outline icon\" style={{margin: 3}}></i>}\r\n                  \r\n                </span>\r\n\r\n                <div className=\"content\">\r\n                  <div className=\"header\" style={styles.title}>\r\n                      {vote.aTitle} - \r\n                      { vote.aVoteStatus == 0 ? \" starts on \" + new Date(vote.aStartDate * 1).toUTCString().slice(0,17) : \r\n                      ( vote.aVoteStatus == 1 ? \" ends on \" + new Date(vote.aEndDate * 1).toUTCString().slice(0,17):\r\n                       \"archived: \" + new Date(vote.aEndDate * 1).toUTCString().slice(0,17)\r\n                      )\r\n                      }\r\n                  </div>\r\n                </div>\r\n                <div className=\"content\">\r\n\r\n                  <span className=\"right floated\">\r\n                    <span style={styles.access} >access vote</span>\r\n                    <i className=\"angle right icon huge\"></i>\r\n                  </span>\r\n                  \r\n                  <div className=\"ui sub header\" style={{marginLeft:10}}>\r\n                    <i className=\"checkmark icon small\"></i>  \r\n                    {vote.aTypeOfElection ?  (\"Election\" + \" | type of vote : \" + (vote.aVoteType == \"0\" ? \"Majority\" : \"Two-Thirds\")) : \"Petition\" }  \r\n                  </div>\r\n                  <div className=\"ui feed\" style={{marginLeft:10}}>{ vote.aDescription }</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n      ) : <div> no votes found </div>\r\n    }\r\n\r\n  return( \r\n    <>\r\n      <Header></Header>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <div className=\"App\">\r\n        <div>{ displayElectionsList() }</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}