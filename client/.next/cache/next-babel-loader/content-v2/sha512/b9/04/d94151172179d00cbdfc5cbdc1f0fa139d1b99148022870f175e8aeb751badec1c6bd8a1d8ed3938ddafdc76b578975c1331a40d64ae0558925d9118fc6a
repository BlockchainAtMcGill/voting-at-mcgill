{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Header } from '../components/header';\nimport { Router, Link } from '../../routes';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid'; // CommonJS\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar useStyles = makeStyles({\n  card: {\n    width: '80%'\n  }\n});\n\nfunction App() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      votesAddresses = _useState[0],\n      setVotesAddresses = _useState[1];\n\n  var _useState2 = useState(''),\n      web3 = _useState2[0],\n      setWeb3 = _useState2[1];\n\n  var _useState3 = useState(''),\n      accounts = _useState3[0],\n      setAccounts = _useState3[1];\n\n  var _useState4 = useState(''),\n      contract = _useState4[0],\n      setContract = _useState4[1];\n\n  var _useState5 = useState(''),\n      voteContract = _useState5[0],\n      setVoteContract = _useState5[1];\n\n  var web3Instance;\n  useEffect(function () {\n    // get web3\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []);\n  useEffect(function () {\n    // get Factory contract\n    function setup() {\n      return _setup.apply(this, arguments);\n    }\n\n    function _setup() {\n      _setup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var networkId, deployedNetwork, instance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.prev = 2;\n                _context2.t0 = setAccounts;\n                _context2.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                _context2.t1 = _context2.sent;\n                (0, _context2.t0)(_context2.t1);\n                _context2.next = 10;\n                return web3.eth.net.getId();\n\n              case 10:\n                networkId = _context2.sent;\n                deployedNetwork = VoteFactoryContract.networks[networkId];\n                instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                _context2.t2 = setAccounts;\n                _context2.next = 16;\n                return web3.eth.getAccounts();\n\n              case 16:\n                _context2.t3 = _context2.sent;\n                (0, _context2.t2)(_context2.t3);\n                setContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context2.next = 25;\n                break;\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t4 = _context2[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context2.t4);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 21]]);\n      }));\n      return _setup.apply(this, arguments);\n    }\n\n    setup();\n  }, [web3]);\n  useEffect(function () {\n    //just get Vote contract\n    function setup() {\n      return _setup2.apply(this, arguments);\n    }\n\n    function _setup2() {\n      _setup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                try {\n                  // Get the contract instance.\n                  instance = new web3.eth.Contract(VoteContract.abi, votesAddresses[0]);\n                  setVoteContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n                } catch (error) {\n                  // Catch any errors for any of the above operations.\n                  alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                  console.error(error);\n                }\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _setup2.apply(this, arguments);\n    }\n\n    setup();\n  }, [contract, votesAddresses]);\n  useEffect(function () {\n    //testing code for factory contract\n    var createVote = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(contract == '')) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return contract.methods.createVote(0).send({\n                  from: accounts[0]\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function createVote() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var displayVotes = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(contract == '')) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                _context5.next = 4;\n                return contract.methods.getDeployedVotes().call();\n\n              case 4:\n                response = _context5.sent;\n                // Update state with the result.\n                console.log(\"first vote is \" + response[0]);\n                setVotesAddresses(response);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function displayVotes() {\n        return _ref2.apply(this, arguments);\n      };\n    }(); // createVote();\n\n\n    displayVotes();\n  }, [contract]);\n\n  function handleClick(_x) {\n    return _handleClick.apply(this, arguments);\n  } // async function accessVote(e) {\n  //   e.preventDefault();\n  //   console.log(\"button clicked\");\n  //   Router.pushRoute('/home')\n  // }\n\n\n  function _handleClick() {\n    _handleClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n      var summary;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              e.preventDefault();\n              console.log('The link was clicked.');\n              _context6.next = 4;\n              return voteContract.methods.editElection(\"title\", 1, 2, \"description\", [1, 2, 3]).send({\n                from: accounts[0]\n              });\n\n            case 4:\n              _context6.next = 6;\n              return voteContract.methods.currentElection().call();\n\n            case 6:\n              summary = _context6.sent;\n              console.log(summary);\n              console.log(\"method was sent\");\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _handleClick.apply(this, arguments);\n  }\n\n  function displayVoteList() {\n    var _this = this;\n\n    if (votesAddresses == \"\") {\n      return \"waiting for votes to display\";\n    }\n\n    return votesAddresses.map(function (address) {\n      return __jsx(Card, {\n        variant: \"outlined\",\n        key: address,\n        className: classes.card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, __jsx(CardContent, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, __jsx(Grid, {\n        container: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 11,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 35\n        }\n      }, address)), __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, __jsx(Link, {\n        size: \"small\",\n        route: \"/elections/options/\".concat(address),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, \"Access\")))));\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, displayVoteList())));\n}\n\n_s(App, \"OLa/w32w2xBblAnJFP4CdzASwCs=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/index.js"],"names":["React","useState","useEffect","makeStyles","VoteFactoryContract","VoteContract","getWeb3","Header","Router","Link","Card","CardContent","Button","Grid","require","useStyles","card","width","App","classes","votesAddresses","setVotesAddresses","web3","setWeb3","accounts","setAccounts","contract","setContract","voteContract","setVoteContract","web3Instance","initWeb3","setup","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","alert","console","error","createVote","methods","send","from","displayVotes","getDeployedVotes","call","response","log","handleClick","e","preventDefault","editElection","currentElection","summary","displayVoteList","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport { Header } from '../components/header';\r\nimport { Router, Link } from '../../routes'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n// CommonJS\r\nrequire(\"regenerator-runtime/runtime\");\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width:'80%'\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [votesAddresses, setVotesAddresses] = useState('');\r\n  const [web3, setWeb3] = useState('');\r\n  const [accounts, setAccounts] = useState('');\r\n  const [contract, setContract] = useState('');\r\n  const [voteContract, setVoteContract] = useState('');\r\n  var web3Instance;\r\n  useEffect(() => {// get web3\r\n    async function initWeb3() {\r\n      web3Instance = await getWeb3()\r\n      setWeb3(web3Instance);\r\n    }\r\n    initWeb3();\r\n  },[]);\r\n\r\n  useEffect(() => {// get Factory contract\r\n    async function setup() {\r\n      if(web3 == '') {\r\n        return;\r\n      }\r\n      try {\r\n        setAccounts(await web3.eth.getAccounts());\r\n        // Get the contract instance.\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n        const instance = new web3.eth.Contract(\r\n          VoteFactoryContract.abi,\r\n          deployedNetwork && deployedNetwork.address,\r\n        );\r\n        setAccounts(await web3.eth.getAccounts());\r\n        setContract(instance);\r\n    \r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n    }\r\n      setup();\r\n  },[web3]);\r\n\r\n  useEffect(() => {//just get Vote contract\r\n    async function setup() {\r\n      if(web3 == '') {\r\n        return;\r\n      }\r\n      try {\r\n        // Get the contract instance.\r\n        const instance = new web3.eth.Contract(\r\n          VoteContract.abi,\r\n          votesAddresses[0],\r\n        );\r\n        setVoteContract(instance);\r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n      }\r\n    }\r\n      setup();\r\n  },[contract,votesAddresses]);\r\n\r\n  useEffect(()=> {//testing code for factory contract\r\n    var createVote = async () => {\r\n      if(contract == ''){\r\n        return;\r\n      }\r\n      // Get the value from the contract to prove it worked.\r\n      // uncomment to create votes, note that second await call wont run if first is run.\r\n      await contract.methods.createVote(0).send({\r\n        from: accounts[0]\r\n      });\r\n    };\r\n    var displayVotes = async () => {\r\n      if(contract == ''){\r\n        return;\r\n      }\r\n      const response = await contract.methods.getDeployedVotes().call();\r\n      // Update state with the result.\r\n      console.log(\"first vote is \" + response[0]);\r\n      setVotesAddresses(response);\r\n    };\r\n    // createVote();\r\n    displayVotes();\r\n  },[contract]);\r\n\r\n  async function handleClick(e) {\r\n    e.preventDefault();\r\n    console.log('The link was clicked.');\r\n    await voteContract.methods.editElection(\"title\", 1, 2, \"description\", [1,2,3]).send({\r\n      from: accounts[0]\r\n    });\r\n    const summary = await voteContract.methods.currentElection().call();\r\n    console.log(summary);\r\n    console.log(\"method was sent\")\r\n  }\r\n  // async function accessVote(e) {\r\n  //   e.preventDefault();\r\n  //   console.log(\"button clicked\");\r\n  //   Router.pushRoute('/home')\r\n  // }\r\n\r\n  function displayVoteList() {\r\n    if(votesAddresses == \"\"){\r\n      return \"waiting for votes to display\"\r\n    }\r\n    return votesAddresses.map(address => \r\n        <Card variant=\"outlined\" key={address} className ={classes.card}> \r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item xs ={11}><span>{address}</span></Grid>\r\n              <Grid item xs ={1}>\r\n              <Link size=\"small\" route ={`/elections/options/${address}`}> \r\n                Access</Link>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n  return( \r\n    <>\r\n      <Header></Header>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <div className=\"App\">\r\n        <button onClick={handleClick}></button>\r\n        <div>{ displayVoteList() }</div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}