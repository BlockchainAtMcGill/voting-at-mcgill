{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/wen_wong/voting-at-mcgill/client/src/pages/newGroup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport { Form, Modal, Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\nimport getWeb3 from \"../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\nvar adminTitle = {\n  color: \"red\",\n  marginBottom: \"5%\",\n  fontSize: \"3em\",\n  textAlign: \"center\"\n};\nvar adminFields = {\n  margin: \"auto 5% auto 5%\"\n};\n\nvar NewGroup = function NewGroup() {\n  _s();\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(true),\n      Load = _useState2[0],\n      setLoad = _useState2[1];\n\n  var web3Instance;\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, [Load]);\n\n  var _useState3 = useState(''),\n      groupName = _useState3[0],\n      setGroupName = _useState3[1];\n\n  var _useState4 = useState(''),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(''),\n      groupID = _useState5[0],\n      setGroupID = _useState5[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(event) {\n      var manager, factoryContract, voteContract, addressOfVote, setupVoteFactory, createGroup, displayGroup;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              event.preventDefault();\n\n              // Initializes VoteFactory Contract\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context2.next = 2;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\");\n\n                        case 2:\n                          _context2.prev = 2;\n                          _context2.next = 5;\n                          return web3.eth.getAccounts();\n\n                        case 5:\n                          _yield$web3$eth$getAc = _context2.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          manager = _yield$web3$eth$getAc2[0];\n                          _context2.next = 10;\n                          return web3.eth.net.getId();\n\n                        case 10:\n                          networkId = _context2.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context2.next = 20;\n                          break;\n\n                        case 16:\n                          _context2.prev = 16;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context2.t0);\n\n                        case 20:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 16]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }(); // Calls VoteFactory Contract to create a new instance of Group\n\n\n              createGroup = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!(factoryContract == '')) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\");\n\n                        case 2:\n                          _context3.next = 4;\n                          return factoryContract.methods.createGroup(groupName, description, groupID).send({\n                            from: manager\n                          });\n\n                        case 4:\n                          setLoad(!load);\n\n                        case 5:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function createGroup() {\n                  return _ref3.apply(this, arguments);\n                };\n              }(); // Verify the values of the newly created instance of Group\n\n\n              displayGroup = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return factoryContract.methods.getGroup(groupID).call();\n\n                        case 2:\n                          summary = _context4.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function displayGroup() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              _context5.next = 6;\n              return setupVoteFactory();\n\n            case 6:\n              _context5.next = 8;\n              return setupVote();\n\n            case 8:\n              _context5.next = 10;\n              return createGroup();\n\n            case 10:\n              _context5.next = 12;\n              return displayGroup();\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    style: adminTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"New Group\"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: adminFields,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Group name\",\n    value: groupName,\n    onChange: function onChange(event) {\n      return setGroupName(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(Form.TextArea, {\n    required: true,\n    label: \"Description\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Group ID\",\n    value: groupID,\n    onChange: function onChange(event) {\n      return setGroupID(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), __jsx(Loader, {\n    active: voting,\n    inline: \"centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Create Group\"))));\n};\n\n_s(NewGroup, \"1/6LHTp/Qh2HkDA0rkT5ZRowfpM=\");\n\n_c = NewGroup;\nexport default NewGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"sources":["/home/wen_wong/voting-at-mcgill/client/src/pages/newGroup.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","Form","Modal","Dimmer","Loader","Image","Segment","getWeb3","adminTitle","color","marginBottom","fontSize","textAlign","adminFields","margin","NewGroup","web3","setWeb3","Load","setLoad","web3Instance","initWeb3","groupName","setGroupName","description","setDescription","groupID","setGroupID","onSubmit","event","preventDefault","setupVoteFactory","eth","getAccounts","manager","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","alert","console","error","createGroup","methods","send","from","load","displayGroup","getGroup","call","summary","log","setupVote","target","value","voting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport { Form, Modal, Dimmer, Loader, Image, Segment  } from \"semantic-ui-react\";\nimport getWeb3 from \"../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\n\nconst adminTitle = {\n    color: \"red\",\n    marginBottom: \"5%\",\n    fontSize: \"3em\",\n    textAlign: \"center\"\n};\n\nconst adminFields = {\n    margin: \"auto 5% auto 5%\"\n};\n\nconst NewGroup = () => {\n\n    const [web3, setWeb3] = useState('');\n    const [Load, setLoad] = useState(true);\n    var web3Instance;\n\n    useEffect(() => {\n        async function initWeb3() {\n            web3Instance = await getWeb3();\n            setWeb3(web3Instance);\n        }\n        initWeb3();\n    },[Load]);\n\n    const [groupName, setGroupName] = useState('');\n    const [description, setDescription] = useState('');\n    const [groupID, setGroupID] = useState('');\n\n    var onSubmit = async (event) => {\n        event.preventDefault();\n        var manager;\n        var factoryContract;\n        var voteContract;\n        var addressOfVote;\n        \n        // Initializes VoteFactory Contract\n        var setupVoteFactory = async () => {\n            if(web3 == '') {\n                return;\n            }\n            try {\n                [manager] = (await web3.eth.getAccounts());\n                // Get the contract instance.\n                const networkId = await web3.eth.net.getId();\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\n                const instance = new web3.eth.Contract(\n                    VoteFactoryContract.abi,\n                    deployedNetwork && deployedNetwork.address,\n                );\n                factoryContract = instance;\n\n                // Set web3, accounts, and contract to the state, and then proceed with an\n            } catch (error) {\n                // Catch any errors for any of the above operations.\n                alert(\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\n                );\n                console.error(error);\n            }\n        };\n        // Calls VoteFactory Contract to create a new instance of Group\n        var createGroup = async () => {\n            if(factoryContract == ''){\n                return;\n            }\n            // Calls the method createGroup from VoteFactory.sol\n            await factoryContract.methods.createGroup(groupName, description, groupID).send({\n                from: manager\n            });\n            setLoad(!load);\n        };\n\n        // Verify the values of the newly created instance of Group\n        var displayGroup = async () => {\n            const summary = await factoryContract.methods.getGroup(groupID).call();\n            console.log(summary);\n        };\n\n        await setupVoteFactory();\n        await setupVote();\n        await createGroup();\n        await displayGroup();\n    };\n\n    return (\n        <>\n            <Header/>\n            <br></br>\n            <br></br>\n            <br></br>\n            <h1 style={adminTitle}>New Group</h1>\n            \n            <Form onSubmit={onSubmit} style={adminFields}>\n                <div>\n                    <Form.Input required label=\"Group name\"\n                                 value={groupName}\n                                 onChange={event => setGroupName(event.target.value)}\n                    >\n\n                    </Form.Input>\n                </div>\n                <br></br>\n                <div>\n                    <Form.TextArea required\n                                 label=\"Description\"\n                                 value={description}\n                                 onChange={event => setDescription(event.target.value)}\n                    />\n                </div>\n                <br></br>\n                <div>\n                    <Form.Input required label=\"Group ID\"\n                                 value={groupID}\n                                 onChange={event => setGroupID(event.target.value)}\n                    >\n\n                    </Form.Input>\n                </div>\n                <br></br>\n                <Loader\n                        active={voting}\n                        inline='centered'\n                />                     \n                <br></br>\n                <div>\n                    <Form.Button>Cancel</Form.Button>\n                    <Form.Button type=\"submit\" onSubmit={onSubmit}>Create Group</Form.Button>\n                </div>\n            </Form>\n        </>\n    )\n};\nexport default NewGroup;\n"]},"metadata":{},"sourceType":"module"}