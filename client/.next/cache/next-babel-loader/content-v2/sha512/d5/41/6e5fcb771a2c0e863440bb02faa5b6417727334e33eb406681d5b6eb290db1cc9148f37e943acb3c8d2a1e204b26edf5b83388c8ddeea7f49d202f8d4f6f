{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\Desktop\\\\BAM\\\\voting-at-mcgill-2\\\\client\\\\src\\\\pages\\\\newElection.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport { Form } from \"semantic-ui-react\";\nimport getWeb3 from \"../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Router from 'next/router';\nvar adminTitle = {\n  color: \"red\",\n  marginBottom: \"5%\",\n  fontSize: \"3em\",\n  textAlign: \"center\"\n};\nvar adminFields = {\n  margin: \"auto 5% auto 5%\"\n};\n\nvar NewElection = function NewElection() {\n  _s();\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(''),\n      manager = _useState2[0],\n      setManager = _useState2[1];\n\n  var _useState3 = useState(''),\n      voteFactory = _useState3[0],\n      setVoteFactory = _useState3[1];\n\n  var _useState4 = useState(''),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(0),\n      startDate = _useState5[0],\n      setStartDate = _useState5[1];\n\n  var _useState6 = useState(0),\n      endDate = _useState6[0],\n      setEndDate = _useState6[1];\n\n  var _useState7 = useState('majority'),\n      electionType = _useState7[0],\n      setElectionType = _useState7[1];\n\n  var _useState8 = useState([]),\n      electionGroups = _useState8[0],\n      setElectionGroups = _useState8[1];\n\n  var _useState9 = useState(''),\n      description = _useState9[0],\n      setDescription = _useState9[1]; // initializing web3\n\n\n  useEffect(function () {\n    var web3Instance;\n\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []); // Initializing VoteFactory contract\n\n  useEffect(function () {\n    function setup() {\n      return _setup.apply(this, arguments);\n    }\n\n    function _setup() {\n      _setup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, user, networkId, deployedNetwork, instance;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(web3 == \"\")) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                console.log('unable to get factory');\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                _context2.prev = 3;\n                _context2.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                _yield$web3$eth$getAc = _context2.sent;\n                _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                user = _yield$web3$eth$getAc2[0];\n                setManager(user);\n                _context2.next = 12;\n                return web3.eth.net.getId();\n\n              case 12:\n                networkId = _context2.sent;\n                deployedNetwork = VoteFactoryContract.networks[networkId];\n                instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                setVoteFactory(instance);\n                _context2.next = 22;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](3);\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context2.t0);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 18]]);\n      }));\n      return _setup.apply(this, arguments);\n    }\n\n    setup();\n  }, [web3]);\n  var electionTypes = [{\n    key: 'sm',\n    text: 'simple majority',\n    value: 'majority'\n  }, {\n    key: 'tt',\n    text: 'two thirds',\n    value: 'twoThirds'\n  }];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(event) {\n      var factoryContract, voteContract, addressOfVote, setupVoteFactory, createVote, getElectionAddress, initializeElection, setUpElection, displayVote;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              event.preventDefault();\n\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var _ref3, _ref4, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\");\n\n                        case 2:\n                          _context3.prev = 2;\n\n                          _readOnlyError(\"manager\");\n\n                          _context3.next = 6;\n                          return web3.eth.getAccounts();\n\n                        case 6:\n                          _ref3 = _context3.sent;\n                          _ref4 = _slicedToArray(_ref3, 1);\n                          manager = _ref4[0];\n                          _context3.next = 11;\n                          return web3.eth.net.getId();\n\n                        case 11:\n                          networkId = _context3.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context3.next = 21;\n                          break;\n\n                        case 17:\n                          _context3.prev = 17;\n                          _context3.t0 = _context3[\"catch\"](2);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context3.t0);\n\n                        case 21:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[2, 17]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              createVote = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          if (!(factoryContract == '')) {\n                            _context4.next = 2;\n                            break;\n                          }\n\n                          return _context4.abrupt(\"return\");\n\n                        case 2:\n                          _context4.next = 4;\n                          return factoryContract.methods.createVote(0).send({\n                            from: manager\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function createVote() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              getElectionAddress = /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return factoryContract.methods.getDeployedVotes().call();\n\n                        case 2:\n                          response = _context5.sent;\n                          addressOfVote = response[response.length - 1];\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function getElectionAddress() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              initializeElection = /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  var instance;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.prev = 0;\n                          _context6.next = 3;\n                          return new web3.eth.Contract(VoteContract.abi, addressOfVote);\n\n                        case 3:\n                          instance = _context6.sent;\n                          voteContract = instance;\n                          _context6.next = 11;\n                          break;\n\n                        case 7:\n                          _context6.prev = 7;\n                          _context6.t0 = _context6[\"catch\"](0);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context6.t0);\n\n                        case 11:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6, null, [[0, 7]]);\n                }));\n\n                return function initializeElection() {\n                  return _ref7.apply(this, arguments);\n                };\n              }();\n\n              setUpElection = /*#__PURE__*/function () {\n                var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (voteContract) {\n                            _context7.next = 3;\n                            break;\n                          }\n\n                          console.log(\"voteContract dne\");\n                          return _context7.abrupt(\"return\");\n\n                        case 3:\n                          _context7.next = 5;\n                          return voteContract.methods.editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, electionType).send({\n                            from: manager\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function setUpElection() {\n                  return _ref8.apply(this, arguments);\n                };\n              }();\n\n              displayVote = /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _context8.next = 2;\n                          return voteContract.methods.currentElection().call();\n\n                        case 2:\n                          summary = _context8.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function displayVote() {\n                  return _ref9.apply(this, arguments);\n                };\n              }();\n\n              _context9.next = 9;\n              return setupVoteFactory();\n\n            case 9:\n              _context9.next = 11;\n              return createVote();\n\n            case 11:\n              _context9.next = 13;\n              return getElectionAddress();\n\n            case 13:\n              _context9.next = 15;\n              return initializeElection();\n\n            case 15:\n              _context9.next = 17;\n              return setUpElection();\n\n            case 17:\n              _context9.next = 19;\n              return displayVote();\n\n            case 19:\n              Router.push(\"/\");\n\n            case 20:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    style: adminTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"New Election\"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: adminFields,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Election title\",\n    value: title,\n    onChange: function onChange(event) {\n      return setTitle(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    label: \"Start date\",\n    type: \"date\",\n    value: startDate,\n    onChange: function onChange(event) {\n      return setStartDate(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"End date\",\n    type: \"date\",\n    value: endDate,\n    onChange: function onChange(event) {\n      return setEndDate(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Select, {\n    fluid: true,\n    label: \"Type of election\",\n    options: electionTypes,\n    placeholder: \"Type of election\",\n    value: electionType,\n    onChange: function onChange(event) {\n      return setElectionType(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, __jsx(Form.TextArea, {\n    required: true,\n    label: \"Description\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, \"Publish Election\"))));\n};\n\n_s(NewElection, \"C+03X1lhRZ0S490JZ5yy7GoQ7e0=\");\n\n_c = NewElection;\nexport default NewElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewElection\");","map":{"version":3,"sources":["C:/Users/foubroker/Desktop/BAM/voting-at-mcgill-2/client/src/pages/newElection.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","Form","getWeb3","Router","adminTitle","color","marginBottom","fontSize","textAlign","adminFields","margin","NewElection","web3","setWeb3","manager","setManager","voteFactory","setVoteFactory","title","setTitle","startDate","setStartDate","endDate","setEndDate","electionType","setElectionType","electionGroups","setElectionGroups","description","setDescription","web3Instance","initWeb3","setup","console","log","eth","getAccounts","user","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","alert","error","electionTypes","key","text","value","onSubmit","event","preventDefault","setupVoteFactory","factoryContract","createVote","methods","send","from","getElectionAddress","getDeployedVotes","call","response","addressOfVote","length","initializeElection","voteContract","setUpElection","editElection","Date","getTime","displayVote","currentElection","summary","push","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../components/header';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Router from 'next/router';\r\n\r\nconst adminTitle = {\r\n    color: \"red\",\r\n    marginBottom: \"5%\",\r\n    fontSize: \"3em\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst adminFields = {\r\n    margin: \"auto 5% auto 5%\"\r\n};\r\n\r\nconst NewElection = () => {\r\n\r\n    const [web3, setWeb3] = useState('');\r\n    const [manager, setManager] = useState('');\r\n    const [voteFactory, setVoteFactory] = useState('');\r\n\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [startDate, setStartDate] = useState(0);\r\n    const [endDate, setEndDate] = useState(0);\r\n    const [electionType, setElectionType] = useState('majority');\r\n    const [electionGroups, setElectionGroups] = useState([]);\r\n    const [description, setDescription] = useState('');\r\n    \r\n    // initializing web3\r\n    useEffect(() => {\r\n        var web3Instance;\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        initWeb3();\r\n    },[]);\r\n\r\n    // Initializing VoteFactory contract\r\n    useEffect(()=> {\r\n        async function setup() {\r\n            if(web3 == \"\") {\r\n              console.log('unable to get factory')\r\n              return;\r\n            }\r\n            try {\r\n              var [user] = await web3.eth.getAccounts();\r\n              setManager(user);\r\n              const networkId = await web3.eth.net.getId();\r\n              const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n              const instance = new web3.eth.Contract(\r\n                VoteFactoryContract.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n              );\r\n              setVoteFactory(instance);\r\n          \r\n            } catch (error) {\r\n              alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n              );\r\n              console.error(error);\r\n            }\r\n          }\r\n            setup();\r\n\r\n    },[web3])\r\n\r\n    const electionTypes = [\r\n        {\r\n            key: 'sm',\r\n            text: 'simple majority',\r\n            value: 'majority'\r\n\r\n        },\r\n        {\r\n            key: 'tt',\r\n            text: 'two thirds',\r\n            value: 'twoThirds'\r\n        }\r\n    ];\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var factoryContract;\r\n        var voteContract;\r\n        var addressOfVote;\r\n        var setupVoteFactory = async () => { //initializes voteFactory\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                [manager] = (await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var createVote = async () => {//uses voteFactory to create Vote\r\n            if(factoryContract == ''){\r\n                return;\r\n            }\r\n            // Get the value from the contract to prove it worked.\r\n            await factoryContract.methods.createVote(0).send({\r\n                from: manager\r\n            });\r\n        };\r\n        var getElectionAddress = async () => {//calls voteFactory method to get new Vote address\r\n            const response = await factoryContract.methods.getDeployedVotes().call();\r\n            addressOfVote = response[response.length - 1];\r\n        };\r\n        var initializeElection = async () => {//initializes vote contract\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    addressOfVote,\r\n                );\r\n                voteContract = instance;\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var setUpElection = async() => {//call to vote contract to edit election\r\n            if (!voteContract) {\r\n                console.log(\"voteContract dne\");\r\n                return;\r\n            }\r\n            await voteContract.methods\r\n                .editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, electionType)\r\n                .send({\r\n                    from: manager\r\n                })\r\n        };\r\n\r\n        var displayVote = async () => { // testing purposes\r\n            const summary = await voteContract.methods.currentElection().call();\r\n            console.log(summary);\r\n        };\r\n        await setupVoteFactory();\r\n        await createVote();\r\n        await getElectionAddress();\r\n        await initializeElection();\r\n        await setUpElection();\r\n        await displayVote();\r\n        Router.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1 style={adminTitle}>New Election</h1>\r\n            \r\n            <Form onSubmit={onSubmit} style={adminFields}>\r\n                <div>\r\n                    <Form.Input required label=\"Election title\"\r\n                                 value={title}\r\n                                 onChange={event => setTitle(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input label=\"Start date\" type=\"date\"\r\n\r\n                                 value={startDate}\r\n                                 onChange={event => setStartDate(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Input required label=\"End date\" type=\"date\"\r\n\r\n                                 value={endDate}\r\n                                 onChange={event => setEndDate(event.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.Select\r\n                        fluid\r\n                        label='Type of election'\r\n                        options={electionTypes}\r\n                        placeholder='Type of election'\r\n                        value={electionType}\r\n                        onChange={event => setElectionType(event.target.value)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Form.TextArea required\r\n                                 label=\"Description\"\r\n\r\n                                 value={description}\r\n                                 onChange={event => setDescription(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <Form.Button>Cancel</Form.Button>\r\n                    <Form.Button type=\"submit\" onSubmit={onSubmit}>Publish Election</Form.Button>\r\n                </div>\r\n\r\n\r\n            </Form>\r\n        </>\r\n    )\r\n};\r\nexport default NewElection;\r\n"]},"metadata":{},"sourceType":"module"}