{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\Desktop\\\\BAM\\\\voting-at-mcgill-2\\\\client\\\\src\\\\pages\\\\elections\\\\vote\\\\vote.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\nimport { Modal, Dimmer, Loader, Image, Segment } from 'semantic-ui-react';\nimport { PieChart, Pie, Tooltip, BarChart, XAxis, YAxis, Legend, CartesianGrid, Bar, ResponsiveContainer } from \"recharts\";\n\nvar Vote = function Vote() {\n  _s();\n\n  var web3Instance;\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(''),\n      voteAddress = _useState2[0],\n      setVoteAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      currentVote = _useState3[0],\n      setCurrentVote = _useState3[1];\n\n  var _useState4 = useState(''),\n      voteInstance = _useState4[0],\n      setVoteInstance = _useState4[1];\n\n  var _useState5 = useState(''),\n      candidates = _useState5[0],\n      setCandidates = _useState5[1];\n\n  var _useState6 = useState(''),\n      currentUser = _useState6[0],\n      setCurrentUser = _useState6[1];\n\n  var _useState7 = useState(false),\n      voting = _useState7[0],\n      setVoting = _useState7[1];\n\n  var _useState8 = useState(false),\n      hasVoted = _useState8[0],\n      setHasVoted = _useState8[1];\n\n  var _useState9 = useState(true),\n      load = _useState9[0],\n      setLoad = _useState9[1];\n\n  var _useState10 = useState([]),\n      cAddresses = _useState10[0],\n      setCAddresses = _useState10[1];\n\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context2.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    var getElectionAddress = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, pos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = window.location.href;\n                pos = url.indexOf('vote') + 5;\n                setVoteAddress(url.slice(pos));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getElectionAddress() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    initWeb3();\n    getElectionAddress();\n  }, [load]);\n  useEffect(function () {\n    function setupVote() {\n      return _setupVote.apply(this, arguments);\n    }\n\n    function _setupVote() {\n      _setupVote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance, current, _yield$web3$eth$getAc, _yield$web3$eth$getAc2, candidatesAddresses, candidatesCount, array, i;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return new web3.eth.Contract(VoteContract.abi, voteAddress);\n\n              case 5:\n                instance = _context3.sent;\n                setVoteInstance(instance);\n                _context3.t0 = setCurrentVote;\n                _context3.next = 10;\n                return instance.methods.currentElection().call();\n\n              case 10:\n                _context3.t1 = _context3.sent;\n                (0, _context3.t0)(_context3.t1);\n                _context3.next = 14;\n                return web3.eth.getAccounts();\n\n              case 14:\n                _yield$web3$eth$getAc = _context3.sent;\n                _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                current = _yield$web3$eth$getAc2[0];\n                setCurrentUser(current);\n                _context3.t2 = setHasVoted;\n                _context3.next = 21;\n                return instance.methods.getVoted(current).call();\n\n              case 21:\n                _context3.t3 = _context3.sent;\n                (0, _context3.t2)(_context3.t3);\n                _context3.next = 25;\n                return instance.methods.getCandidatesAddresses().call();\n\n              case 25:\n                candidatesAddresses = _context3.sent;\n                setCAddresses(candidatesAddresses);\n                _context3.next = 29;\n                return instance.methods.candidatesCount().call();\n\n              case 29:\n                candidatesCount = _context3.sent;\n                array = [];\n                i = 0;\n\n              case 32:\n                if (!(i < candidatesCount)) {\n                  _context3.next = 42;\n                  break;\n                }\n\n                console.log(candidatesAddresses[i]);\n                _context3.t4 = array;\n                _context3.next = 37;\n                return instance.methods.get_candidate(candidatesAddresses[i]).call();\n\n              case 37:\n                _context3.t5 = _context3.sent;\n\n                _context3.t4.push.call(_context3.t4, _context3.t5);\n\n              case 39:\n                i++;\n                _context3.next = 32;\n                break;\n\n              case 42:\n                setCandidates(array);\n                console.log(array); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context3.next = 50;\n                break;\n\n              case 46:\n                _context3.prev = 46;\n                _context3.t6 = _context3[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context3.t6);\n\n              case 50:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 46]]);\n      }));\n      return _setupVote.apply(this, arguments);\n    }\n\n    setupVote();\n  }, [web3]);\n  var long = {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto',\n    color: '#f00000'\n  };\n\n  function VoteModal(name, address) {\n    var voteFor = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!voteInstance) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                setVoting(true);\n                _context4.next = 4;\n                return voteInstance.methods.voteFor(address).send({\n                  from: currentUser\n                });\n\n              case 4:\n                setVoting(false);\n                setLoad(!load);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function voteFor() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!hasVoted) {\n      return __jsx(Modal, {\n        trigger: __jsx(\"button\", {\n          className: \"ui right floated inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 30\n          }\n        }, \"Vote\"),\n        header: \"Vote!\",\n        content: \"are you sure you want to vote for \" + name + \" ?\",\n        actions: [__jsx(\"button\", {\n          key: 1,\n          className: \"ui inverted green button\",\n          onClick: voteFor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, \"yes\"), __jsx(\"button\", {\n          key: 2,\n          className: \"ui inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        }, \"no\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      });\n    } else return __jsx(React.Fragment, null);\n  }\n\n  function leaveElection() {\n    var startDate = new Date(currentVote.startDate * 1);\n    var currDate = new Date();\n\n    var leavethis = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!voteInstance) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                setVoting(true);\n                _context5.next = 4;\n                return voteInstance.methods.leaveElection().send({\n                  from: currentUser\n                });\n\n              case 4:\n                setVoting(false);\n                setLoad(!load);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function leavethis() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (currDate < startDate) {\n      return __jsx(Modal, {\n        trigger: __jsx(\"button\", {\n          className: \"ui right floated inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 28\n          }\n        }, \"Leave Election\"),\n        header: \"Leave Election\",\n        content: \"are you sure you want to no longer be a candidate\",\n        actions: [__jsx(\"button\", {\n          key: 1,\n          className: \"ui inverted green button\",\n          onClick: leavethis,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }\n        }, \"yes\"), __jsx(\"button\", {\n          key: 2,\n          className: \"ui inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }\n        }, \"no\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      });\n    }\n  }\n\n  function applyELection() {\n    var startDate = new Date(currentVote.startDate * 1);\n    var currDate = new Date(); //   if(currDate<startDate){\n\n    return __jsx(Link, {\n      route: \"/elections/apply/\".concat(voteAddress),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      className: \"extra content ui inverted red button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, __jsx(\"i\", {\n      className: \"plus icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }\n    }), \" Apply as Candidate\"))); //   }\n  }\n\n  var data = [];\n  /*\r\n  <div className=\"content ui container\">\r\n      <div className=\"header clearing segment\">\r\n          {candidate.name} {VoteModal(candidate.name, candidate.candidateAddr)}:        {candidate.numVotes/currentVote.numVotes*100}%\r\n        </div>\r\n  </div>\r\n  */\n\n  function displayPer() {\n    var newrow = {};\n    var fewrow = {};\n\n    if (candidates == \"\") {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 22\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 31\n        }\n      }, \"no candidates yet\")));\n    }\n\n    candidates.map(function (candidate) {\n      data.push({\n        name: candidate[0],\n        value: parseInt(candidate[2])\n      });\n    });\n  }\n\n  console.log(data);\n\n  function chart() {\n    var _this2 = this;\n\n    return __jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, __jsx(PieChart, {\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, __jsx(Pie, {\n      data: data,\n      cx: \"50%\",\n      cy: \"50%\",\n      outerRadius: 100,\n      fill: \"#FF0000\",\n      dataKey: \"value\",\n      label: function label(_ref4) {\n        var cx = _ref4.cx,\n            cy = _ref4.cy,\n            midAngle = _ref4.midAngle,\n            innerRadius = _ref4.innerRadius,\n            outerRadius = _ref4.outerRadius,\n            value = _ref4.value,\n            index = _ref4.index;\n        console.log(\"handling label?\");\n        var RADIAN = Math.PI / 180; // eslint-disable-next-line\n\n        var radius = 25 + innerRadius + (outerRadius - innerRadius); // eslint-disable-next-line\n\n        var x = cx + radius * Math.cos(-midAngle * RADIAN); // eslint-disable-next-line\n\n        var y = cy + radius * Math.sin(-midAngle * RADIAN);\n        return __jsx(\"text\", {\n          x: x,\n          y: y,\n          fill: \"FF0000\",\n          textAnchor: x > cx ? \"start\" : \"end\",\n          dominantBaseline: \"central\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        }, data[index].name, \" (\", value, \")\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    })));\n  }\n\n  function displayCandidates() {\n    var _this3 = this;\n\n    if (candidates == \"\") {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 20\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      }, \"no candidates yet\")));\n    }\n\n    return candidates.map(function (candidate, index) {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        key: index,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"content ui container\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"header clearing segment\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      }, candidate[0], \" \", VoteModal(candidate[0], cAddresses[index])), __jsx(\"div\", {\n        className: \"header clearing segment\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, leaveElection()), __jsx(\"div\", {\n        className: \"meta\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, cAddresses[index]), __jsx(\"div\", {\n        className: \"description\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, candidate[1])));\n    });\n  }\n\n  var voted;\n\n  if (hasVoted) {\n    voted = __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, __jsx(\"i\", {\n      className: \"floated check icon right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }), \" You have already Voted\");\n  } else {\n    voted = __jsx(React.Fragment, null);\n  }\n\n  function formatVote() {\n    if (currentVote) {\n      var startDate = new Date(currentVote.startDate * 1);\n      var endDate = new Date(currentVote.endDate * 1);\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"header container\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, currentVote.title, __jsx(\"span\", {\n        className: \"floated right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 29\n        }\n      }, voted)), __jsx(\"div\", {\n        className: \"meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }, startDate.toUTCString().slice(0, 17), \" to \", endDate.toUTCString().slice(0, 17)), __jsx(\"div\", {\n        className: \"ui card\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }\n      }, currentVote.description)))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '50px',\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"ui cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }\n      }, displayCandidates()), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }\n      }), __jsx(Loader, {\n        active: voting,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"extra content\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        className: \"check icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }), currentVote.numVotes, \" Votes\"), applyELection(), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }), displayPer(), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }), __jsx(\"h2\", {\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }\n      }, \"Results\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }), chart(), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      })));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 20\n        }\n      }, \" loading vote ...\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, formatVote()), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Vote, \"Dgdai6qGOA0Jq+CWx3QY01LkczY=\");\n\n_c = Vote;\nexport default Vote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"sources":["C:/Users/foubroker/Desktop/BAM/voting-at-mcgill-2/client/src/pages/elections/vote/vote.js"],"names":["React","useEffect","useState","Header","getWeb3","VoteContract","Link","Modal","Dimmer","Loader","Image","Segment","PieChart","Pie","Tooltip","BarChart","XAxis","YAxis","Legend","CartesianGrid","Bar","ResponsiveContainer","Vote","web3Instance","web3","setWeb3","voteAddress","setVoteAddress","currentVote","setCurrentVote","voteInstance","setVoteInstance","candidates","setCandidates","currentUser","setCurrentUser","voting","setVoting","hasVoted","setHasVoted","load","setLoad","cAddresses","setCAddresses","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","setupVote","eth","Contract","abi","instance","methods","currentElection","call","getAccounts","current","getVoted","getCandidatesAddresses","candidatesAddresses","candidatesCount","array","i","console","log","get_candidate","push","alert","error","long","width","texAlign","margin","color","VoteModal","name","address","voteFor","send","from","leaveElection","startDate","Date","currDate","leavethis","applyELection","data","displayPer","newrow","fewrow","map","candidate","value","parseInt","chart","cx","cy","midAngle","innerRadius","outerRadius","index","RADIAN","Math","PI","radius","x","cos","y","sin","displayCandidates","voted","formatVote","endDate","title","toUTCString","description","textAlign","numVotes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Header } from '../../../components/header'\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from '../../../../routes';\r\nimport { Modal, Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Tooltip,\r\n  BarChart,\r\n  XAxis,\r\n  YAxis,\r\n  Legend,\r\n  CartesianGrid,\r\n  Bar, ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst Vote = () => {\r\n\r\n    var web3Instance;\r\n    const [web3, setWeb3] = useState('');\r\n    const [voteAddress, setVoteAddress] = useState('')\r\n    const [currentVote, setCurrentVote] = useState('')\r\n    const [voteInstance, setVoteInstance] = useState('')\r\n    const [candidates, setCandidates ] = useState('');\r\n    const [currentUser, setCurrentUser ] = useState('');\r\n    const [voting, setVoting ] = useState(false)\r\n    const [hasVoted, setHasVoted] = useState(false)\r\n    const [load, setLoad] = useState(true)\r\n    const [cAddresses, setCAddresses] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('vote')+5;\r\n            setVoteAddress(url.slice(pos));\r\n          };\r\n        initWeb3();\r\n        getElectionAddress();\r\n    },[load]);\r\n\r\n    useEffect(() => {\r\n        async function setupVote() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    voteAddress\r\n                );\r\n                setVoteInstance(instance);\r\n                setCurrentVote(await instance.methods.currentElection().call());\r\n                var current\r\n                [current] = await web3.eth.getAccounts()\r\n                setCurrentUser(current)\r\n                setHasVoted(await instance.methods.getVoted(current).call())\r\n\r\n                const candidatesAddresses = await instance.methods.getCandidatesAddresses().call();\r\n                setCAddresses(candidatesAddresses);\r\n                const candidatesCount = await instance.methods.candidatesCount().call();\r\n                var array = []\r\n\r\n                for (var i = 0; i < candidatesCount; i++){\r\n                    console.log(candidatesAddresses[i]);\r\n                    array.push(await instance.methods.get_candidate(candidatesAddresses[i]).call());\r\n                }\r\n                setCandidates(array);\r\n                console.log(array)\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n            }\r\n        }\r\n        setupVote();\r\n    },[web3])\r\n\r\n    const long = {\r\n        width: '90%',\r\n        texAlign:'center',\r\n        margin: 'auto',\r\n        color: '#f00000',\r\n    }\r\n\r\n    function VoteModal(name,address) {\r\n        var voteFor = async () => {\r\n            if(voteInstance){\r\n                setVoting(true)\r\n                await voteInstance.methods.voteFor(address).send({\r\n                    from: currentUser\r\n                })\r\n                setVoting(false)\r\n                setLoad(!load)\r\n            }\r\n        }\r\n        if(!hasVoted){\r\n            return (\r\n                <Modal\r\n                    trigger={<button className=\"ui right floated inverted red button\">Vote</button>}\r\n                    header=\"Vote!\"\r\n                    content={\"are you sure you want to vote for \"+ name+\" ?\"}\r\n                    actions={[\r\n                    <button key={1} className=\"ui inverted green button\" onClick={voteFor}>yes</button>,\r\n                    <button key={2} className=\"ui inverted red button\" >no</button>]}\r\n                />\r\n            )\r\n        }\r\n        else return (<></>)\r\n    }\r\n    function  leaveElection(){\r\n          var startDate = new Date(currentVote.startDate * 1)\r\n          var currDate= new Date()\r\n          var leavethis = async () => {\r\n              if(voteInstance){\r\n                setVoting(true)\r\n                await voteInstance.methods.leaveElection().send({\r\n                    from: currentUser\r\n                })\r\n                setVoting(false)\r\n                setLoad(!load)\r\n              }\r\n          }\r\n          if(currDate<startDate){\r\n            return (\r\n              <Modal\r\n                  trigger={<button className=\"ui right floated inverted red button\">Leave Election</button>}\r\n                  header=\"Leave Election\"\r\n                  content={\"are you sure you want to no longer be a candidate\"}\r\n                  actions={[\r\n                  <button key={1} className=\"ui inverted green button\"onClick={leavethis}>yes</button>,\r\n                  <button key={2} className=\"ui inverted red button\" >no</button>]}\r\n              />\r\n            )\r\n          }\r\n    }\r\n    function applyELection(){\r\n      var startDate = new Date(currentVote.startDate * 1)\r\n      var currDate= new Date()\r\n    //   if(currDate<startDate){\r\n        return(\r\n          <Link route ={`/elections/apply/${voteAddress}`}>\r\n              <button className=\"extra content ui inverted red button\" >\r\n                  <div><i className=\"plus icon\"></i> Apply as Candidate</div>\r\n              </button>\r\n          </Link>\r\n        )\r\n    //   }\r\n    }\r\n    const data=[];\r\n    /*\r\n    <div className=\"content ui container\">\r\n        <div className=\"header clearing segment\">\r\n\r\n          {candidate.name} {VoteModal(candidate.name, candidate.candidateAddr)}:        {candidate.numVotes/currentVote.numVotes*100}%\r\n\r\n        </div>\r\n    </div>\r\n    */\r\n    function displayPer() {\r\n          var newrow={};\r\n          var fewrow={};\r\n          if (candidates == \"\"){\r\n              return <div  className=\"card\" style={long}>\r\n                          <div className=\"content\">\r\n                              <div className=\"header\">\r\n                                  no candidates yet\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n\r\n          }\r\n\r\n          candidates.map((candidate) =>{data.push({ name: candidate[0], value:parseInt(candidate[2]) });}\r\n\r\n        )\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    function chart(){\r\n      return(\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart height={300}>\r\n              <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius={100}\r\n                fill=\"#FF0000\"\r\n                dataKey=\"value\"\r\n                label={({\r\n                  cx,\r\n                  cy,\r\n                  midAngle,\r\n                  innerRadius,\r\n                  outerRadius,\r\n                  value,\r\n                  index\r\n                }) => {\r\n                  console.log(\"handling label?\");\r\n                  const RADIAN = Math.PI / 180;\r\n                  // eslint-disable-next-line\r\n                  const radius = 25 + innerRadius + (outerRadius - innerRadius);\r\n                  // eslint-disable-next-line\r\n                  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                  // eslint-disable-next-line\r\n                  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n                  return (\r\n                    <text\r\n                      x={x}\r\n                      y={y}\r\n                      fill=\"FF0000\"\r\n                      textAnchor={x > cx ? \"start\" : \"end\"}\r\n                      dominantBaseline=\"central\"\r\n                    >\r\n                      {data[index].name} ({value})\r\n                    </text>\r\n                  );\r\n                }}\r\n              />\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    }\r\n    function displayCandidates() {\r\n        if (candidates == \"\"){\r\n            return <div  className=\"card\" style={long}>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                no candidates yet\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        }\r\n\r\n        return candidates.map((candidate,index) =>\r\n        <div className=\"card\"  style={long} key={index}>\r\n            <div className=\"content ui container\">\r\n                <div className=\"header clearing segment\">\r\n                    {candidate[0]} {VoteModal(candidate[0], cAddresses[index])}\r\n                </div>\r\n                <div className=\"header clearing segment\">\r\n                    {leaveElection()}\r\n                </div>\r\n                <div className=\"meta\">\r\n                    {cAddresses[index]}\r\n                </div>\r\n                <div className=\"description\">\r\n                    {candidate[1]}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n    var voted;\r\n    if(hasVoted) {\r\n        voted = <span><i className=\"floated check icon right\"></i> You have already Voted</span>;\r\n    } else {\r\n        voted = <></>\r\n    }\r\n\r\n    function formatVote() {\r\n        if (currentVote){\r\n            var startDate = new Date(currentVote.startDate * 1)\r\n            var endDate = new Date(currentVote.endDate * 1)\r\n            return <>\r\n                <div className=\"ui card\" style={long}>\r\n                    <div className=\"content\">\r\n                        <div className=\"header container\" style= {{color: '#f00000'}}>\r\n                            {currentVote.title}\r\n                            <span className=\"floated right\">{voted}</span>\r\n                        </div>\r\n                        <div className=\"meta\">{startDate.toUTCString().slice(0,17)} to {endDate.toUTCString().slice(0,17)}</div>\r\n                        <div className=\"ui card\" style= {{width: '100%'}}>\r\n                            <div className=\"description\" >\r\n                            <p>{currentVote.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{textAlign:'center', margin:'50px', color: '#f00000'}}>\r\n                    <div className =\"ui cards\">{displayCandidates()}</div>\r\n                    <br></br>\r\n                    <Loader\r\n                        active={voting}\r\n                        inline='centered'\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                </div>\r\n\r\n                    <div className=\"extra content\" style= {{color: '#f00000'}}>\r\n                        <i className=\"check icon\"></i>\r\n                        {currentVote.numVotes} Votes\r\n                    </div>\r\n                    {applyELection()}\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    {displayPer()}\r\n                    <br></br>\r\n                    <h2 style={long}>Results</h2>\r\n                    <br></br>\r\n                    {chart()}\r\n                    <br></br>\r\n                    <br></br>\r\n                </div>\r\n            </>\r\n        }\r\n        else{\r\n            return <div> loading vote ...</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1 >{formatVote()}</h1>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Vote;\r\n"]},"metadata":{},"sourceType":"module"}