{"ast":null,"code":"var _jsxFileName = \"/home/wen_wong/voting-at-mcgill/client/src/pages/joinGroup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Form, Loader } from \"semantic-ui-react\";\nimport { Header } from '../components/header';\nimport { Link } from '../../routes';\nimport 'semantic-ui-css/semantic.min.css';\n\nrequire(\"regenerator-runtime/runtime\");\n\nconst styles = {\n  card: {\n    width: '90%',\n    margin: 'auto',\n    color: '#f00000',\n    maxHeight: 200,\n    minHeight: 200,\n    cursor: \"pointer\"\n  },\n  title: {\n    fontSize: 36,\n    color: '#ED1B2F',\n    marginLeft: 10,\n    marginTop: 15,\n    marginBottom: 15\n  },\n  access: {\n    position: \"relative\",\n    height: 36,\n    fontSize: 16\n  }\n};\n\nconst JoinGroup = () => {\n  const {\n    0: web3,\n    1: setWeb3\n  } = useState('');\n  const {\n    0: groupsID,\n    1: setGroupsID\n  } = useState('');\n  const {\n    0: contract,\n    1: setContract\n  } = useState('');\n  const {\n    0: renderedGroups,\n    1: renderGroups\n  } = useState([]);\n  const {\n    0: joiningGroup,\n    1: setJoiningGroup\n  } = useState(false);\n  var user;\n  useEffect(() => {\n    // get web3\n    async function initWeb3() {\n      console.log('initializing web3');\n      const web3Instance = await getWeb3();\n      setWeb3(web3Instance);\n    }\n\n    initWeb3();\n  }, []);\n  useEffect(() => {\n    // get Factory contract\n    async function setup() {\n      if (web3 == \"\") {\n        console.log('unable to get factory');\n        return;\n      }\n\n      try {\n        [user] = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\n        const instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n        setContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setup(); // console.log('ok')\n  }, [web3]);\n  useEffect(() => {\n    //display available votes addresses\n    var displayVotes = async () => {\n      if (contract == '') {\n        return;\n      }\n\n      const response = await contract.methods.getExistingGroups().call(); // Update state with the result.\n\n      const temp = [];\n\n      for (var i = 0; i < response.length; i++) {\n        temp[i] = parseInt(response[i]);\n      }\n\n      console.log(temp);\n      setGroupsID(temp);\n    };\n\n    displayVotes();\n  }, [contract]);\n\n  var displayInfo = async identification => {\n    if (groupsID == '') {\n      return;\n    }\n\n    try {\n      return await contract.methods.getGroup(identification).call();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    //render votes\n    var renderVotes = async () => {\n      if (!groupsID) {\n        return;\n      }\n\n      var temp = [];\n      await groupsID.forEach(identification => {\n        displayInfo(identification).then(newGroup => {\n          temp.push(newGroup);\n        });\n      });\n      setTimeout(function () {\n        renderGroups(temp);\n      }, 100);\n    };\n\n    renderVotes();\n  }, [groupsID]);\n  useEffect(() => {\n    if (renderedGroups) {\n      console.log(renderedGroups);\n    }\n  }, [renderedGroups]);\n\n  var onSubmit = async event => {\n    event.preventDefault(); // Calls VoteFactory Contract to create a new instance of Group\n\n    var joinGroup = async () => {\n      setJoiningGroup(true);\n\n      if (contract == '') {\n        return;\n      } // Calls the method createGroup from VoteFactory.sol\n\n\n      await factoryContract.methods.joinGroup(groupID).send({\n        from: user\n      });\n      setJoiningGroup(false);\n      setLoad(!Load);\n    };\n  }; //route ={`/elections/vote/${votesAddresses[index]}`} key={index}>\n\n\n  return renderedGroups ? renderedGroups.map((group, index) => __jsx(\"div\", {\n    className: \"ui card\",\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"right floated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, group[2], __jsx(\"i\", {\n    className: \"user icon\",\n    style: {\n      margin: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), __jsx(\"i\", {\n    className: \"circle outline icon\",\n    style: {\n      margin: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"header\",\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, group[0])), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"right floated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Join Group\"), __jsx(\"i\", {\n    className: \"angle right icon huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"ui sub header\",\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"checkmark icon small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), \"group\"), __jsx(\"div\", {\n    className: \"ui feed\",\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, group[1]))))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, \" no groups found \");\n};\n\nexport default JoinGroup;","map":{"version":3,"sources":["/home/wen_wong/voting-at-mcgill/client/src/pages/joinGroup.js"],"names":["React","useState","useEffect","makeStyles","VoteFactoryContract","getWeb3","Form","Loader","Header","Link","require","styles","card","width","margin","color","maxHeight","minHeight","cursor","title","fontSize","marginLeft","marginTop","marginBottom","access","position","height","JoinGroup","web3","setWeb3","groupsID","setGroupsID","contract","setContract","renderedGroups","renderGroups","joiningGroup","setJoiningGroup","user","initWeb3","console","log","web3Instance","setup","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","error","alert","displayVotes","response","methods","getExistingGroups","call","temp","i","length","parseInt","displayInfo","identification","getGroup","renderVotes","forEach","then","newGroup","push","setTimeout","onSubmit","event","preventDefault","joinGroup","factoryContract","groupID","send","from","setLoad","Load","map","group","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport getWeb3 from \"../getWeb3\";\nimport { Form, Loader  } from \"semantic-ui-react\";\nimport { Header } from '../components/header';\nimport { Link } from '../../routes'\nimport 'semantic-ui-css/semantic.min.css';\n\nrequire(\"regenerator-runtime/runtime\");\n\nconst styles = {\n  card: {\n    width: '90%',\n    margin: 'auto',\n    color: '#f00000',\n    maxHeight: 200,\n    minHeight: 200,\n    cursor: \"pointer\",\n  },\n  title : {\n    fontSize: 36,\n    color: '#ED1B2F',\n    marginLeft: 10,\n    marginTop: 15,\n    marginBottom:15\n  },\n  access:{\n    position:\"relative\",\n    height:36,\n    fontSize: 16,\n  }\n};\n\nconst JoinGroup = () => {\n  const [web3, setWeb3] = useState('');\n  const [groupsID, setGroupsID] = useState('');\n  const [contract, setContract] = useState('');\n  const [renderedGroups, renderGroups] = useState([]);\n  const [joiningGroup, setJoiningGroup] = useState(false);\n\n  var user;\n\n  useEffect(() => {// get web3\n    async function initWeb3() {\n      console.log('initializing web3');\n      const web3Instance = await getWeb3();\n      setWeb3(web3Instance)\n    }\n    initWeb3();\n  },[]);\n\n  useEffect(() => {// get Factory contract\n    async function setup() {\n      if(web3 == \"\") {\n        console.log('unable to get factory')\n        return;\n      }\n      try {\n        [user] = await web3.eth.getAccounts();\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VoteFactoryContract.networks[networkId];\n        const instance = new web3.eth.Contract(\n          VoteFactoryContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n        setContract(instance);\n    \n        // Set web3, accounts, and contract to the state, and then proceed with an\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n      setup();\n      // console.log('ok')\n  },[web3]);\n\n  useEffect(()=> {//display available votes addresses\n    var displayVotes = async () => {\n      if(contract == '') {\n        return;\n      }\n      const response = await contract.methods.getExistingGroups().call();\n      // Update state with the result.\n      const temp = [];\n      for (var i = 0; i < response.length; i++) {\n        temp[i] = parseInt(response[i]);\n      }\n      console.log(temp);\n      setGroupsID(temp);\n    };\n    displayVotes();\n  },[contract]);\n  \n\n  var displayInfo = async (identification) => { \n    if(groupsID == '') {\n      return;\n    }\n    try {\n      return await contract.methods.getGroup(identification).call();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(()=> {//render votes\n    var renderVotes = async () => {\n        if (!groupsID) {\n          return;\n        }\n        var temp = [];\n        await groupsID.forEach(identification => {\n            displayInfo(identification).then(newGroup => {\n              temp.push(newGroup);\n          });\n        });\n        setTimeout(function(){\n          renderGroups(temp);\n        }, 100);\n      }\n    renderVotes();\n  },[groupsID]);\n\n  useEffect(()=> {\n    if(renderedGroups) {\n      console.log(renderedGroups);\n    }\n  },[renderedGroups]);\n\n  var onSubmit = async (event) => {\n    event.preventDefault();\n    \n    // Calls VoteFactory Contract to create a new instance of Group\n    var joinGroup = async () => {\n        setJoiningGroup(true);\n        if(contract == ''){\n            return;\n        }\n        // Calls the method createGroup from VoteFactory.sol\n        await factoryContract.methods.joinGroup(groupID).send({\n            from: user\n        });\n        setJoiningGroup(false);\n        setLoad(!Load);\n    }; \n  };\n    \n    //route ={`/elections/vote/${votesAddresses[index]}`} key={index}>\n    return renderedGroups ? renderedGroups.map((group, index) =>\n    <div className=\"ui card\" style={styles.card}>\n      <div className=\"card\">\n        <span className=\"right floated\">\n          {group[2]}\n          <i className=\"user icon\" style={{margin: 3}}></i>\n          <i className=\"circle outline icon\" style={{margin: 3}}></i>\n        </span>\n\n        <div className=\"content\">\n          <div className=\"header\" style={styles.title}>\n              {group[0]}\n          </div>\n        </div>\n        <div className=\"content\">\n\n          <span className=\"right floated\">\n            <Form.Button type=\"submit\" onSubmit={onSubmit}>Join Group</Form.Button>\n            <i className=\"angle right icon huge\"></i>\n          </span>\n\n          <div className=\"ui sub header\" style={{marginLeft:10}}>\n            <i className=\"checkmark icon small\"></i>  \n            group \n          </div>\n          <div className=\"ui feed\" style={{marginLeft:10}}>{ group[1] }</div>\n        </div>\n      </div>\n    </div>\n) : <div> no groups found </div>\n};\n\nexport default JoinGroup;"]},"metadata":{},"sourceType":"module"}