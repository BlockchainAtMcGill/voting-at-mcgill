{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\Desktop\\\\BAM\\\\voting-at-mcgill-2\\\\client\\\\src\\\\pages\\\\elections\\\\apply\\\\apply.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../../../components/header';\nimport VoteFactoryContract from \"../../../contracts/VoteFactory.json\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport { Form } from \"semantic-ui-react\";\nimport getWeb3 from \"../../../getWeb3\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Router from 'next/router';\nvar candFields = {\n  margin: \"auto 5% auto 5%\"\n};\nvar candTitle = {\n  color: \"red\",\n  marginBottom: \"5%\",\n  fontSize: \"3em\",\n  textAlign: \"center\"\n};\n\nvar Apply = function Apply() {\n  _s();\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var web3Instance;\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []); //please follow the course for a better implementation @Jing\n\n  var _useState2 = useState(''),\n      candidateName = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(0),\n      currentDate = _useState3[0],\n      setCurrentDate = _useState3[1];\n\n  var _useState4 = useState(''),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n      var manager, factoryContract, voteContract, addressOfVote, setupVoteFactory, getElectionAddress, initializeElection, setCandidate, displayCand, votePage;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              event.preventDefault();\n\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context2.next = 2;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\");\n\n                        case 2:\n                          _context2.prev = 2;\n                          _context2.next = 5;\n                          return web3.eth.getAccounts();\n\n                        case 5:\n                          _yield$web3$eth$getAc = _context2.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          manager = _yield$web3$eth$getAc2[0];\n                          _context2.next = 10;\n                          return web3.eth.net.getId();\n\n                        case 10:\n                          networkId = _context2.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context2.next = 20;\n                          break;\n\n                        case 16:\n                          _context2.prev = 16;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context2.t0);\n\n                        case 20:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 16]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              getElectionAddress = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var url, pos;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          url = window.location.href;\n                          pos = url.indexOf('y') + 2;\n                          addressOfVote = url.slice(pos);\n                          console.log(addressOfVote);\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function getElectionAddress() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              initializeElection = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var instance;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.prev = 0;\n                          _context4.next = 3;\n                          return new web3.eth.Contract(VoteContract.abi, addressOfVote);\n\n                        case 3:\n                          instance = _context4.sent;\n                          voteContract = instance;\n                          _context4.next = 11;\n                          break;\n\n                        case 7:\n                          _context4.prev = 7;\n                          _context4.t0 = _context4[\"catch\"](0);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context4.t0);\n\n                        case 11:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4, null, [[0, 7]]);\n                }));\n\n                return function initializeElection() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setCandidate = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return voteContract.methods.enterElection(candidateName, description, new Date(currentDate).getTime()).send({\n                            from: manager\n                          });\n\n                        case 2:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function setCandidate() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              displayCand = /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return voteContract.methods.get_candidates(manager).call();\n\n                        case 2:\n                          summary = _context6.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function displayCand() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              _context7.next = 8;\n              return setupVoteFactory();\n\n            case 8:\n              _context7.next = 10;\n              return getElectionAddress();\n\n            case 10:\n              _context7.next = 12;\n              return initializeElection();\n\n            case 12:\n              _context7.next = 14;\n              return setCandidate();\n\n            case 14:\n              _context7.next = 16;\n              return displayCand();\n\n            case 16:\n              votePage = \"/elections/vote/\" + addressOfVote;\n              Router.push(votePage);\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    style: candTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Run for Election\"), __jsx(\"h3\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \" \"), __jsx(Form, {\n    onSubmit: onSubmit,\n    style: candFields,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    required: true,\n    label: \"Enter Name\",\n    value: candidateName,\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Input, {\n    label: \"Current date\",\n    type: \"date\",\n    value: currentDate,\n    onChange: function onChange(event) {\n      return setCurrentDate(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, __jsx(Form.TextArea, {\n    required: true,\n    label: \"Description\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Form.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Run for Election\"))));\n};\n/*Apply.getInitialProps = async (props) => {\r\n    console.log(props.query.address)\r\n    return {VoteContract: props.query.address}\r\n  };\r\n*/\n\n\n_s(Apply, \"ecTjlvFfVOQJWcISIHCddbwJXZg=\");\n\n_c = Apply;\nexport default Apply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apply\");","map":{"version":3,"sources":["C:/Users/foubroker/Desktop/BAM/voting-at-mcgill-2/client/src/pages/elections/apply/apply.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","Form","getWeb3","Router","candFields","margin","candTitle","color","marginBottom","fontSize","textAlign","Apply","web3","setWeb3","web3Instance","initWeb3","candidateName","setName","currentDate","setCurrentDate","description","setDescription","onSubmit","event","preventDefault","setupVoteFactory","eth","getAccounts","manager","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","alert","console","error","getElectionAddress","url","window","location","href","pos","indexOf","addressOfVote","slice","log","initializeElection","voteContract","setCandidate","methods","enterElection","Date","getTime","send","from","displayCand","get_candidates","call","summary","votePage","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../../../components/header';\r\nimport VoteFactoryContract from \"../../../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Router from 'next/router';\r\n\r\nconst candFields = {\r\n    margin: \"auto 5% auto 5%\"\r\n};\r\nconst candTitle = {\r\n    color: \"red\",\r\n    marginBottom: \"5%\",\r\n    fontSize: \"3em\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst Apply = () => {\r\n\r\n    const [web3, setWeb3] = useState('');\r\n    var web3Instance;\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        initWeb3();\r\n    },[]);\r\n\r\n    //please follow the course for a better implementation @Jing\r\n    const [candidateName, setName] = useState('');\r\n    const [currentDate, setCurrentDate] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        var manager\r\n        var factoryContract\r\n        var voteContract;\r\n        var addressOfVote;\r\n\r\n        var setupVoteFactory = async () => { //initializes voteFactory\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                [manager] = (await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('y')+2;\r\n            addressOfVote= url.slice(pos);\r\n            console.log(addressOfVote);\r\n        };\r\n        var initializeElection = async () => {//initializes vote contract\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    addressOfVote,\r\n                );\r\n                voteContract = instance;\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        };\r\n        var setCandidate = async () => {\r\n            await voteContract.methods.enterElection(candidateName, description ,new Date(currentDate).getTime()).send({from: manager});\r\n        };\r\n        var displayCand = async () => { // testing purposes\r\n            const summary = await voteContract.methods.get_candidates(manager).call();\r\n            console.log(summary);\r\n        };\r\n        await setupVoteFactory();\r\n        await getElectionAddress();\r\n        await initializeElection();\r\n        await setCandidate();\r\n        await displayCand();\r\n        const votePage= \"/elections/vote/\"+ addressOfVote;\r\n        Router.push(votePage);\r\n    };\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1 style= {candTitle}>Run for Election</h1>\r\n            <h3 style={{color: \"red\"}}> </h3>\r\n            <Form onSubmit={onSubmit} style={candFields}>\r\n                <div>\r\n                    <Form.Input required label=\"Enter Name\"\r\n                                 value={candidateName}\r\n                                 onChange={event => setName(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Form.Input label=\"Current date\" type=\"date\"\r\n\r\n                                 value={currentDate}\r\n                                 onChange={event => setCurrentDate(event.target.value)}\r\n                    >\r\n\r\n                    </Form.Input>\r\n                </div>\r\n\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Form.TextArea required\r\n                                 label=\"Description\"\r\n\r\n                                 value={description}\r\n                                 onChange={event => setDescription(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <Form.Button>Cancel</Form.Button>\r\n                    <Form.Button type=\"submit\" onSubmit={onSubmit}>Run for Election</Form.Button>\r\n                </div>\r\n\r\n\r\n            </Form>\r\n\r\n        </>\r\n      )\r\n};\r\n/*Apply.getInitialProps = async (props) => {\r\n    console.log(props.query.address)\r\n    return {VoteContract: props.query.address}\r\n  };\r\n*/\r\nexport default Apply;\r\n"]},"metadata":{},"sourceType":"module"}