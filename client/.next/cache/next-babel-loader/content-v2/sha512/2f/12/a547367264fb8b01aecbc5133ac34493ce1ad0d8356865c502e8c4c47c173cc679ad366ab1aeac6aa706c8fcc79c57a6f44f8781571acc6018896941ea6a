{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\elections\\\\vote\\\\vote.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\n\nconst Vote = () => {\n  var web3Instance;\n  var voteAddress;\n  useEffect(() => {\n    async function initWeb3() {\n      web3Instance = await getWeb3();\n    }\n\n    var getElectionAddress = async () => {\n      const url = window.location.href;\n      const pos = url.indexOf('y') + 2;\n      voteAddress = url.slice(pos);\n      console.log(voteAddress);\n    };\n\n    initWeb3();\n    getElectionAddress();\n  }, []);\n  useEffect(() => {\n    async function setupVote() {\n      if (web3Instance == '') {\n        return;\n      }\n\n      try {\n        // Get the contract instance.\n        const instance = new web3.eth.Contract(VoteContract.abi, voteAddress);\n        console.log(await instance.methods.currentElection().call()); // Set web3, accounts, and contract to the state, and then proceed with an\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setupVote();\n  }, [web3Instance]);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Vote works!\"));\n};\n\nexport default Vote;","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/elections/vote/vote.js"],"names":["React","Header","getWeb3","VoteContract","Vote","web3Instance","voteAddress","useEffect","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","console","log","setupVote","instance","web3","eth","Contract","abi","methods","currentElection","call","error","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,MAAIC,YAAJ;AACA,MAAIC,WAAJ;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeC,QAAf,GAA0B;AACtBH,MAAAA,YAAY,GAAG,MAAMH,OAAO,EAA5B;AACH;;AACD,QAAIO,kBAAkB,GAAG,YAAU;AAC/B,YAAMC,GAAG,GAACC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;AACA,YAAMC,GAAG,GAACJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,IAAiB,CAA3B;AACAT,MAAAA,WAAW,GAAEI,GAAG,CAACM,KAAJ,CAAUF,GAAV,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACD,KALH;;AAMAE,IAAAA,QAAQ;AACRC,IAAAA,kBAAkB;AACrB,GAZQ,EAYP,EAZO,CAAT;AAcAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,SAAf,GAA2B;AACvB,UAAGd,YAAY,IAAI,EAAnB,EAAuB;AACnB;AACH;;AACD,UAAI;AACA;AACA,cAAMe,QAAQ,GAAG,IAAIC,IAAI,CAACC,GAAL,CAASC,QAAb,CACbpB,YAAY,CAACqB,GADA,EAEblB,WAFa,CAAjB;AAIAW,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAME,QAAQ,CAACK,OAAT,CAAiBC,eAAjB,GAAmCC,IAAnC,EAAnB,EANA,CAOA;AACH,OARD,CAQE,OAAOC,KAAP,EAAc;AAChB;AACAC,QAAAA,KAAK,CACA,wEADA,CAAL;AAGAZ,QAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACC;AACJ;;AACDT,IAAAA,SAAS;AACZ,GAtBQ,EAsBP,CAACd,YAAD,CAtBO,CAAT;AAwBA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CADJ;AASH,CAlDD;;AAmDA,eAAeD,IAAf","sourcesContent":["import React from 'react';\r\nimport { Header } from '../../../components/header'\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\n\r\nconst Vote = () => {\r\n    var web3Instance;\r\n    var voteAddress;\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n        }\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('y')+2;\r\n            voteAddress= url.slice(pos);\r\n            console.log(voteAddress);\r\n          };\r\n        initWeb3();\r\n        getElectionAddress();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        async function setupVote() {\r\n            if(web3Instance == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    voteAddress\r\n                );\r\n                console.log (await instance.methods.currentElection().call());\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n            }\r\n        }\r\n        setupVote();\r\n    },[web3Instance])\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>Vote works!</h1>\r\n        </>\r\n    )\r\n}\r\nexport default Vote;"]},"metadata":{},"sourceType":"module"}