{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\elections\\\\apply\\\\apply.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../../../components/header';\nimport VoteFactoryContract from \"../../../contracts/VoteFactory.json\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport * as m from \"@material-ui/core\";\nimport getWeb3 from \"../../../getWeb3\";\n\nvar Apply = function Apply() {\n  _s();\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var web3Instance;\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []); //please follow the course for a better implementation @Jing\n\n  var _useState2 = useState(''),\n      candidateName = _useState2[0],\n      setName = _useState2[1];\n\n  var changeName = function changeName(event) {\n    setName(event.target.value);\n  };\n\n  var _useState3 = useState(0),\n      currentDate = _useState3[0],\n      setCurrentDate = _useState3[1];\n\n  var changeCurrentDate = function changeCurrentDate(event) {\n    setCurrentDate(event.target.value);\n  };\n\n  var _useState4 = useState(''),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var changeDescription = function changeDescription(event) {\n    setDescription(event.target.value);\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(event) {\n      var candidateAddr, addressOfVote, manager, factoryContract, voteContract, getElectionAddress, setupVoteFactory, initializeElection, setCandidate;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              event.preventDefault();\n\n              getElectionAddress = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var url, pos;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          url = window.location.href;\n                          pos = url.indexOf('y') + 2;\n                          addressOfVote = url.slice(pos);\n                          console.log(addressOfVote);\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function getElectionAddress() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setupVoteFactory = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var _yield$web3$eth$getAc, _yield$web3$eth$getAc2, networkId, deployedNetwork, instance;\n\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!(web3 == '')) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\");\n\n                        case 2:\n                          _context3.prev = 2;\n                          _context3.next = 5;\n                          return web3.eth.getAccounts();\n\n                        case 5:\n                          _yield$web3$eth$getAc = _context3.sent;\n                          _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                          manager = _yield$web3$eth$getAc2[0];\n                          _context3.next = 10;\n                          return web3.eth.net.getId();\n\n                        case 10:\n                          networkId = _context3.sent;\n                          deployedNetwork = VoteFactoryContract.networks[networkId];\n                          instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                          factoryContract = instance; // Set web3, accounts, and contract to the state, and then proceed with an\n\n                          _context3.next = 20;\n                          break;\n\n                        case 16:\n                          _context3.prev = 16;\n                          _context3.t0 = _context3[\"catch\"](2);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context3.t0);\n\n                        case 20:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[2, 16]]);\n                }));\n\n                return function setupVoteFactory() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              initializeElection = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  var instance;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.prev = 0;\n                          _context4.next = 3;\n                          return new web3.eth.Contract(VoteContract.abi, addressOfVote);\n\n                        case 3:\n                          instance = _context4.sent;\n                          voteContract = instance;\n                          _context4.next = 11;\n                          break;\n\n                        case 7:\n                          _context4.prev = 7;\n                          _context4.t0 = _context4[\"catch\"](0);\n                          // Catch any errors for any of the above operations.\n                          alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                          console.error(_context4.t0);\n\n                        case 11:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4, null, [[0, 7]]);\n                }));\n\n                return function initializeElection() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setCandidate = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  var _yield$web3$eth$getAc3, _yield$web3$eth$getAc4;\n\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return web3.eth.getAccounts();\n\n                        case 2:\n                          _yield$web3$eth$getAc3 = _context5.sent;\n                          _yield$web3$eth$getAc4 = _slicedToArray(_yield$web3$eth$getAc3, 1);\n                          candidateAddr = _yield$web3$eth$getAc4[0];\n                          _context5.next = 7;\n                          return voteContract.methods.enterElection(candidateName, description, new Date(currentDate).getTime()).send({\n                            from: candidateAddr\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function setCandidate() {\n                  return _ref5.apply(this, arguments);\n                };\n              }();\n\n              _context6.next = 7;\n              return setupVoteFactory();\n\n            case 7:\n              _context6.next = 9;\n              return getElectionAddress();\n\n            case 9:\n              _context6.next = 11;\n              return initializeElection();\n\n            case 11:\n              _context6.next = 13;\n              return setCandidate();\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Run for Election\"), __jsx(\"h3\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \" \"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Name\",\n    variant: \"outlined\",\n    value: candidateName,\n    onChange: changeName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    label: \"Current date\",\n    type: \"date\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: currentDate,\n    onChange: changeCurrentDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    multiline: true,\n    fullWidth: true,\n    label: \"Description\",\n    rows: 4,\n    variant: \"outlined\",\n    value: description,\n    onChange: changeDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(m.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(m.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Run for Election\"))));\n};\n/*Apply.getInitialProps = async (props) => {\r\n    console.log(props.query.address)\r\n    return {VoteContract: props.query.address}\r\n  };\r\n*/\n\n\n_s(Apply, \"ecTjlvFfVOQJWcISIHCddbwJXZg=\");\n\n_c = Apply;\nexport default Apply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apply\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/elections/apply/apply.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","m","getWeb3","Apply","web3","setWeb3","web3Instance","initWeb3","candidateName","setName","changeName","event","target","value","currentDate","setCurrentDate","changeCurrentDate","description","setDescription","changeDescription","onSubmit","preventDefault","getElectionAddress","url","window","location","href","pos","indexOf","addressOfVote","slice","console","log","setupVoteFactory","eth","getAccounts","manager","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","factoryContract","alert","error","initializeElection","voteContract","setCandidate","candidateAddr","methods","enterElection","Date","getTime","send","from","color","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../../../components/header';\r\nimport VoteFactoryContract from \"../../../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport * as m from \"@material-ui/core\";\r\nimport getWeb3 from \"../../../getWeb3\";\r\n\r\nconst Apply = () => {\r\n\r\n    const [web3, setWeb3] = useState('');\r\n    var web3Instance;\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        initWeb3();\r\n    },[]);\r\n\r\n    //please follow the course for a better implementation @Jing\r\n    const [candidateName, setName] = useState('');\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n    const [currentDate, setCurrentDate] = useState(0);\r\n    const changeCurrentDate = (event) => {\r\n        setCurrentDate(event.target.value);\r\n    };\r\n\r\n    const [description, setDescription] = useState('');\r\n    const changeDescription = (event) => {\r\n        setDescription(event.target.value);\r\n    };\r\n\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var candidateAddr\r\n        var addressOfVote\r\n        var manager\r\n        var factoryContract\r\n        var voteContract;\r\n        var getElectionAddress = async() =>{\r\n          const url=window.location.href;\r\n          const pos=url.indexOf('y')+2;\r\n          addressOfVote= url.slice(pos);\r\n          console.log(addressOfVote);\r\n        };\r\n        var setupVoteFactory = async () => { //initializes voteFactory\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                [manager] = (await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                factoryContract = instance;\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        }\r\n        var initializeElection = async () => {//initializes vote contract\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    addressOfVote,\r\n                );\r\n                voteContract = instance;\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        }\r\n        var setCandidate = async () => {\r\n          [candidateAddr]= (await web3.eth.getAccounts());\r\n          await voteContract.methods\r\n          .enterElection(candidateName, description ,new Date(currentDate).getTime())\r\n          .send({\r\n            from: candidateAddr\r\n          })\r\n\r\n        };\r\n        await setupVoteFactory();\r\n        await getElectionAddress();\r\n        await initializeElection();\r\n        await setCandidate();\r\n    };\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>Run for Election</h1>\r\n            <h3 style={{color: \"red\"}}> </h3>\r\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\r\n                <div>\r\n                    <m.TextField required fullWidth label=\"Name\"\r\n                                 variant=\"outlined\"\r\n                                 value={candidateName}\r\n                                 onChange={changeName}\r\n                    >\r\n\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField label=\"Current date\" type=\"date\"\r\n                                 variant=\"outlined\"\r\n                                 InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                 value={currentDate}\r\n                                 onChange={changeCurrentDate}\r\n                    >\r\n\r\n                    </m.TextField>\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    {/*<m.TextField label=\"Select groups (someone help with the search and select multiple plz)\" variant=\"outlined\" /> */}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required multiline fullWidth\r\n                                 label=\"Description\"\r\n                                 rows={4}\r\n                                 variant=\"outlined\"\r\n                                 value={description}\r\n                                 onChange={changeDescription}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <m.Button>Cancel</m.Button>\r\n                    <m.Button type=\"submit\" onSubmit={onSubmit}>Run for Election</m.Button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n/*Apply.getInitialProps = async (props) => {\r\n    console.log(props.query.address)\r\n    return {VoteContract: props.query.address}\r\n  };\r\n*/\r\nexport default Apply;\r\n"]},"metadata":{},"sourceType":"module"}