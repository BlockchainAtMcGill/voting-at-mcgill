{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\elections\\\\vote\\\\vote.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Header } from '../../../components/header';\nimport getWeb3 from \"../../../getWeb3\";\nimport VoteContract from \"../../../contracts/Vote.json\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from '../../../../routes';\nimport { Modal, Dimmer, Loader, Image, Segment } from 'semantic-ui-react';\n\nvar Vote = function Vote() {\n  _s();\n\n  var web3Instance;\n\n  var _useState = useState(''),\n      web3 = _useState[0],\n      setWeb3 = _useState[1];\n\n  var _useState2 = useState(''),\n      voteAddress = _useState2[0],\n      setVoteAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      currentVote = _useState3[0],\n      setCurrentVote = _useState3[1];\n\n  var _useState4 = useState(''),\n      voteInstance = _useState4[0],\n      setVoteInstance = _useState4[1];\n\n  var _useState5 = useState(''),\n      candidates = _useState5[0],\n      setCandidates = _useState5[1];\n\n  var _useState6 = useState(''),\n      currentUser = _useState6[0],\n      setCurrentUser = _useState6[1];\n\n  var _useState7 = useState(false),\n      voting = _useState7[0],\n      setVoting = _useState7[1];\n\n  var _useState8 = useState(false),\n      hasVoted = _useState8[0],\n      setHasVoted = _useState8[1];\n\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context2.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    var getElectionAddress = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, pos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = window.location.href;\n                pos = url.indexOf('vote') + 5;\n                setVoteAddress(url.slice(pos));\n                console.log(voteAddress);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getElectionAddress() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    initWeb3();\n    getElectionAddress();\n  }, []);\n  useEffect(function () {\n    function setupVote() {\n      return _setupVote.apply(this, arguments);\n    }\n\n    function _setupVote() {\n      _setupVote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance, current, _yield$web3$eth$getAc, _yield$web3$eth$getAc2, candidatesCount, array, i;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return new web3.eth.Contract(VoteContract.abi, voteAddress);\n\n              case 5:\n                instance = _context3.sent;\n                setVoteInstance(instance);\n                _context3.t0 = setCurrentVote;\n                _context3.next = 10;\n                return instance.methods.currentElection().call();\n\n              case 10:\n                _context3.t1 = _context3.sent;\n                (0, _context3.t0)(_context3.t1);\n                _context3.next = 14;\n                return web3.eth.getAccounts();\n\n              case 14:\n                _yield$web3$eth$getAc = _context3.sent;\n                _yield$web3$eth$getAc2 = _slicedToArray(_yield$web3$eth$getAc, 1);\n                current = _yield$web3$eth$getAc2[0];\n                setCurrentUser(current);\n                _context3.t2 = console;\n                _context3.next = 21;\n                return instance.methods.getElectionVoter(current).call();\n\n              case 21:\n                _context3.t3 = _context3.sent;\n\n                _context3.t2.log.call(_context3.t2, _context3.t3);\n\n                _context3.next = 25;\n                return instance.methods.candidatesCount().call();\n\n              case 25:\n                candidatesCount = _context3.sent;\n                array = [];\n                i = 0;\n\n              case 28:\n                if (!(i < candidatesCount)) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _context3.t4 = array;\n                _context3.next = 32;\n                return instance.methods.candidateArray(i).call();\n\n              case 32:\n                _context3.t5 = _context3.sent;\n\n                _context3.t4.push.call(_context3.t4, _context3.t5);\n\n              case 34:\n                i++;\n                _context3.next = 28;\n                break;\n\n              case 37:\n                setCandidates(array); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context3.next = 44;\n                break;\n\n              case 40:\n                _context3.prev = 40;\n                _context3.t6 = _context3[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context3.t6);\n\n              case 44:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 40]]);\n      }));\n      return _setupVote.apply(this, arguments);\n    }\n\n    setupVote();\n  }, [web3]);\n  var long = {\n    width: '90%',\n    texAlign: 'center',\n    margin: 'auto',\n    color: '#f00000'\n  };\n\n  function VoteModal(name, address) {\n    var voteFor = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!voteInstance) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                setVoting(true);\n                _context4.next = 4;\n                return voteInstance.methods.voteFor(address).send({\n                  from: currentUser\n                });\n\n              case 4:\n                setVoting(false);\n                location.reload();\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function voteFor() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!hasVoted) {\n      return __jsx(Modal, {\n        trigger: __jsx(\"button\", {\n          className: \"ui right floated inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 30\n          }\n        }, \"Vote\"),\n        header: \"Vote!\",\n        content: \"are you sure you want to vote for \" + name + \" ?\",\n        actions: [__jsx(\"button\", {\n          key: 1,\n          className: \"ui inverted green button\",\n          onClick: voteFor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, \"yes\"), __jsx(\"button\", {\n          key: 2,\n          className: \"ui inverted red button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }, \"no\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      });\n    } else return __jsx(React.Fragment, null);\n  }\n\n  function displayCandidates() {\n    var _this2 = this;\n\n    if (candidates == \"\") {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, \"no candidates yet\")));\n    }\n\n    return candidates.map(function (candidate, index) {\n      return __jsx(\"div\", {\n        className: \"card\",\n        style: long,\n        key: index,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"content ui container\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"header clearing segment\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, candidate.name, \" \", VoteModal(candidate.name, candidate.candidateAddr)), __jsx(\"div\", {\n        className: \"meta\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, candidate.candidateAddr), __jsx(\"div\", {\n        className: \"description\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, candidate.description)));\n    });\n  }\n\n  var voted;\n\n  if (hasVoted) {\n    voted = __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, __jsx(\"i\", {\n      className: \"check icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 22\n      }\n    }), \" You have already Voted\");\n  } else {\n    voted = __jsx(React.Fragment, null);\n  }\n\n  function formatVote() {\n    if (currentVote) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"ui card\",\n        style: long,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, currentVote.title, voted), __jsx(\"div\", {\n        className: \"meta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, Date(currentVote.startDate).slice(0, -42), \" to \", Date(currentVote.endDate).slice(0, -42)), __jsx(\"div\", {\n        className: \"ui card\",\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }, currentVote.description)))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '50px',\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"ui cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, displayCandidates()), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }), __jsx(Loader, {\n        active: voting,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"extra content\",\n        style: {\n          color: '#f00000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, __jsx(\"i\", {\n        className: \"check icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }), currentVote.numVotes, \" Votes\"), __jsx(Link, {\n        route: \"/elections/apply/\".concat(voteAddress),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        className: \"extra content ui inverted red button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      }, __jsx(\"i\", {\n        className: \"plus icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 34\n        }\n      }), \" Apply as Candidate\")))));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 20\n        }\n      }, \" loading vote ...\");\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, formatVote()));\n};\n\n_s(Vote, \"o+Lp4P7N3dd5GvtD28+vFOXGbRY=\");\n\n_c = Vote;\nexport default Vote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/elections/vote/vote.js"],"names":["React","useEffect","useState","Header","getWeb3","VoteContract","Link","Modal","Dimmer","Loader","Image","Segment","Vote","web3Instance","web3","setWeb3","voteAddress","setVoteAddress","currentVote","setCurrentVote","voteInstance","setVoteInstance","candidates","setCandidates","currentUser","setCurrentUser","voting","setVoting","hasVoted","setHasVoted","initWeb3","getElectionAddress","url","window","location","href","pos","indexOf","slice","console","log","setupVote","eth","Contract","abi","instance","methods","currentElection","call","getAccounts","current","getElectionVoter","candidatesCount","array","i","candidateArray","push","alert","error","long","width","texAlign","margin","color","VoteModal","name","address","voteFor","send","from","reload","displayCandidates","map","candidate","index","candidateAddr","description","voted","formatVote","title","Date","startDate","endDate","textAlign","numVotes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Header } from '../../../components/header'\r\nimport getWeb3 from \"../../../getWeb3\";\r\nimport VoteContract from \"../../../contracts/Vote.json\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from '../../../../routes';\r\nimport { Modal, Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\nconst Vote = () => {\r\n    var web3Instance;\r\n    const [web3, setWeb3] = useState('');\r\n    const [voteAddress, setVoteAddress] = useState('')\r\n    const [currentVote, setCurrentVote] = useState('')\r\n    const [voteInstance, setVoteInstance] = useState('')\r\n    const [candidates, setCandidates ] = useState('');\r\n    const [currentUser, setCurrentUser ] = useState('');\r\n    const [voting, setVoting ] = useState(false)\r\n    const [hasVoted, setHasVoted] = useState(false)\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        var getElectionAddress = async() =>{\r\n            const url=window.location.href;\r\n            const pos=url.indexOf('vote')+5;\r\n            setVoteAddress(url.slice(pos));\r\n            console.log(voteAddress);\r\n          };\r\n        initWeb3();\r\n        getElectionAddress();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        async function setupVote() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = await new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    voteAddress\r\n                );\r\n                setVoteInstance(instance);\r\n                setCurrentVote(await instance.methods.currentElection().call());\r\n                var current\r\n                [current] = await web3.eth.getAccounts()\r\n                setCurrentUser(current)\r\n                console.log(await instance.methods.getElectionVoter(current).call())\r\n                // setHasVoted(await instance.methods.getElectionVoter(current).call())\r\n                const candidatesCount = await instance.methods.candidatesCount().call();\r\n                var array = []\r\n                for (var i = 0; i < candidatesCount; i++){\r\n                    array.push(await instance.methods.candidateArray(i).call())\r\n                }\r\n                setCandidates(array);\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n            }\r\n        }\r\n        setupVote();\r\n    },[web3])\r\n\r\n    const long = {\r\n        width: '90%',\r\n        texAlign:'center',\r\n        margin: 'auto',\r\n        color: '#f00000',\r\n    }\r\n\r\n    function VoteModal(name,address) {\r\n        var voteFor = async () => {\r\n            if(voteInstance){\r\n                setVoting(true)\r\n                await voteInstance.methods.voteFor(address).send({\r\n                    from: currentUser\r\n                })\r\n                setVoting(false)\r\n                location.reload()\r\n            }\r\n        }\r\n        if(!hasVoted){\r\n            return (\r\n                <Modal\r\n                    trigger={<button className=\"ui right floated inverted red button\">Vote</button>}\r\n                    header=\"Vote!\"\r\n                    content={\"are you sure you want to vote for \"+ name+\" ?\"}\r\n                    actions={[\r\n                    <button key={1} className=\"ui inverted green button\" onClick={voteFor}>yes</button>, \r\n                    <button key={2} className=\"ui inverted red button\" >no</button>]}\r\n                />\r\n            )\r\n        }\r\n        else return (<></>)\r\n    }\r\n\r\n    function displayCandidates() {\r\n        if (candidates == \"\"){\r\n            return <div  className=\"card\" style={long}>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                no candidates yet \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        }\r\n\r\n        return candidates.map((candidate,index) =>\r\n        <div className=\"card\"  style={long} key={index}>\r\n            <div className=\"content ui container\">\r\n                <div className=\"header clearing segment\">\r\n                    {candidate.name} {VoteModal(candidate.name, candidate.candidateAddr)}\r\n                </div>\r\n                <div className=\"meta\">\r\n                    {candidate.candidateAddr}\r\n                </div>\r\n                <div className=\"description\">\r\n                    {candidate.description}\r\n                </div>\r\n                    \r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n    var voted;\r\n    if(hasVoted) {\r\n        voted = <div><i className=\"check icon\"></i> You have already Voted</div>;\r\n    } else {\r\n        voted = <></>\r\n    }\r\n\r\n    function formatVote() {\r\n        if (currentVote){\r\n            return <>\r\n                <div className=\"ui card\" style={long}>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\" style= {{color: '#f00000'}}>\r\n                            {currentVote.title}\r\n                            {voted}\r\n                        </div>\r\n                        <div className=\"meta\">{Date(currentVote.startDate).slice(0,-42)} to {Date(currentVote.endDate).slice(0,-42) }</div>\r\n                        <div className=\"ui card\" style= {{width: '100%'}}>\r\n                            <div className=\"description\" >\r\n                            <p>{currentVote.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{textAlign:'center', margin:'50px', color: '#f00000'}}>\r\n                    <div className =\"ui cards\">{displayCandidates()}</div>\r\n                    <br></br>\r\n                    <Loader \r\n                        active={voting} \r\n                        inline='centered'   \r\n                    />\r\n                    </div>\r\n                    <div>            \r\n                </div>\r\n\r\n                    <div className=\"extra content\" style= {{color: '#f00000'}}>\r\n                        <i className=\"check icon\"></i>\r\n                        {currentVote.numVotes} Votes\r\n                    </div>\r\n                    <Link route ={`/elections/apply/${voteAddress}`}>\r\n                        <button className=\"extra content ui inverted red button\" >\r\n                            <div><i className=\"plus icon\"></i> Apply as Candidate</div>\r\n                        </button>\r\n                    </Link>\r\n                    \r\n                </div>\r\n            </>\r\n        }\r\n        else{\r\n            return <div> loading vote ...</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>{formatVote()}</h1>\r\n        </>\r\n    )\r\n}\r\nexport default Vote;"]},"metadata":{},"sourceType":"module"}