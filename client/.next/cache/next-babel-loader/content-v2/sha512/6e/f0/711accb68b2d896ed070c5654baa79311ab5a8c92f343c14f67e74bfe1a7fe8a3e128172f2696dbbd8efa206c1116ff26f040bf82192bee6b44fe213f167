{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\foubroker\\\\PROJECT_VOTE\\\\voting-at-mcgill\\\\client\\\\src\\\\pages\\\\newElection.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/header';\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\nimport VoteContract from \"../contracts/Vote.json\";\nimport * as m from \"@material-ui/core\";\nimport getWeb3 from \"../getWeb3\";\n\nvar NewElection = function NewElection() {\n  _s();\n\n  var _useState = useState(''),\n      votesAddresses = _useState[0],\n      setVotesAddresses = _useState[1];\n\n  var _useState2 = useState(''),\n      web3 = _useState2[0],\n      setWeb3 = _useState2[1];\n\n  var _useState3 = useState(''),\n      accounts = _useState3[0],\n      setAccounts = _useState3[1];\n\n  var _useState4 = useState(''),\n      contract = _useState4[0],\n      setContract = _useState4[1];\n\n  var _useState5 = useState(''),\n      voteContract = _useState5[0],\n      setVoteContract = _useState5[1];\n\n  var electionTypes = [{\n    value: 'majority',\n    label: 'simple majority'\n  }, {\n    value: 'twoThirds',\n    label: 'two thirds'\n  }]; // var onSubmit = async () => {\n  //\n  // };\n\n  var web3Instance;\n  useEffect(function () {\n    function initWeb3() {\n      return _initWeb.apply(this, arguments);\n    }\n\n    function _initWeb() {\n      _initWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getWeb3();\n\n              case 2:\n                web3Instance = _context.sent;\n                setWeb3(web3Instance);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _initWeb.apply(this, arguments);\n    }\n\n    initWeb3();\n  }, []);\n\n  var _useState6 = useState(''),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var changeTitle = function changeTitle(event) {\n    setTitle(event.target.value);\n  };\n\n  var _useState7 = useState(0),\n      startDate = _useState7[0],\n      setStartDate = _useState7[1];\n\n  var changeStartDate = function changeStartDate(event) {\n    setStartDate(event.target.value);\n  };\n\n  var _useState8 = useState(0),\n      endDate = _useState8[0],\n      setEndDate = _useState8[1];\n\n  var changeEndDate = function changeEndDate(event) {\n    setEndDate(event.target.value);\n  };\n\n  var _useState9 = useState('majority'),\n      electionType = _useState9[0],\n      setElectionType = _useState9[1];\n\n  var changeElectionType = function changeElectionType(event) {\n    setElectionType(event.target.value);\n  };\n\n  var _useState10 = useState(''),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var changeDescription = function changeDescription(event) {\n    setDescription(event.target.value);\n  };\n\n  useEffect(function () {\n    // get Factory contract\n    function setup() {\n      return _setup.apply(this, arguments);\n    }\n\n    function _setup() {\n      _setup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var networkId, deployedNetwork, instance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.prev = 2;\n                _context2.t0 = setAccounts;\n                _context2.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                _context2.t1 = _context2.sent;\n                (0, _context2.t0)(_context2.t1);\n                _context2.next = 10;\n                return web3.eth.net.getId();\n\n              case 10:\n                networkId = _context2.sent;\n                deployedNetwork = VoteFactoryContract.networks[networkId];\n                instance = new web3.eth.Contract(VoteFactoryContract.abi, deployedNetwork && deployedNetwork.address);\n                _context2.t2 = setAccounts;\n                _context2.next = 16;\n                return web3.eth.getAccounts();\n\n              case 16:\n                _context2.t3 = _context2.sent;\n                (0, _context2.t2)(_context2.t3);\n                setContract(instance); // Set web3, accounts, and contract to the state, and then proceed with an\n\n                _context2.next = 25;\n                break;\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t4 = _context2[\"catch\"](2);\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.error(_context2.t4);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 21]]);\n      }));\n      return _setup.apply(this, arguments);\n    }\n\n    setup();\n  }, [web3]);\n  useEffect(function () {\n    //just get Vote contract\n    function setup() {\n      return _setup2.apply(this, arguments);\n    }\n\n    function _setup2() {\n      _setup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var instance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(web3 == '')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                try {\n                  // Get the contract instance.\n                  instance = new web3.eth.Contract(VoteContract.abi, votesAddresses[0]);\n                  setVoteContract(instance); //console.log(voteContract);\n                  //console.log(instance);\n                  // Set web3, accounts, and contract to the state, and then proceed with an\n                } catch (error) {\n                  // Catch any errors for any of the above operations.\n                  alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                  console.error(error);\n                }\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _setup2.apply(this, arguments);\n    }\n\n    setup();\n  }, [contract, votesAddresses]);\n  useEffect(function () {\n    var createVote = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(contract == '')) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return contract.methods.createVote(0).send({\n                  from: accounts[0]\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function createVote() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var displayVotes = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(contract == '')) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                _context5.next = 4;\n                return contract.methods.getDeployedVotes().call();\n\n              case 4:\n                response = _context5.sent;\n                // Update state with the result.\n                //console.log(\"response is\" + response);\n                setVotesAddresses(response);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function displayVotes() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    createVote();\n    displayVotes();\n  }, [contract]);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n      var election, setUpElection, displayVote;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              event.preventDefault();\n              console.log(\"in onSubmit\"); //console.log(voteContract);\n\n              setUpElection = /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return voteContract.methods.editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, [0]);\n\n                        case 2:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function setUpElection() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              displayVote = /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                  var summary;\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return voteContract.methods.currentElection().call();\n\n                        case 2:\n                          summary = _context7.sent;\n                          console.log(summary);\n\n                        case 4:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function displayVote() {\n                  return _ref5.apply(this, arguments);\n                };\n              }(); //await createVote();\n\n\n              _context8.next = 6;\n              return setUpElection();\n\n            case 6:\n              _context8.next = 8;\n              return displayVote();\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"New Election\"), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Election title\",\n    variant: \"outlined\",\n    value: title,\n    onChange: changeTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    label: \"Start date\",\n    type: \"date\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: startDate,\n    onChange: changeStartDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    label: \"End date\",\n    type: \"date\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: endDate,\n    onChange: changeEndDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    select: true,\n    label: \"Type of election\",\n    variant: \"outlined\",\n    value: electionType,\n    onChange: changeElectionType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, electionTypes.map(function (option) {\n    return __jsx(m.MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, option.label);\n  }))), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, __jsx(m.TextField, {\n    required: true,\n    multiline: true,\n    fullWidth: true,\n    label: \"Description\",\n    rows: 4,\n    variant: \"outlined\",\n    value: description,\n    onChange: changeDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, __jsx(m.Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(m.Button, {\n    type: \"submit\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, \"Publish Election\"))));\n};\n\n_s(NewElection, \"ciYT1f7pHLmQkInNRdA9kQ3BCgc=\");\n\n_c = NewElection;\nexport default NewElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewElection\");","map":{"version":3,"sources":["C:/Users/foubroker/PROJECT_VOTE/voting-at-mcgill/client/src/pages/newElection.js"],"names":["React","useState","useEffect","Header","VoteFactoryContract","VoteContract","m","getWeb3","NewElection","votesAddresses","setVotesAddresses","web3","setWeb3","accounts","setAccounts","contract","setContract","voteContract","setVoteContract","electionTypes","value","label","web3Instance","initWeb3","title","setTitle","changeTitle","event","target","startDate","setStartDate","changeStartDate","endDate","setEndDate","changeEndDate","electionType","setElectionType","changeElectionType","description","setDescription","changeDescription","setup","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","alert","console","error","createVote","methods","send","from","displayVotes","getDeployedVotes","call","response","onSubmit","preventDefault","log","setUpElection","editElection","Date","getTime","displayVote","currentElection","summary","shrink","map","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Header } from '../components/header';\r\nimport VoteFactoryContract from \"../contracts/VoteFactory.json\";\r\nimport VoteContract from \"../contracts/Vote.json\";\r\nimport * as m from \"@material-ui/core\";\r\nimport getWeb3 from \"../getWeb3\";\r\n\r\n\r\n\r\nconst NewElection = () => {\r\n\r\n    const [votesAddresses, setVotesAddresses] = useState('');\r\n    const [web3, setWeb3] = useState('');\r\n    const [accounts, setAccounts] = useState('');\r\n    const [contract, setContract] = useState('');\r\n    const [voteContract, setVoteContract] = useState('');\r\n    const electionTypes = [\r\n        {\r\n            value: 'majority',\r\n            label: 'simple majority'\r\n        },\r\n        {\r\n            value: 'twoThirds',\r\n            label: 'two thirds'\r\n        }\r\n    ];\r\n\r\n\r\n    // var onSubmit = async () => {\r\n    //\r\n    // };\r\n\r\n    var web3Instance;\r\n    useEffect(() => {\r\n        async function initWeb3() {\r\n            web3Instance = await getWeb3();\r\n            setWeb3(web3Instance);\r\n        }\r\n        initWeb3();\r\n    },[]);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const changeTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    };\r\n\r\n    const [startDate, setStartDate] = useState(0);\r\n    const changeStartDate = (event) => {\r\n        setStartDate(event.target.value);\r\n    };\r\n    const [endDate, setEndDate] = useState(0);\r\n    const changeEndDate = (event) => {\r\n        setEndDate(event.target.value);\r\n    };\r\n    const [electionType, setElectionType] = useState('majority');\r\n    const changeElectionType = (event) => {\r\n        setElectionType(event.target.value);\r\n    };\r\n\r\n    const [description, setDescription] = useState('');\r\n    const changeDescription = (event) => {\r\n        setDescription(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {// get Factory contract\r\n        async function setup() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                setAccounts(await web3.eth.getAccounts());\r\n                // Get the contract instance.\r\n                const networkId = await web3.eth.net.getId();\r\n                const deployedNetwork = VoteFactoryContract.networks[networkId];\r\n                const instance = new web3.eth.Contract(\r\n                    VoteFactoryContract.abi,\r\n                    deployedNetwork && deployedNetwork.address,\r\n                );\r\n                setAccounts(await web3.eth.getAccounts());\r\n                setContract(instance);\r\n\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        }\r\n        setup();\r\n    },[web3]);\r\n\r\n    useEffect(() => {//just get Vote contract\r\n        async function setup() {\r\n            if(web3 == '') {\r\n                return;\r\n            }\r\n            try {\r\n                // Get the contract instance.\r\n                const instance = new web3.eth.Contract(\r\n                    VoteContract.abi,\r\n                    votesAddresses[0],\r\n                );\r\n                setVoteContract(instance);\r\n                //console.log(voteContract);\r\n                //console.log(instance);\r\n                // Set web3, accounts, and contract to the state, and then proceed with an\r\n            } catch (error) {\r\n                // Catch any errors for any of the above operations.\r\n                alert(\r\n                    `Failed to load web3, accounts, or contract. Check console for details.`,\r\n                );\r\n                console.error(error);\r\n            }\r\n        }\r\n        setup();\r\n    },[contract,votesAddresses]);\r\n\r\n    useEffect(() => {\r\n        var createVote = async () => {\r\n            if(contract == ''){\r\n                return;\r\n            }\r\n            // Get the value from the contract to prove it worked.\r\n            // uncomment to create votes, note that second await call wont run if first is run.\r\n            await contract.methods.createVote(0).send({\r\n                from: accounts[0]\r\n            });\r\n        };\r\n        var displayVotes = async () => {\r\n            if(contract == ''){\r\n                return;\r\n            }\r\n            const response = await contract.methods.getDeployedVotes().call();\r\n\r\n            // Update state with the result.\r\n            //console.log(\"response is\" + response);\r\n            setVotesAddresses(response);\r\n        };\r\n        createVote();\r\n        displayVotes();\r\n    },[contract]);\r\n\r\n\r\n    var onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(\"in onSubmit\");\r\n        //console.log(voteContract);\r\n\r\n        let election;\r\n        var setUpElection = async() => {\r\n            /*\r\n            if (voteContract == '') {\r\n                console.log(\"voteContract dne\");\r\n                return;\r\n            }\r\n            */\r\n\r\n            //await voteContract.methods.editElection(\"title\", 123, 234, \"hhh\", [1,2,3]);\r\n            await voteContract.methods.editElection(title, new Date(startDate).getTime(), new Date(endDate).getTime(), description, [0]);\r\n            //setVoteContract(voteContract);\r\n            //console.log(voteContract);\r\n\r\n        };\r\n\r\n            var displayVote = async () => {\r\n                const summary = await voteContract.methods.currentElection().call();\r\n                console.log(summary);\r\n            };\r\n\r\n            //await createVote();\r\n            await setUpElection();\r\n            await displayVote();\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1>New Election</h1>\r\n            {/*\r\n                <div>\r\n                    <div>\r\n                        Election Title:\r\n                        <m.TextField label=\"Election title\"/>\r\n                    </div>\r\n                    <div>Choose Dates:</div>\r\n                    <div>Choose type of election:</div>\r\n                    <div>Choose groups (optional):</div>\r\n                    <div>Add description:</div>\r\n                    <div>\r\n                        <div>Cancel</div>\r\n                        <div>Publish Election</div>\r\n                    </div>\r\n                </div>\r\n                */\r\n            }\r\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\r\n                <div>\r\n                    <m.TextField required fullWidth label=\"Election title\"\r\n                                 variant=\"outlined\"\r\n                                 value={title}\r\n                                 onChange={changeTitle}\r\n                    >\r\n\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField label=\"Start date\" type=\"date\"\r\n                                 variant=\"outlined\"\r\n                                 InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                 value={startDate}\r\n                                 onChange={changeStartDate}\r\n                    >\r\n\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required label=\"End date\" type=\"date\"\r\n                                 variant=\"outlined\"\r\n                                 InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                                 value={endDate}\r\n                                 onChange={changeEndDate}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required select label=\"Type of election\"\r\n                                 variant=\"outlined\"\r\n                                 value={electionType}\r\n                                 onChange={changeElectionType}>\r\n                        {electionTypes.map((option) => (\r\n                            <m.MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </m.MenuItem>\r\n                        ))}\r\n                    </m.TextField>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    {/*<m.TextField label=\"Select groups (someone help with the search and select multiple plz)\" variant=\"outlined\" /> */}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <m.TextField required multiline fullWidth\r\n                                 label=\"Description\"\r\n                                 rows={4}\r\n                                 variant=\"outlined\"\r\n                                 value={description}\r\n                                 onChange={changeDescription}\r\n                    />\r\n                </div>\r\n\r\n                <br></br>\r\n                <div>\r\n                    <m.Button>Cancel</m.Button>\r\n                    <m.Button type=\"submit\" onSubmit={onSubmit}>Publish Election</m.Button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default NewElection;\r\n"]},"metadata":{},"sourceType":"module"}