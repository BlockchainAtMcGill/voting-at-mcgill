{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from \"web3\";\n\nvar getWeb3 = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var web3, _web, provider, _web2;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context.next = 13;\n              break;\n            }\n\n            web3 = new Web3(window.ethereum);\n            _context.prev = 2;\n            _context.next = 5;\n            return window.eth_requestAccounts;\n\n          case 5:\n            return _context.abrupt(\"return\", web3);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 11:\n            _context.next = 14;\n            break;\n\n          case 13:\n            if (window.web3) {\n              _web = window.web3;\n              console.log(\"Injected web3 detected.\");\n              resolve(_web);\n            } else {\n              provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n              _web2 = new Web3(provider);\n              console.log(\"No web3 instance injected, using Local web3.\");\n              resolve(_web2);\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function getWeb3() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default getWeb3;","map":{"version":3,"sources":["/home/wen_wong/voting-at-mcgill/client/src/getWeb3.js"],"names":["Web3","getWeb3","window","ethereum","web3","eth_requestAccounts","console","log","resolve","provider","providers","HttpProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,IAAMC,OAAO;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACVC,MAAM,CAACC,QADG;AAAA;AAAA;AAAA;;AAENC,YAAAA,IAFM,GAEC,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAFD;AAAA;AAAA;AAAA,mBAIJD,MAAM,CAACG,mBAJH;;AAAA;AAAA,6CAKFD,IALE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAUT,gBAAIF,MAAM,CAACE,IAAX,EAAiB;AACdA,cAAAA,IADc,GACPF,MAAM,CAACE,IADA;AAEpBE,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,cAAAA,OAAO,CAACJ,IAAD,CAAP;AACD,aAJI,MAKA;AACGK,cAAAA,QADH,GACc,IAAIT,IAAI,CAACU,SAAL,CAAeC,YAAnB,CACf,uBADe,CADd;AAIGP,cAAAA,KAJH,GAIU,IAAIJ,IAAJ,CAASS,QAAT,CAJV;AAKHH,cAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAC,cAAAA,OAAO,CAACJ,KAAD,CAAP;AACD;;AAtBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPH,OAAO;AAAA;AAAA;AAAA,GAAb;;AAwBA,eAAeA,OAAf","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = async() =>{\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      await window.eth_requestAccounts;\n      return (web3);\n    } catch (error) {\n      return error\n    }\n  }\n  else if (window.web3) {\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\nexport default getWeb3;\n"]},"metadata":{},"sourceType":"module"}